<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OfficeDevPnP.Core</name>
    </assembly>
    <members>
        <member name="T:Microsoft.SharePoint.Client.ClientContextExtensions">
            <summary>
            Class that holds the deprecated clientcontext methods
            </summary>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ClientContextExtensions.Clone(Microsoft.SharePoint.Client.ClientRuntimeContext,System.String)">
            <summary>
            Clones a ClientContext object while "taking over" the security context of the existing ClientContext instance
            </summary>
            <param name="clientContext">ClientContext to be cloned</param>
            <param name="siteUrl">Site url to be used for cloned ClientContext</param>
            <returns>A ClientContext object created for the passed site url</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ClientContextExtensions.ExecuteQueryRetry(Microsoft.SharePoint.Client.ClientRuntimeContext,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="clientContext"></param>
            <param name="retryCount">Number of times to retry the request</param>
            <param name="delay">Milliseconds to wait before retrying the request. The delay will be increased (doubled) every retry</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ClientContextExtensions.Clone(Microsoft.SharePoint.Client.ClientRuntimeContext,System.Uri)">
            <summary>
            Clones a ClientContext object while "taking over" the security context of the existing ClientContext instance
            </summary>
            <param name="clientContext">ClientContext to be cloned</param>
            <param name="siteUrl">Site url to be used for cloned ClientContext</param>
            <returns>A ClientContext object created for the passed site url</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ClientContextExtensions.GetSiteCollectionContext(Microsoft.SharePoint.Client.ClientRuntimeContext)">
            <summary>
            Gets a site collection context for the passed web. This site collection client context uses the same credentials
            as the passed client context
            </summary>
            <param name="clientContext">Client context to take the credentials from</param>
            <returns>A site collection client context object for the site collection</returns>
        </member>
        <member name="T:Microsoft.SharePoint.Client.ClientContextExtensions.MaximumRetryAttemptedException">
            <summary>
            Defines a Maximum Retry Attemped Exception
            </summary>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ClientContextExtensions.MaximumRetryAttemptedException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:Microsoft.SharePoint.Client.BrandingExtensions">
            <summary>
            Class that holds the deprecated branding methods
            </summary>
            <summary>
            Class that deals with branding features
            </summary>
        </member>
        <member name="M:Microsoft.SharePoint.Client.BrandingExtensions.ComposedLookExists(Microsoft.SharePoint.Client.Web,System.String)">
            <summary>
            Checks if a composed look exists.
            </summary>
            <param name="web">Web to check</param>
            <param name="composedLookName">Name of the composed look</param>
            <returns>true if it exists; otherwise false</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.BrandingExtensions.CreateComposedLookByName(Microsoft.SharePoint.Client.Web,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Creates (or updates) a composed look in the web site; usually this is done in the root site of the collection.
            </summary>
            <param name="web">Web to create the composed look in</param>
            <param name="lookName">Name of the theme</param>
            <param name="paletteFileName">File name of the palette file in the theme catalog of the site collection; path component ignored.</param>
            <param name="fontFileName">File name of the font file in the theme catalog of the site collection; path component ignored.</param>
            <param name="backgroundFileName">File name of the background image file in the theme catalog of the site collection; path component ignored.</param>
            <param name="masterFileName">File name of the master page in the mastepage catalog of the web site; path component ignored.</param>
            <param name="displayOrder">Display order of the composed look</param>
            <param name="replaceContent">Replace composed look if it already exists (default true)</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.BrandingExtensions.CreateComposedLookByUrl(Microsoft.SharePoint.Client.Web,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Creates (or updates) a composed look in the web site; usually this is done in the root site of the collection.
            </summary>
            <param name="web">Web to create the composed look in</param>
            <param name="lookName">Name of the theme</param>
            <param name="paletteServerRelativeUrl">URL of the palette file, usually in the theme catalog of the site collection</param>
            <param name="fontServerRelativeUrl">URL of the font file, usually in the theme catalog of the site collection</param>
            <param name="backgroundServerRelativeUrl">URL of the background image file, usually in /_layouts/15/images</param>
            <param name="masterServerRelativeUrl">URL of the master page, usually in the masterpage catalog of the web site</param>
            <param name="displayOrder">Display order of the composed look</param>
            <param name="replaceContent">Replace composed look if it already exists (default true)</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.BrandingExtensions.SetComposedLookByUrl(Microsoft.SharePoint.Client.Web,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Retrieves the named composed look, overrides with specified palette, font, background and master page, and then recursively sets the specified values.
            </summary>
            <param name="web">Web to apply composed look to</param>
            <param name="lookName">Name of the composed look to apply; null will apply the override values only</param>
            <param name="paletteServerRelativeUrl">Override palette file URL to use</param>
            <param name="fontServerRelativeUrl">Override font file URL to use</param>
            <param name="backgroundServerRelativeUrl">Override background image file URL to use</param>
            <param name="masterServerRelativeUrl">Override master page file URL to use</param>
            <param name="resetSubsitesToInherit">false (default) to apply to currently inheriting subsites only; true to force all subsites to inherit</param>
            <param name="updateRootOnly">false to apply to subsites; true (default) to only apply to specified site</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.BrandingExtensions.SetThemeByUrl(Microsoft.SharePoint.Client.Web,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Recursively applies the specified palette, font, and background image.
            </summary>
            <param name="web">Web to apply to</param>
            <param name="paletteServerRelativeUrl">URL of palette file to apply</param>
            <param name="fontServerRelativeUrl">URL of font file to apply</param>
            <param name="backgroundServerRelativeUrl">URL of background image to apply</param>
            <param name="resetSubsitesToInherit">false (default) to apply to currently inheriting subsites only; true to force all subsites to inherit</param>
            <param name="updateRootOnly">false (default) to apply to subsites; true to only apply to specified site</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.BrandingExtensions.UploadThemeFile(Microsoft.SharePoint.Client.Web,System.String,System.String)">
            <summary>
            Uploads the specified file (usually an spcolor or spfont file) to the web site themes gallery 
            (usually only exists in the root web of a site collection).
            </summary>
            <param name="web">Web site to upload to</param>
            <param name="localFilePath">Location of the file to be uploaded</param>
            <param name="themeFolderVersion">Leaf folder name to upload to; default is "15"</param>
            <returns>The uploaded file, with at least the ServerRelativeUrl property available</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.BrandingExtensions.UploadThemeFile(Microsoft.SharePoint.Client.Web,System.String,System.String,System.String)">
            <summary>
            Uploads the specified file (usually an spcolor or spfont file) to the web site themes gallery 
            (usually only exists in the root web of a site collection).
            </summary>
            <param name="web">Web site to upload to</param>
            <param name="fileName">Name of the file to upload</param>
            <param name="localFilePath">Location of the file to be uploaded</param>
            <param name="themeFolderVersion">Leaf folder name to upload to; default is "15"</param>
            <returns>The uploaded file, with at least the ServerRelativeUrl property available</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.BrandingExtensions.UploadThemeFile(Microsoft.SharePoint.Client.Web,System.String,System.IO.Stream,System.String)">
            <summary>
            Uploads the specified file (usually an spcolor or spfont file) to the web site themes gallery 
            (usually only exists in the root web of a site collection).
            </summary>
            <param name="web">Web site to upload to</param>
            <param name="fileName">Name of the file to upload</param>
            <param name="localStream">Stream containing the contents of the file</param>
            <param name="themeFolderVersion">Leaf folder name to upload to; default is "15"</param>
            <returns>The uploaded file, with at least the ServerRelativeUrl property available</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.BrandingExtensions.DeployPageLayout(Microsoft.SharePoint.Client.Web,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Can be used to deploy page layouts to master page gallery. 
            <remarks>Should be only used with root web of site collection where publishing features are enabled.</remarks>
            </summary>
            <param name="web">Web as the root site of the publishing site collection</param>
            <param name="sourceFilePath">Full path to the file which will be uploaded</param>
            <param name="title">Title for the page layout</param>
            <param name="description">Description for the page layout</param>
            <param name="associatedContentTypeID">Associated content type ID</param>
            <param name="folderHierarchy">Folder hierarchy where the page layouts will be deployed</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.BrandingExtensions.DeployHtmlPageLayout(Microsoft.SharePoint.Client.Web,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Can be used to deploy html page layouts to master page gallery. 
            <remarks>Should be only used with root web of site collection where publishing features are enabled.</remarks>
            </summary>
            <param name="web">Web as the root site of the publishing site collection</param>
            <param name="sourceFilePath">Full path to the file which will be uploaded</param>
            <param name="title">Title for the page layout</param>
            <param name="description">Description for the page layout</param>
            <param name="associatedContentTypeID">Associated content type ID</param>
            <param name="folderHierarchy">Folder hierarchy where the html page layouts will be deployed</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.BrandingExtensions.DeployMasterPageGalleryItem(Microsoft.SharePoint.Client.Web,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Private method to support all kinds of file uploads to the master page gallery
            </summary>
            <param name="web">Web as the root site of the publishing site collection</param>
            <param name="sourceFilePath">Full path to the file which will be uploaded</param>
            <param name="title">Title for the page layout</param>
            <param name="description">Description for the page layout</param>
            <param name="associatedContentTypeID">Associated content type ID</param>
            <param name="itemContentTypeId">Content type id for the item.</param>
            <param name="folderHierarchy">Folder hierarchy where the file will be uploaded</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.BrandingExtensions.DeployMasterPage(Microsoft.SharePoint.Client.Web,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Deploys a new masterpage
            </summary>
            <param name="web">The web to process</param>
            <param name="sourceFilePath">The path to the source file</param>
            <param name="title">The title of the masterpage</param>
            <param name="description">The description of the masterpage</param>
            <param name="uiVersion"></param>
            <param name="defaultCSSFile"></param>
            <param name="folderPath"></param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.BrandingExtensions.SetMasterPagesByName(Microsoft.SharePoint.Client.Web,System.String,System.String)">
            <summary>
            Can be used to set master page and custom master page in single command
            </summary>
            <param name="web"></param>
            <param name="masterPageName"></param>
            <param name="customMasterPageName"></param>
            <exception cref="T:System.ArgumentException">Thrown when masterPageName or customMasterPageName is a zero-length string or contains only white space</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when masterPageName or customMasterPageName is null</exception>
        </member>
        <member name="M:Microsoft.SharePoint.Client.BrandingExtensions.SetMasterPagesByUrl(Microsoft.SharePoint.Client.Web,System.String,System.String)">
            <summary>
            Can be used to set master page and custom master page in single command
            </summary>
            <param name="web"></param>
            <param name="masterPageUrl"></param>
            <param name="customMasterPageUrl"></param>
            <exception cref="T:System.ArgumentException">Thrown when masterPageName or customMasterPageName is a zero-length string or contains only white space</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when masterPageName or customMasterPageName is null</exception>
        </member>
        <member name="M:Microsoft.SharePoint.Client.BrandingExtensions.SetMasterPageByName(Microsoft.SharePoint.Client.Web,System.String)">
            <summary>
            Master page is set by using master page name. Master page is set from the current web.
            </summary>
            <param name="web">Current web</param>
            <param name="masterPageName">Name of the master page. Path is resolved from this.</param>
            <exception cref="T:System.ArgumentException">Thrown when masterPageName is a zero-length string or contains only white space</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when masterPageName is null</exception>  
        </member>
        <member name="M:Microsoft.SharePoint.Client.BrandingExtensions.SetCustomMasterPageByName(Microsoft.SharePoint.Client.Web,System.String)">
            <summary>
            Master page is set by using master page name. Master page is set from the current web.
            </summary>
            <param name="web">Current web</param>
            <param name="masterPageName">Name of the master page. Path is resolved from this.</param>
            <exception cref="T:System.ArgumentException">Thrown when masterPageName is a zero-length string or contains only white space</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when masterPageName is null</exception>  
        </member>
        <member name="M:Microsoft.SharePoint.Client.BrandingExtensions.GetRelativeUrlForMasterByName(Microsoft.SharePoint.Client.Web,System.String)">
            <summary>
            Returns the relative URL for a masterpage
            </summary>
            <param name="web"></param>
            <param name="masterPageName">The name of the masterpage, e.g. 'default' or 'seattle'</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.BrandingExtensions.GetCurrentComposedLook(Microsoft.SharePoint.Client.Web)">
            <summary>
            Returns the current theme of a web
            </summary>
            <param name="web">Web to check</param>
            <returns>Entity with attributes of current composed look, or null if none</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.BrandingExtensions.GetComposedLook(Microsoft.SharePoint.Client.Web,System.String)">
            <summary>
            Returns the named composed look from the web gallery
            </summary>
            <param name="web">Web to check</param>
            <param name="composedLookName">Name of the composed look to retrieve</param>
            <returns>Entity with the attributes of the composed look, or null if the composed look does not exists or cannot be determined</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.BrandingExtensions.GetPageLayoutListItemByName(Microsoft.SharePoint.Client.Web,System.String)">
            <summary>
            Gets a page layout from the master page catalog
            </summary>
            <param name="web">root web</param>
            <param name="pageLayoutName">name of the page layout to retrieve</param>
            <returns>ListItem holding the page layout, null if not found</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.BrandingExtensions.SetMasterPageByUrl(Microsoft.SharePoint.Client.Web,System.String,System.Boolean,System.Boolean)">
            <summary>
            Set master page by using given URL as parameter. Suitable for example in cases where you want sub sites to reference root site master page gallery. This is typical with publishing sites.
            </summary>
            <param name="web">Context web</param>
            <param name="masterPageServerRelativeUrl">URL to the master page.</param>
            <param name="resetSubsitesToInherit">false (default) to apply to currently inheriting subsites only; true to force all subsites to inherit</param>
            <param name="updateRootOnly">false (default) to apply to subsites; true to only apply to specified site</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.BrandingExtensions.SetCustomMasterPageByUrl(Microsoft.SharePoint.Client.Web,System.String,System.Boolean,System.Boolean)">
            <summary>
            Set Custom master page by using given URL as parameter. Suitable for example in cases where you want sub sites to reference root site master page gallery. This is typical with publishing sites.
            </summary>
            <param name="web">Context web</param>
            <param name="masterPageServerRelativeUrl">URL to the master page.</param>
            <param name="resetSubsitesToInherit">false (default) to apply to currently inheriting subsites only; true to force all subsites to inherit</param>
            <param name="updateRootOnly">false (default) to apply to subsites; true to only apply to specified site</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.BrandingExtensions.SetDefaultPageLayoutForSite(Microsoft.SharePoint.Client.Web,Microsoft.SharePoint.Client.Web,System.String)">
            <summary>
            Sets specific page layout the default page layout for the particular site
            </summary>
            <param name="web"></param>
            <param name="rootWeb"></param>
            <param name="pageLayoutName"></param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.BrandingExtensions.SetSiteToInheritPageLayouts(Microsoft.SharePoint.Client.Web)">
            <summary>
            Can be used to set the site to inherit the default page layout option from parent. Cannot be used for root site of the site collection
            </summary>
            <param name="web">Web to operate against</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.BrandingExtensions.AllowAllPageLayouts(Microsoft.SharePoint.Client.Web)">
            <summary>
            Allow the web to use all available page layouts
            </summary>
            <param name="web">Web to operate against</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.BrandingExtensions.SetAvailablePageLayouts(Microsoft.SharePoint.Client.Web,Microsoft.SharePoint.Client.Web,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Sets the available page layouts
            </summary>
            <param name="web">The web to process</param>
            <param name="rootWeb">The rootweb</param>
            <param name="pageLayouts">The page layouts to make available</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.BrandingExtensions.SetAvailableWebTemplates(Microsoft.SharePoint.Client.Web,System.Collections.Generic.List{OfficeDevPnP.Core.Entities.WebTemplateEntity})">
            <summary>
            Defines which templates are available for subsite creation
            </summary>
            <param name="web">Web to operate against</param>
            <param name="availableTemplates">List of <see cref="T:OfficeDevPnP.Core.Entities.WebTemplateEntity"/> objects that define the templates that are allowed</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.BrandingExtensions.ClearAvailableWebTemplates(Microsoft.SharePoint.Client.Web)">
            <summary>
            Can be used to remote filters from the available web template
            </summary>
            <param name="web"></param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.BrandingExtensions.SetHomePage(Microsoft.SharePoint.Client.Web,System.String)">
            <summary>
            Sets the web home page
            </summary>
            <param name="web">The Web to process</param>
            <param name="rootFolderRelativePath">The path relative to the root folder of the site, e.g. SitePages/Home.aspx</param>
        </member>
        <member name="T:Microsoft.SharePoint.Client.FeatureExtensions">
            <summary>
            Class that holds deprecated feature activation and deactivation methods
            </summary>
            <summary>
            Class that deals with feature activation and deactivation
            </summary>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FeatureExtensions.ActivateFeature(Microsoft.SharePoint.Client.Web,System.Guid,System.Boolean)">
            <summary>
            Activates a site collection or site scoped feature
            </summary>
            <param name="web">Web to be processed - can be root web or sub web</param>
            <param name="featureID">ID of the feature to activate</param>
            <param name="sandboxed">Set to true if the feature is defined in a sandboxed solution</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FeatureExtensions.ActivateFeature(Microsoft.SharePoint.Client.Site,System.Guid,System.Boolean)">
            <summary>
            Activates a site collection or site scoped feature
            </summary>
            <param name="site">Site to be processed</param>
            <param name="featureID">ID of the feature to activate</param>
            <param name="sandboxed">Set to true if the feature is defined in a sandboxed solution</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FeatureExtensions.DeactivateFeature(Microsoft.SharePoint.Client.Web,System.Guid)">
            <summary>
            Deactivates a site collection or site scoped feature
            </summary>
            <param name="web">Web to be processed - can be root web or sub web</param>
            <param name="featureID">ID of the feature to deactivate</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FeatureExtensions.DeactivateFeature(Microsoft.SharePoint.Client.Site,System.Guid)">
            <summary>
            Deactivates a site collection or site scoped feature
            </summary>
            <param name="site">Site to be processed</param>
            <param name="featureID">ID of the feature to deactivate</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FeatureExtensions.IsFeatureActive(Microsoft.SharePoint.Client.Site,System.Guid)">
            <summary>
            Checks if a feature is active
            </summary>
            <param name="site">Site to operate against</param>
            <param name="featureID">ID of the feature to check</param>
            <returns>True if active, false otherwise</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FeatureExtensions.IsFeatureActive(Microsoft.SharePoint.Client.Web,System.Guid)">
            <summary>
            Checks if a feature is active
            </summary>
            <param name="web">Web to operate against</param>
            <param name="featureID">ID of the feature to check</param>
            <returns>True if active, false otherwise</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FeatureExtensions.IsFeatureActiveInternal(Microsoft.SharePoint.Client.FeatureCollection,System.Guid)">
            <summary>
            Checks if a feature is active in the given FeatureCollection.
            </summary>
            <param name="features">FeatureCollection to check in</param>
            <param name="featureID">ID of the feature to check</param>
            <returns>True if active, false otherwise</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FeatureExtensions.ProcessFeature(Microsoft.SharePoint.Client.Site,System.Guid,System.Boolean,System.Boolean)">
            <summary>
            Activates or deactivates a site collection scoped feature
            </summary>
            <param name="site">Site to be processed</param>
            <param name="featureID">ID of the feature to activate/deactivate</param>
            <param name="activate">True to activate, false to deactivate the feature</param>
            <param name="sandboxed">Set to true if the feature is defined in a sandboxed solution</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FeatureExtensions.ProcessFeature(Microsoft.SharePoint.Client.Web,System.Guid,System.Boolean,System.Boolean)">
            <summary>
            Activates or deactivates a web scoped feature
            </summary>
            <param name="web">Web to be processed - can be root web or sub web</param>
            <param name="featureID">ID of the feature to activate/deactivate</param>
            <param name="activate">True to activate, false to deactivate the feature</param>
            <param name="sandboxed">True to specify that the feature is defined in a sandboxed solution</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FeatureExtensions.ProcessFeatureInternal(Microsoft.SharePoint.Client.FeatureCollection,System.Guid,System.Boolean,Microsoft.SharePoint.Client.FeatureDefinitionScope)">
            <summary>
            Activates or deactivates a site collection or web scoped feature
            </summary>
            <param name="features">Feature Collection which contains the feature</param>
            <param name="featureID">ID of the feature to activate/deactivate</param>
            <param name="activate">True to activate, false to deactivate the feature</param>
            <param name="scope">Scope of the feature definition</param>
        </member>
        <member name="T:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions">
            <summary>
            This class holds deprecated extension methods that will help you work with fields and content types.
            </summary>
            <summary>
            This class provides extension methods that will help you work with fields and content types.
            </summary>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.CreateField(Microsoft.SharePoint.Client.Web,OfficeDevPnP.Core.Entities.FieldCreationInformation,System.Boolean)">
            <summary>
            Create field to web remotely
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="fieldCreationInformation">Creation Information for the field.</param>
            <param name="executeQuery">Optionally skip the executeQuery action</param>
            <returns>The newly created field or existing field.</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.CreateField``1(Microsoft.SharePoint.Client.Web,OfficeDevPnP.Core.Entities.FieldCreationInformation,System.Boolean)">
            <summary>
            Create field to web remotely
            </summary>
            <typeparam name="TField">The created field type to return.</typeparam>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="fieldCreationInformation">Field creation information</param>
            <param name="executeQuery">Optionally skip the executeQuery action</param>
            <returns>The newly created field or existing field.</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.CreateField(Microsoft.SharePoint.Client.Web,System.String,System.Boolean)">
            <summary>
            Create field to web remotely
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="fieldAsXml">The XML declaration of SiteColumn definition</param>
            <param name="executeQuery"></param>
            <returns>The newly created field or existing field.</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.RemoveFieldByInternalName(Microsoft.SharePoint.Client.Web,System.String)">
            <summary>
            Removes a field by specifying its internal name
            </summary>
            <param name="web"></param>
            <param name="internalName"></param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.CreateFieldsFromXMLFile(Microsoft.SharePoint.Client.Web,System.String)">
            <summary>
            Creates fields from feature element xml file schema. XML file can contain one or many field definitions created using classic feature framework structure.
            </summary>
            <param name="web">Site to be processed - can be root web or sub site. Site columns should be created to root site.</param>
            <param name="xmlFilePath">Absolute path to the xml location</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.CreateFieldsFromXMLString(Microsoft.SharePoint.Client.Web,System.String)">
            <summary>
            Creates fields from feature element xml file schema. XML file can contain one or many field definitions created using classic feature framework structure.
            </summary>
            <param name="web">Site to be processed - can be root web or sub site. Site columns should be created to root site.</param>
            <param name="xmlStructure">XML structure in string format</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.CreateFieldsFromXML(Microsoft.SharePoint.Client.Web,System.Xml.Linq.XDocument)">
            <summary>
            Creates field from xml structure which follows the classic feature framework structure
            </summary>
            <param name="web">Site to be processed - can be root web or sub site. Site columns should be created to root site.</param>
            <param name="xDocument">Actual XML document</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.FieldExistsById(Microsoft.SharePoint.Client.Web,System.Guid)">
            <summary>
            Returns if the field is found
            </summary>
            <param name="web">Site to be processed - can be root web or sub site. Site columns should be created to root site.</param>
            <param name="fieldId">Guid for the field ID</param>
            <returns>True or false depending on the field existence</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.GetFieldById``1(Microsoft.SharePoint.Client.Web,System.Guid)">
            <summary>
            Returns the field if it exists. Null if it does not exist.
            </summary>
            <typeparam name="TField">The selected field type to return.</typeparam>
            <param name="web">Site to be processed - can be root web or sub site. Site columns should be created to root site.</param>
            <param name="fieldId">Guid for the field ID</param>
            <returns>Field of type TField</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.GetFieldByName``1(Microsoft.SharePoint.Client.FieldCollection,System.String)">
            <summary>
            Returns the field if it exists. Null if it does not exist.
            </summary>
            <typeparam name="TField">The selected field type to return.</typeparam>
            <param name="fields">FieldCollection to be processed.</param>
            <param name="internalName">Guid for the field ID</param>
            <returns>Field of type TField</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.FieldExistsByName(Microsoft.SharePoint.Client.Web,System.String)">
            <summary>
            Returns if the field is found
            </summary>
            <param name="web">Site to be processed - can be root web or sub site. Site columns should be created to root site.</param>
            <param name="fieldName">String for the field internal name to be used as query criteria</param>
            <returns>True or false depending on the field existence</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.FieldExistsById(Microsoft.SharePoint.Client.Web,System.String)">
            <summary>
            Does field exist in web
            </summary>
            <param name="web">Site to be processed - can be root web or sub site. Site columns should be created to root site.</param>
            <param name="fieldId">String representation of the field ID (=guid)</param>
            <returns>True if exists, false otherwise</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.FieldExistsByNameInContentType(Microsoft.SharePoint.Client.Web,System.String,System.String)">
            <summary>
            Field exists in content type
            </summary>
            <param name="web">Site to be processed - can be root web or sub site. Site columns should be created to root site.</param>
            <param name="contentTypeName">Name of the content type</param>
            <param name="fieldName">Name of the field</param>
            <returns>True if exists, false otherwise</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.CreateField(Microsoft.SharePoint.Client.List,OfficeDevPnP.Core.Entities.FieldCreationInformation,System.Boolean)">
            <summary>
            Adds field to a list
            </summary>
            <param name="list">List to process</param>
            <param name="fieldCreationInformation">Creation information for the field</param>
            <param name="executeQuery"></param>
            <returns>The newly created field or existing field.</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.CreateField``1(Microsoft.SharePoint.Client.List,OfficeDevPnP.Core.Entities.FieldCreationInformation,System.Boolean)">
            <summary>
            Adds field to a list
            </summary>
            <typeparam name="TField">The selected field type to return.</typeparam>
            <param name="list">List to process</param>
            <param name="fieldCreationInformation">Field creation information</param>
            <param name="executeQuery">Optionally skip the executeQuery action</param>
            <returns>The newly created field or existing field.</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.CreateFieldBase``1(Microsoft.SharePoint.Client.FieldCollection,OfficeDevPnP.Core.Entities.FieldCreationInformation,System.Boolean)">
            <summary>
            Base implementation for creating fields
            </summary>
            <typeparam name="TField">The selected field type to return.</typeparam>
            <param name="fields">Field collection to which the created field will be added</param>
            <param name="fieldCreationInformation">The information about the field to be created</param>
            <param name="executeQuery">Optionally skip the executeQuery action</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.FormatFieldXml(OfficeDevPnP.Core.Entities.FieldCreationInformation)">
            <summary>
            Formats a fieldcreationinformation object into Field CAML xml.
            </summary>
            <param name="fieldCreationInformation"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.CreateField(Microsoft.SharePoint.Client.List,System.String)">
            <summary>
            Adds a field to a list
            </summary>
            <param name="list">List to process</param>
            <param name="fieldAsXml">The XML declaration of SiteColumn definition</param>
            <returns>The newly created field or existing field.</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.FieldExistsById(Microsoft.SharePoint.Client.List,System.Guid)">
            <summary>
            Returns if the field is found
            </summary>
            <param name="list">List to process</param>
            <param name="fieldId">Guid of the field ID</param>
            <returns>True if the fields exists, false otherwise</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.FieldExistsById(Microsoft.SharePoint.Client.List,System.String)">
            <summary>
            Returns if the field is found, query based on the ID
            </summary>
            <param name="list">List to process</param>
            <param name="fieldId">String representation of the field ID (=guid)</param>
            <returns>True if the fields exists, false otherwise</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.FieldExistsByName(Microsoft.SharePoint.Client.List,System.String)">
            <summary>
            Field exists in list by name
            </summary>
            <param name="list">List to process</param>
            <param name="fieldName">Internal name of the field</param>
            <returns>True if the fields exists, false otherwise</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.GetFields(Microsoft.SharePoint.Client.List,System.String[])">
            <summary>
            Gets a list of fields from a list by names.
            </summary>
            <param name="list">The target list containing the fields.</param>
            <param name="fieldInternalNames">List of field names to retreieve.</param>
            <returns>List of fields requested.</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.ParseAdditionalAttributes(System.String)">
            <summary>
            Helper method to parse Key="Value" strings into a keyvaluepair
            </summary>
            <param name="xmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.AddContentTypeToListById(Microsoft.SharePoint.Client.Web,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Adds content type to list
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="listTitle">Title of the list</param>
            <param name="contentTypeId">Complete ID for the content type</param>
            <param name="defaultContent">Optionally make this the default content type</param>
            <param name="searchContentTypeInSiteHierarchy">search for content type in site hierarchy</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.AddContentTypeToListByName(Microsoft.SharePoint.Client.Web,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Adds content type to list
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="listTitle">Title of the list</param>
            <param name="contentTypeName">Name of the content type</param>
            <param name="defaultContent">Optionally make this the default content type</param>
            <param name="searchContentTypeInSiteHierarchy">search for content type in site hierarchy</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.AddContentTypeToList(Microsoft.SharePoint.Client.Web,System.String,Microsoft.SharePoint.Client.ContentType,System.Boolean)">
            <summary>
            Adds content type to list
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="listTitle">Title of the list</param>
            <param name="contentType">Content type to be added to the list</param>
            <param name="defaultContent">If set true, content type is updated to be default content type for the list</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.AddContentTypeToListById(Microsoft.SharePoint.Client.List,System.String,System.Boolean,System.Boolean)">
            <summary>
            Add content type to list
            </summary>
            <param name="list">List to add content type to</param>
            <param name="contentTypeID">Complete ID for the content type</param>
            <param name="defaultContent">If set true, content type is updated to be default content type for the list</param>
            <param name="searchContentTypeInSiteHierarchy">search for content type in site hierarchy</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.AddContentTypeToListByName(Microsoft.SharePoint.Client.List,System.String,System.Boolean,System.Boolean)">
            <summary>
            Add content type to list
            </summary>
            <param name="list">List to add content type to</param>
            <param name="contentTypeName">Name of the content type</param>
            <param name="defaultContent">If set true, content type is updated to be default content type for the list</param>
            <param name="searchContentTypeInSiteHierarchy">search for content type in site hierarchy</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.AddContentTypeToList(Microsoft.SharePoint.Client.List,Microsoft.SharePoint.Client.ContentType,System.Boolean)">
            <summary>
            Add content type to list
            </summary>
            <param name="list">List to add content type to</param>
            <param name="contentType">Content type to add to the list</param>
            <param name="defaultContent">If set true, content type is updated to be default content type for the list</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.AddFieldToContentTypeById(Microsoft.SharePoint.Client.Web,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Associates field to content type
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="contentTypeID">String representation of the id of the content type to add the field to</param>
            <param name="fieldId">String representation of the field ID (=guid)</param>
            <param name="required">True if the field is required</param>
            <param name="hidden">True if the field is hidden</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.AddFieldToContentTypeByName(Microsoft.SharePoint.Client.Web,System.String,System.Guid,System.Boolean,System.Boolean)">
            <summary>
            Associates field to content type
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="contentTypeName">Name of the content type</param>
            <param name="fieldID">Guid representation of the field ID</param>
            <param name="required">True if the field is required</param>
            <param name="hidden">True if the field is hidden</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.AddFieldToContentType(Microsoft.SharePoint.Client.Web,Microsoft.SharePoint.Client.ContentType,Microsoft.SharePoint.Client.Field,System.Boolean,System.Boolean)">
            <summary>
            Associates field to content type
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="contentType">Content type to associate field to</param>
            <param name="field">Field to associate to the content type</param>
            <param name="required">Optionally make this a required field</param>
            <param name="hidden">Optionally make this a hidden field</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.BestMatchContentTypeId(Microsoft.SharePoint.Client.List,System.String)">
            <summary>
            Searches the list content types and returns the content type identifier (ID) that is the 
            nearest match to the specified content type ID.
            </summary>
            <param name="list">The list to check for content types</param>
            <param name="baseContentTypeId">A string with the base content type ID to match.</param>
            <returns>The value of the Id property for the content type with the closest match to the value 
            of the specified content type ID. </returns>
            <remarks>
            <para>
            If the search finds multiple matches, the shorter ID is returned. For example, if 0x0101 is the 
            argument, and the collection contains both 0x010109 and 0x01010901, the method returns 0x010109.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.ContentTypeExistsById(Microsoft.SharePoint.Client.Web,System.String,System.Boolean)">
            <summary>
            Does content type exists in the web
            </summary>
            <param name="web">Web to be processed</param>
            <param name="contentTypeId">Complete ID for the content type</param>
            <param name="searchInSiteHierarchy">Searches accross all content types in the site up to the root site</param>
            <returns>True if the content type exists, false otherwise</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.ContentTypeExistsByName(Microsoft.SharePoint.Client.Web,System.String,System.Boolean)">
            <summary>
            Does content type exists in the web
            </summary>
            <param name="web">Web to be processed</param>
            <param name="contentTypeName">Name of the content type</param>
            <param name="searchInSiteHierarchy">Searches accross all content types in the site up to the root site</param>
            <returns>True if the content type exists, false otherwise</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.ContentTypeExistsById(Microsoft.SharePoint.Client.Web,System.String,System.String)">
            <summary>
            Does content type exist in web
            </summary>
            <param name="web">Web to be processed</param>
            <param name="listTitle">Title of the list to be updated</param>
            <param name="contentTypeId">Complete ID for the content type</param>
            <returns>True if the content type exists, false otherwise</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.ContentTypeExistsById(Microsoft.SharePoint.Client.List,System.String)">
            <summary>
            Does content type exist in list
            </summary>
            <param name="list">List to update</param>
            <param name="contentTypeId">Complete ID for the content type</param>
            <returns>True if the content type exists, false otherwise</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.ContentTypeExistsByName(Microsoft.SharePoint.Client.Web,System.String,System.String)">
            <summary>
            Does content type exist in web
            </summary>
            <param name="web">Web to be processed</param>
            <param name="listTitle">Title of the list to be updated</param>
            <param name="contentTypeName">Name of the content type</param>
            <returns>True if the content type exists, false otherwise</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.ContentTypeExistsByName(Microsoft.SharePoint.Client.List,System.String)">
            <summary>
            Does content type exist in list
            </summary>
            <param name="list">List to update</param>
            <param name="contentTypeName">Name of the content type</param>
            <returns>True if the content type exists, false otherwise</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.CreateContentTypeFromXMLFile(Microsoft.SharePoint.Client.Web,System.String)">
            <summary>
            Create a content type based on the classic feature framework structure.
            </summary>
            <param name="web">Web to operate against</param>
            <param name="absolutePathToFile">Absolute path to the xml location</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.CreateContentTypeFromXMLString(Microsoft.SharePoint.Client.Web,System.String)">
            <summary>
            Create a content type based on the classic feature framework structure.
            </summary>
            <param name="web">Web to operate against</param>
            <param name="xmlStructure">XML structure in string format</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.CreateContentTypeFromXML(Microsoft.SharePoint.Client.Web,System.Xml.Linq.XDocument)">
            <summary>
            Create a content type based on the classic feature framework structure.
            </summary>
            <param name="web">Web to operate against</param>
            <param name="xDocument">Actual XML document</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.CreateContentType(Microsoft.SharePoint.Client.Web,System.String,System.String,System.String)">
            <summary>
            Create new content type to web
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="name">Name of the content type</param>
            <param name="id">Complete ID for the content type</param>
            <param name="group">Group for the content type</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.CreateContentType(Microsoft.SharePoint.Client.Web,System.String,System.String,System.String,System.String,Microsoft.SharePoint.Client.ContentType)">
            <summary>
            Create new content type to web
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="name">Name of the content type</param>
            <param name="description">Description for the content type</param>
            <param name="id">Complete ID for the content type</param>
            <param name="group">Group for the content type</param>
            <param name="parentContentType">Parent Content Type</param>
            <returns>The created content type</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.GetContentTypeByName(Microsoft.SharePoint.Client.Web,System.String,System.Boolean)">
            <summary>
            Return content type by name
            </summary>
            <param name="web">Web to be processed</param>
            <param name="contentTypeName">Name of the content type</param>
            <param name="searchInSiteHierarchy">Searches accross all content types in the site up to the root site</param>
            <returns>Content type object or null if was not found</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.GetContentTypeById(Microsoft.SharePoint.Client.Web,System.String,System.Boolean)">
            <summary>
            Return content type by Id
            </summary>
            <param name="web">Web to be processed</param>
            <param name="contentTypeId">Complete ID for the content type</param>
            <param name="searchInSiteHierarchy">Searches accross all content types in the site up to the root site</param>
            <returns>Content type object or null if was not found</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.GetContentTypeByName(Microsoft.SharePoint.Client.List,System.String)">
            <summary>
            Return content type by name
            </summary>
            <param name="list">List to update</param>
            <param name="contentTypeName">Name of the content type</param>
            <returns>Content type object or null if was not found</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.GetContentTypeById(Microsoft.SharePoint.Client.List,System.String)">
            <summary>
            Return content type by Id
            </summary>
            <param name="list">List to update</param>
            <param name="contentTypeId">Complete ID for the content type</param>
            <returns>Content type object or null if was not found</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.RemoveContentTypeFromListByName(Microsoft.SharePoint.Client.Web,System.String,System.String)">
            <summary>
            Removes content type from list
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="listTitle">Title of the list</param>
            <param name="contentTypeName">The name of the content type</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.RemoveContentTypeFromListByName(Microsoft.SharePoint.Client.Web,Microsoft.SharePoint.Client.List,System.String)">
            <summary>
            Removes content type from list
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="list">The List</param>
            <param name="contentTypeName">The name of the content type</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.RemoveContentTypeFromListById(Microsoft.SharePoint.Client.Web,System.String,System.String)">
            <summary>
            Removes content type from a list
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="listTitle">Title of the list</param>
            <param name="contentTypeId">Complete ID for the content type</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.RemoveContentTypeFromListById(Microsoft.SharePoint.Client.Web,Microsoft.SharePoint.Client.List,System.String)">
            <summary>
            Removes content type from a list
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="list">The List</param>
            <param name="contentTypeId">Complete ID for the content type</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.RemoveContentTypeFromList(Microsoft.SharePoint.Client.Web,Microsoft.SharePoint.Client.List,Microsoft.SharePoint.Client.ContentType)">
            <summary>
            Removes content type from a list
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="list">The List</param>
            <param name="contentType">The Content Type</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.SetDefaultContentTypeToList(Microsoft.SharePoint.Client.Web,Microsoft.SharePoint.Client.List,System.String)">
            <summary>
            Set default content type to list
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="list">List to update</param>
            <param name="contentTypeId">Complete ID for the content type</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.SetDefaultContentTypeToList(Microsoft.SharePoint.Client.Web,Microsoft.SharePoint.Client.List,Microsoft.SharePoint.Client.ContentType)">
            <summary>
            Set default content type to list
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="list">List to update</param>
            <param name="contentType">Content type to make default</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.SetDefaultContentTypeToList(Microsoft.SharePoint.Client.Web,System.String,System.String)">
            <summary>
            Set default content type to list
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="listTitle">Title of the list to be updated</param>
            <param name="contentTypeId">Complete ID for the content type</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.SetDefaultContentTypeToList(Microsoft.SharePoint.Client.Web,System.String,Microsoft.SharePoint.Client.ContentType)">
            <summary>
            Set's default content type list. 
            </summary>
            <remarks>Notice. Currently removes other content types from the list. Known issue</remarks>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="listTitle">Title of the list to be updated</param>
            <param name="contentType">Content type to make default</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.SetDefaultContentTypeToList(Microsoft.SharePoint.Client.List,System.String)">
            <summary>
            Set's default content type list. 
            </summary>
            <remarks>Notice. Currently removes other content types from the list. Known issue</remarks>
            <param name="list">List to update</param>
            <param name="contentTypeId">Complete ID for the content type</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.SetDefaultContentTypeToList(Microsoft.SharePoint.Client.List,Microsoft.SharePoint.Client.ContentType)">
            <summary>
            Set default content type to list
            </summary>
            <param name="list">List to update</param>
            <param name="contentType">Content type to make default</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.ReorderContentTypes(Microsoft.SharePoint.Client.List,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Reorders content types on the list. The first one in the list is the default item.
            Any items left out from the list will still be on the content type, but will not be visible on the new button.
            </summary>
            <param name="list">Target list containing the content types</param>
            <param name="contentTypeNamesOrIds">Content type names or ids to sort.</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.SetLocalizationForContentType(Microsoft.SharePoint.Client.Web,System.String,System.String,System.String,System.String)">
            <summary>
            Set localized labels for content type
            </summary>
            <param name="web">Web to operate on</param>
            <param name="contentTypeName">Name of the content type</param>
            <param name="cultureName">Culture for the localization (en-es, nl-be, fi-fi,...)</param>
            <param name="nameResource">Localized value for the Name property</param>
            <param name="descriptionResource">Localized value for the Description property</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.SetLocalizationForContentType(Microsoft.SharePoint.Client.List,System.String,System.String,System.String,System.String)">
            <summary>
            Set localized labels for content type
            </summary>
            <param name="list">List to update</param>
            <param name="contentTypeId">Complete ID for the content type</param>
            <param name="cultureName">Culture for the localization (en-es, nl-be, fi-fi,...)</param>
            <param name="nameResource">Localized value for the Name property</param>
            <param name="descriptionResource">Localized value for the Description property</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.SetLocalizationForContentType(Microsoft.SharePoint.Client.ContentType,System.String,System.String,System.String)">
            <summary>
            Set localized labels for content type
            </summary>
            <param name="contentType">Name of the content type</param>
            <param name="cultureName">Culture for the localization (en-es, nl-be, fi-fi,...)</param>
            <param name="nameResource">Localized value for the Name property</param>
            <param name="descriptionResource">Localized value for the Description property</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.SetLocalizationForField(Microsoft.SharePoint.Client.Web,System.Guid,System.String,System.String,System.String)">
            <summary>
            Set localized labels for field
            </summary>
            <param name="web">Web to operate on</param>
            <param name="siteColumnId">Guid with the site column ID</param>
            <param name="cultureName">Culture for the localization (en-es, nl-be, fi-fi,...)</param>
            <param name="titleResource">Localized value for the Title property</param>
            <param name="descriptionResource">Localized value for the Description property</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.SetLocalizationForField(Microsoft.SharePoint.Client.Web,System.String,System.String,System.String,System.String)">
            <summary>
            Set localized labels for field
            </summary>
            <param name="web">Web to operate on</param>
            <param name="siteColumnName">Name of the site column</param>
            <param name="cultureName">Culture for the localization (en-es, nl-be, fi-fi,...)</param>
            <param name="titleResource">Localized value for the Title property</param>
            <param name="descriptionResource">Localized value for the Description property</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.SetLocalizationForField(Microsoft.SharePoint.Client.Web,Microsoft.SharePoint.Client.Field,System.String,System.String,System.String)">
            <summary>
            Set localized labels for field
            </summary>
            <param name="web">Web to operate on</param>
            <param name="siteColumn">Site column to localize</param>
            <param name="cultureName">Culture for the localization (en-es, nl-be, fi-fi,...)</param>
            <param name="titleResource">Localized value for the Title property</param>
            <param name="descriptionResource">Localized value for the Description property</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.SetLocalizationForField(Microsoft.SharePoint.Client.List,System.Guid,System.String,System.String,System.String)">
            <summary>
            Set localized labels for field
            </summary>
            <param name="list">List to update</param>
            <param name="siteColumnId">Guid of the site column ID</param>
            <param name="cultureName">Culture for the localization (en-es, nl-be, fi-fi,...)</param>
            <param name="titleResource">Localized value for the Title property</param>
            <param name="descriptionResource">Localized value for the Description property</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.SetLocalizationForField(Microsoft.SharePoint.Client.List,System.String,System.String,System.String,System.String)">
            <summary>
            Set localized labels for field
            </summary>
            <param name="list">List to update</param>
            <param name="siteColumnName">Name of the site column</param>
            <param name="cultureName">Culture for the localization (en-es, nl-be, fi-fi,...)</param>
            <param name="titleResource">Localized value for the Title property</param>
            <param name="descriptionResource">Localized value for the Description property</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.SetLocalizationForField(Microsoft.SharePoint.Client.List,Microsoft.SharePoint.Client.Field,System.String,System.String,System.String)">
            <summary>
            Set localized labels for field
            </summary>
            <param name="list">List to update</param>
            <param name="siteColumn">Site column to update</param>
            <param name="cultureName">Culture for the localization (en-es, nl-be, fi-fi,...)</param>
            <param name="titleResource">Localized value for the Title property</param>
            <param name="descriptionResource">Localized value for the Description property</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FieldAndContentTypeExtensions.SetLocalizationForField(Microsoft.SharePoint.Client.Field,System.String,System.String,System.String)">
            <summary>
            Set localized labels for field
            </summary>
            <param name="field">Field to update</param>
            <param name="cultureName">Culture for the localization (en-es, nl-be, fi-fi,...)</param>
            <param name="titleResource">Localized value for the Title property</param>
            <param name="descriptionResource">Localized value for the Description property</param>
        </member>
        <member name="T:Microsoft.SharePoint.Client.FileFolderExtensions">
            <summary>
            Class that holds the deprecated file and folder methods
            </summary>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FileFolderExtensions.ApproveFile(Microsoft.SharePoint.Client.Web,System.String,System.String)">
            <summary>
            Approves a file
            </summary>
            <param name="web">The web to process</param>
            <param name="serverRelativeUrl">The server relative url of the file to approve</param>
            <param name="comment">Message to be recorded with the approval</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FileFolderExtensions.CheckInFile(Microsoft.SharePoint.Client.Web,System.String,Microsoft.SharePoint.Client.CheckinType,System.String)">
            <summary>
            Checks in a file
            </summary>
            <param name="web">The web to process</param>
            <param name="serverRelativeUrl">The server relative url of the file to checkin</param>
            <param name="checkinType">The type of the checkin</param>
            <param name="comment">Message to be recorded with the approval</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FileFolderExtensions.CheckOutFile(Microsoft.SharePoint.Client.Web,System.String)">
            <summary>
            Checks out a file
            </summary>
            <param name="web">The web to process</param>
            <param name="serverRelativeUrl">The server relative url of the file to checkout</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FileFolderExtensions.CreateDocumentSet(Microsoft.SharePoint.Client.Folder,System.String,Microsoft.SharePoint.Client.ContentTypeId)">
            <summary>
            Creates a new document set as a child of an existing folder, with the specified content type ID.
            </summary>
            <param name="folder"></param>
            <param name="documentSetName"></param>
            <param name="contentTypeId">Content type of the document set</param>
            <returns>The created Folder representing the document set, so that additional operations (such as setting properties) can be done.</returns>
            <remarks>
            <example>
                var setContentType = list.BestMatchContentTypeId(BuiltInContentTypeId.DocumentSet);
                var set1 = list.RootFolder.CreateDocumentSet("Set 1", setContentType);
            </example>
            </remarks>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FileFolderExtensions.CreateFolder(Microsoft.SharePoint.Client.Web,System.String)">
            <summary>
            Creates a folder with the given name as a child of the Web. 
            Note it is more common to create folders within an existing Folder, such as the RootFolder of a List.
            </summary>
            <param name="web">Web to check for the named folder</param>
            <param name="folderName">Folder name to retrieve or create</param>
            <returns>The newly created Folder, so that additional operations (such as setting properties) can be done.</returns>
            <remarks>
            <para>
            Note that this only checks one level of folder (the Folders collection) and cannot accept a name with path characters.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FileFolderExtensions.CreateFolder(Microsoft.SharePoint.Client.Folder,System.String)">
            <summary>
            Creates a folder with the given name.
            </summary>
            <param name="parentFolder">Parent folder to create under</param>
            <param name="folderName">Folder name to retrieve or create</param>
            <returns>The newly created folder</returns>
            <remarks>
            <para>
            Note that this only checks one level of folder (the Folders collection) and cannot accept a name with path characters.
            </para>
            <example>
                var folder = list.RootFolder.CreateFolder("new-folder");
            </example>
            </remarks>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FileFolderExtensions.DoesFolderExists(Microsoft.SharePoint.Client.Web,System.String)">
            <summary>
            Checks if a specific folder exists
            </summary>
            <param name="web">The web to process</param>
            <param name="serverRelativeFolderUrl">Folder to check</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FileFolderExtensions.EnsureFolder(Microsoft.SharePoint.Client.Web,Microsoft.SharePoint.Client.Folder,System.String)">
            <summary>
            Ensure that the folder structure is created. This also ensures hierarchy of folders.
            </summary>
            <param name="web">Web to be processed - can be root web or sub site</param>
            <param name="parentFolder">Parent folder</param>
            <param name="folderPath">Folder path</param>
            <returns>The folder structure</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FileFolderExtensions.EnsureFolder(Microsoft.SharePoint.Client.Web,System.String)">
            <summary>
            Checks if the folder exists at the top level of the web site, and if it does not exist creates it.
            Note it is more common to create folders within an existing Folder, such as the RootFolder of a List.
            </summary>
            <param name="web">Web to check for the named folder</param>
            <param name="folderName">Folder name to retrieve or create</param>
            <returns>The existing or newly created folder</returns>
            <remarks>
            <para>
            Note that this only checks one level of folder (the Folders collection) and cannot accept a name with path characters.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FileFolderExtensions.EnsureFolder(Microsoft.SharePoint.Client.Folder,System.String)">
            <summary>
            Checks if the subfolder exists, and if it does not exist creates it.
            </summary>
            <param name="parentFolder">Parent folder to create under</param>
            <param name="folderName">Folder name to retrieve or create</param>
            <returns>The existing or newly created folder</returns>
            <remarks>
            <para>
            Note that this only checks one level of folder (the Folders collection) and cannot accept a name with path characters.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FileFolderExtensions.EnsureFolderPath(Microsoft.SharePoint.Client.Web,System.String)">
            <summary>
            Check if a folder exists with the specified path (relative to the web), and if not creates it (inside a list if necessary)
            </summary>
            <param name="web">Web to check for the specified folder</param>
            <param name="webRelativeUrl">Path to the folder, relative to the web site</param>
            <returns>The existing or newly created folder</returns>
            <remarks>
            <para>
            If the specified path is inside an existing list, then the folder is created inside that list.
            </para>
            <para>
            Any existing folders are traversed, and then any remaining parts of the path are created as new folders.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FileFolderExtensions.FindFiles(Microsoft.SharePoint.Client.Web,System.String)">
            <summary>
            Finds files in the web. Can be slow.
            </summary>
            <param name="web">The web to process</param>
            <param name="match">a wildcard pattern to match</param>
            <returns>A list with the found <see cref="T:Microsoft.SharePoint.Client.File"/> objects</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FileFolderExtensions.FolderExists(Microsoft.SharePoint.Client.Web,System.String)">
            <summary>
            Checks if the folder exists at the top level of the web site.
            </summary>
            <param name="web">Web to check for the named folder</param>
            <param name="folderName">Folder name to retrieve</param>
            <returns>true if the folder exists; false otherwise</returns>
            <remarks>
            <para>
            Note that this only checks one level of folder (the Folders collection) and cannot accept a name with path characters.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FileFolderExtensions.FolderExists(Microsoft.SharePoint.Client.Folder,System.String)">
            <summary>
            Checks if the subfolder exists.
            </summary>
            <param name="parentFolder">Parent folder to check for the named subfolder</param>
            <param name="folderName">Folder name to retrieve</param>
            <returns>true if the folder exists; false otherwise</returns>
            <remarks>
            <para>
            Note that this only checks one level of folder (the Folders collection) and cannot accept a name with path characters.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FileFolderExtensions.GetFileAsString(Microsoft.SharePoint.Client.Web,System.String)">
            <summary>
            Returns a file as string
            </summary>
            <param name="web">The Web to process</param>
            <param name="serverRelativeUrl">The server relative url to the file</param>
            <returns>The file contents as a string</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FileFolderExtensions.PublishFile(Microsoft.SharePoint.Client.Web,System.String,System.String)">
            <summary>
            Publishes a file existing on a server url
            </summary>
            <param name="web">The web to process</param>
            <param name="serverRelativeUrl">the server relative url of the file to publish</param>
            <param name="comment">Comment recorded with the publish action</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FileFolderExtensions.ResolveSubFolder(Microsoft.SharePoint.Client.Folder,System.String)">
            <summary>
            Gets a folder with a given name in a given <see cref="T:Microsoft.SharePoint.Client.Folder"/>
            </summary>
            <param name="folder"><see cref="T:Microsoft.SharePoint.Client.Folder"/> in which to search for</param>
            <param name="folderName">Name of the folder to search for</param>
            <returns>The found <see cref="T:Microsoft.SharePoint.Client.Folder"/> if available, null otherwise</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FileFolderExtensions.SaveFileToLocal(Microsoft.SharePoint.Client.Web,System.String,System.String,System.String)">
            <summary>
            Saves a remote file to a local folder
            </summary>
            <param name="web">The Web to process</param>
            <param name="serverRelativeUrl">The server relative url to the file</param>
            <param name="localPath">The local folder</param>
            <param name="localFileName">The local filename. If null the filename of the file on the server will be used</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FileFolderExtensions.UploadFile(Microsoft.SharePoint.Client.Folder,System.String,System.String,System.Boolean)">
            <summary>
            Uploads a file to the specified folder.
            </summary>
            <param name="folder">Folder to upload file to.</param>
            <param name="fileName"></param>
            <param name="localFilePath">Location of the file to be uploaded.</param>
            <param name="overwriteIfExists">true (default) to overwite existing files</param>
            <returns>The uploaded File, so that additional operations (such as setting properties) can be done.</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FileFolderExtensions.UploadFile(Microsoft.SharePoint.Client.Folder,System.String,System.IO.Stream,System.Boolean)">
            <summary>
            Uploads a file to the specified folder.
            </summary>
            <param name="folder">Folder to upload file to.</param>
            <param name="fileName">Location of the file to be uploaded.</param>
            <param name="stream"></param>
            <param name="overwriteIfExists">true (default) to overwite existing files</param>
            <returns>The uploaded File, so that additional operations (such as setting properties) can be done.</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FileFolderExtensions.UploadFileWebDav(Microsoft.SharePoint.Client.Folder,System.String,System.String,System.Boolean)">
            <summary>
            Uploads a file to the specified folder by saving the binary directly (via webdav).
            </summary>
            <param name="folder">Folder to upload file to.</param>
            <param name="fileName"></param>
            <param name="localFilePath">Location of the file to be uploaded.</param>
            <param name="overwriteIfExists">true (default) to overwite existing files</param>
            <returns>The uploaded File, so that additional operations (such as setting properties) can be done.</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FileFolderExtensions.UploadFileWebDav(Microsoft.SharePoint.Client.Folder,System.String,System.IO.Stream,System.Boolean)">
            <summary>
            Uploads a file to the specified folder by saving the binary directly (via webdav).
            Note: this method does not work using app only token.
            </summary>
            <param name="folder">Folder to upload file to.</param>
            <param name="fileName">Location of the file to be uploaded.</param>
            <param name="stream"></param>
            <param name="overwriteIfExists">true (default) to overwite existing files</param>
            <returns>The uploaded File, so that additional operations (such as setting properties) can be done.</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FileFolderExtensions.GetFile(Microsoft.SharePoint.Client.Folder,System.String)">
            <summary>
            Gets a file in a document library.
            </summary>
            <param name="folder">Folder containing the target file.</param>
            <param name="fileName">File name.</param>
            <returns>The target file if found, null if no file is found.</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FileFolderExtensions.VerifyIfUploadRequired(Microsoft.SharePoint.Client.File,System.String)">
            <summary>
            Used to compare the server file to the local file.
            This enables users with faster download speeds but slow upload speeds to evaluate if the server file should be overwritten.
            </summary>
            <param name="serverFile">File located on the server.</param>
            <param name="localFile">File to validate against.</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FileFolderExtensions.VerifyIfUploadRequired(Microsoft.SharePoint.Client.File,System.IO.Stream)">
            <summary>
            Used to compare the server file to the local file.
            This enables users with faster download speeds but slow upload speeds to evaluate if the server file should be overwritten.
            </summary>
            <param name="serverFile">File located on the server.</param>
            <param name="localStream">Stream to validate against.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FileFolderExtensions.SetFileProperties(Microsoft.SharePoint.Client.File,System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean)">
            <summary>
            Sets file properties using a dictionary.
            </summary>
            <param name="file">Target file object.</param>
            <param name="properties">Dictionary of properties to set.</param>
            <param name="checkoutIfRequired">Check out the file if necessary to set properties.</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.FileFolderExtensions.PublishFileToLevel(Microsoft.SharePoint.Client.File,Microsoft.SharePoint.Client.FileLevel)">
            <summary>
            Publishes a file based on the type of versioning required on the parent library.
            </summary>
            <param name="file">Target file to publish.</param>
            <param name="level">Target publish direction (Draft and Published only apply, Checkout is ignored).</param>
        </member>
        <member name="T:Microsoft.SharePoint.Client.InformationManagementExtensions">
            <summary>
            Class that holds deprecated information management extension methods
            </summary>
            <summary>
            Class that deals with information management features
            </summary>
        </member>
        <member name="M:Microsoft.SharePoint.Client.InformationManagementExtensions.HasSitePolicyApplied(Microsoft.SharePoint.Client.Web)">
            <summary>
            Does this web have a site policy applied?
            </summary>
            <param name="web">Web to operate on</param>
            <returns>True if a policy has been applied, false otherwise</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.InformationManagementExtensions.GetSiteExpirationDate(Microsoft.SharePoint.Client.Web)">
            <summary>
            Gets the site expiration date
            </summary>
            <param name="web">Web to operate on</param>
            <returns>DateTime value holding the expiration date, DateTime.MinValue in case there was no policy applied</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.InformationManagementExtensions.GetSiteCloseDate(Microsoft.SharePoint.Client.Web)">
            <summary>
            Gets the site closure date
            </summary>
            <param name="web">Web to operate on</param>
            <returns>DateTime value holding the closure date, DateTime.MinValue in case there was no policy applied</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.InformationManagementExtensions.GetSitePolicies(Microsoft.SharePoint.Client.Web)">
            <summary>
            Gets a list of the available site policies
            </summary>
            <param name="web">Web to operate on</param>
            <returns>A list of <see cref="T:OfficeDevPnP.Core.Entities.SitePolicyEntity"/> objects</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.InformationManagementExtensions.GetAppliedSitePolicy(Microsoft.SharePoint.Client.Web)">
            <summary>
            Gets the site policy that currently is applied
            </summary>
            <param name="web">Web to operate on</param>
            <returns>A <see cref="T:OfficeDevPnP.Core.Entities.SitePolicyEntity"/> object holding the applied policy</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.InformationManagementExtensions.GetSitePolicyByName(Microsoft.SharePoint.Client.Web,System.String)">
            <summary>
            Gets the site policy with the given name
            </summary>
            <param name="web">Web to operate on</param>
            <param name="sitePolicy">Site policy to fetch</param>
            <returns>A <see cref="T:OfficeDevPnP.Core.Entities.SitePolicyEntity"/> object holding the fetched policy</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.InformationManagementExtensions.ApplySitePolicy(Microsoft.SharePoint.Client.Web,System.String)">
            <summary>
            Apply a policy to a site
            </summary>
            <param name="web">Web to operate on</param>
            <param name="sitePolicy">Policy to apply</param>
            <returns>True if applied, false otherwise</returns>
        </member>
        <member name="T:Microsoft.SharePoint.Client.JavaScriptExtensions">
            <summary>
            Deprecated JavaScript related methods
            </summary>
            <summary>
            JavaScript related methods
            </summary>
        </member>
        <member name="F:Microsoft.SharePoint.Client.JavaScriptExtensions.SCRIPT_LOCATION">
            <summary>
            Default Script Location value
            </summary>
        </member>
        <member name="M:Microsoft.SharePoint.Client.JavaScriptExtensions.AddJsLink(Microsoft.SharePoint.Client.Web,System.String,System.String,System.Int32)">
            <summary>
            Injects links to javascript files via a adding a custom action to the site
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="key">Identifier (key) for the custom action that will be created</param>
            <param name="scriptLinks">semi colon delimited list of links to javascript files</param>
            <param name="sequence"></param>
            <returns>True if action was ok</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.JavaScriptExtensions.AddJsLink(Microsoft.SharePoint.Client.Site,System.String,System.String,System.Int32)">
            <summary>
            Injects links to javascript files via a adding a custom action to the site
            </summary>
            <param name="site">Site to be processed</param>
            <param name="key">Identifier (key) for the custom action that will be created</param>
            <param name="scriptLinks">semi colon delimited list of links to javascript files</param>
            <param name="sequence"></param>
            <returns>True if action was ok</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.JavaScriptExtensions.AddJsLink(Microsoft.SharePoint.Client.Web,System.String,System.Collections.Generic.IEnumerable{System.String},System.Int32)">
            <summary>
            Injects links to javascript files via a adding a custom action to the site
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="key">Identifier (key) for the custom action that will be created</param>
            <param name="scriptLinks">IEnumerable list of links to javascript files</param>
            <param name="sequence"></param>
            <returns>True if action was ok</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.JavaScriptExtensions.AddJsLink(Microsoft.SharePoint.Client.Site,System.String,System.Collections.Generic.IEnumerable{System.String},System.Int32)">
            <summary>
            Injects links to javascript files via a adding a custom action to the site
            </summary>
            <param name="site">Site to be processed</param>
            <param name="key">Identifier (key) for the custom action that will be created</param>
            <param name="scriptLinks">IEnumerable list of links to javascript files</param>
            <param name="sequence"></param>
            <returns>True if action was ok</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.JavaScriptExtensions.DeleteJsLink(Microsoft.SharePoint.Client.Web,System.String)">
            <summary>
            Removes the custom action that triggers the execution of a javascript link
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="key">Identifier (key) for the custom action that will be deleted</param>
            <returns>True if action was ok</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.JavaScriptExtensions.DeleteJsLink(Microsoft.SharePoint.Client.Site,System.String)">
            <summary>
            Removes the custom action that triggers the execution of a javascript link
            </summary>
            <param name="site">Site to be processed</param>
            <param name="key">Identifier (key) for the custom action that will be deleted</param>
            <returns>True if action was ok</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.JavaScriptExtensions.AddJsBlock(Microsoft.SharePoint.Client.Web,System.String,System.String,System.Int32)">
            <summary>
            Injects javascript via a adding a custom action to the site
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="key">Identifier (key) for the custom action that will be created</param>
            <param name="scriptBlock">Javascript to be injected</param>
            <param name="sequence"></param>
            <returns>True if action was ok</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.JavaScriptExtensions.AddJsBlock(Microsoft.SharePoint.Client.Site,System.String,System.String,System.Int32)">
            <summary>
            Injects javascript via a adding a custom action to the site
            </summary>
            <param name="site">Site to be processed</param>
            <param name="key">Identifier (key) for the custom action that will be created</param>
            <param name="scriptBlock">Javascript to be injected</param>
            <param name="sequence"></param>
            <returns>True if action was ok</returns>
        </member>
        <member name="T:Microsoft.SharePoint.Client.ListExtensions">
            <summary>
            Class that holds deprecated generic list creation and manipulation methods
            </summary>
            <summary>
            Class that provides generic list creation and manipulation methods
            </summary>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ListExtensions.AddRemoteEventReceiver(Microsoft.SharePoint.Client.List,System.String,System.String,Microsoft.SharePoint.Client.EventReceiverType,Microsoft.SharePoint.Client.EventReceiverSynchronization,System.Boolean)">
            <summary>
            Registers a remote event receiver
            </summary>
            <param name="list">The list to process</param>
            <param name="name">The name of the event receiver (needs to be unique among the event receivers registered on this list)</param>
            <param name="url">The URL of the remote WCF service that handles the event</param>
            <param name="eventReceiverType"></param>
            <param name="synchronization"></param>
            <param name="force">If True any event already registered with the same name will be removed first.</param>
            <returns>Returns an EventReceiverDefinition if succeeded. Returns null if failed.</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ListExtensions.AddRemoteEventReceiver(Microsoft.SharePoint.Client.List,System.String,System.String,Microsoft.SharePoint.Client.EventReceiverType,Microsoft.SharePoint.Client.EventReceiverSynchronization,System.Int32,System.Boolean)">
            <summary>
            Registers a remote event receiver
            </summary>
            <param name="list">The list to process</param>
            <param name="name">The name of the event receiver (needs to be unique among the event receivers registered on this list)</param>
            <param name="url">The URL of the remote WCF service that handles the event</param>
            <param name="eventReceiverType"></param>
            <param name="synchronization"></param>
            <param name="sequenceNumber"></param>
            <param name="force">If True any event already registered with the same name will be removed first.</param>
            <returns>Returns an EventReceiverDefinition if succeeded. Returns null if failed.</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ListExtensions.GetEventReceiverById(Microsoft.SharePoint.Client.List,System.Guid)">
            <summary>
            Returns an event receiver definition
            </summary>
            <param name="list"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ListExtensions.GetEventReceiverByName(Microsoft.SharePoint.Client.List,System.String)">
            <summary>
            Returns an event receiver definition
            </summary>
            <param name="list">The list to process</param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ListExtensions.SetPropertyBagValue(Microsoft.SharePoint.Client.List,System.String,System.Int32)">
            <summary>
            Sets a key/value pair in the web property bag
            </summary>
            <param name="list">The list to process</param>
            <param name="key">Key for the property bag entry</param>
            <param name="value">Integer value for the property bag entry</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ListExtensions.SetPropertyBagValue(Microsoft.SharePoint.Client.List,System.String,System.String)">
            <summary>
            Sets a key/value pair in the list property bag
            </summary>
            <param name="list">List that will hold the property bag entry</param>
            <param name="key">Key for the property bag entry</param>
            <param name="value">String value for the property bag entry</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ListExtensions.SetPropertyBagValueInternal(Microsoft.SharePoint.Client.List,System.String,System.Object)">
            <summary>
            Sets a key/value pair in the list property bag
            </summary>
            <param name="list">List that will hold the property bag entry</param>
            <param name="key">Key for the property bag entry</param>
            <param name="value">Value for the property bag entry</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ListExtensions.GetPropertyBagValueInt(Microsoft.SharePoint.Client.List,System.String,System.Int32)">
            <summary>
            Get int typed property bag value. If does not contain, returns default value.
            </summary>
            <param name="list">List to read the property bag value from</param>
            <param name="key">Key of the property bag entry to return</param>
            <param name="defaultValue"></param>
            <returns>Value of the property bag entry as integer</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ListExtensions.GetPropertyBagValueString(Microsoft.SharePoint.Client.List,System.String,System.String)">
            <summary>
            Get string typed property bag value. If does not contain, returns given default value.
            </summary>
            <param name="list">List to read the property bag value from</param>
            <param name="key">Key of the property bag entry to return</param>
            <param name="defaultValue"></param>
            <returns>Value of the property bag entry as string</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ListExtensions.GetPropertyBagValueInternal(Microsoft.SharePoint.Client.List,System.String)">
            <summary>
            Type independent implementation of the property gettter.
            </summary>
            <param name="list">List to read the property bag value from</param>
            <param name="key">Key of the property bag entry to return</param>
            <returns>Value of the property bag entry</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ListExtensions.PropertyBagContainsKey(Microsoft.SharePoint.Client.List,System.String)">
            <summary>
            Checks if the given property bag entry exists
            </summary>
            <param name="list">List to be processed</param>
            <param name="key">Key of the property bag entry to check</param>
            <returns>True if the entry exists, false otherwise</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ListExtensions.RemoveContentTypeByName(Microsoft.SharePoint.Client.List,System.String)">
            <summary>
            Removes a content type from a list/library by name
            </summary>
            <param name="list">The list</param>
            <param name="contentTypeName">The content type name to remove from the list</param>
            <exception cref="T:System.ArgumentException">Thrown when contentTypeName is a zero-length string or contains only white space</exception>
            <exception cref="T:System.ArgumentNullException">contentTypeName is null</exception>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ListExtensions.CreateDocumentLibrary(Microsoft.SharePoint.Client.Web,System.String,System.Boolean,System.String)">
            <summary>
            Adds a document library to a web. Execute Query is called during this implementation
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="listName">Name of the library</param>
            <param name="enableVersioning">Enable versioning on the list</param>
            <param name="urlPath"></param>
            <exception cref="T:System.ArgumentException">Thrown when listName is a zero-length string or contains only white space</exception>
            <exception cref="T:System.ArgumentNullException">listName is null</exception>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ListExtensions.ListExists(Microsoft.SharePoint.Client.Web,System.String)">
            <summary>
            Checks if list exists on the particular site based on the list Title property.
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="listTitle">Title of the list to be checked.</param>
            <exception cref="T:System.ArgumentException">Thrown when listTitle is a zero-length string or contains only white space</exception>
            <exception cref="T:System.ArgumentNullException">listTitle is null</exception>
            <returns>True if the list exists</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ListExtensions.ListExists(Microsoft.SharePoint.Client.Web,System.Guid)">
            <summary>
            Checks if list exists on the particular site based on the list id property.
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="id">The id of the list to be checked.</param>
            <exception cref="T:System.ArgumentException">Thrown when listTitle is a zero-length string or contains only white space</exception>
            <exception cref="T:System.ArgumentNullException">listTitle is null</exception>
            <returns>True if the list exists</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ListExtensions.CreateList(Microsoft.SharePoint.Client.Web,Microsoft.SharePoint.Client.ListTemplateType,System.String,System.Boolean,System.Boolean,System.String,System.Boolean)">
            <summary>
            Adds a default list to a site
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="listType">Built in list template type</param>
            <param name="listName">Name of the list</param>
            <param name="enableVersioning">Enable versioning on the list</param>
            <param name="updateAndExecuteQuery">(Optional) Perform list update and executequery, defaults to true</param>
            <param name="urlPath">(Optional) URL to use for the list</param>
            <param name="enableContentTypes">(Optional) Enable content type management</param>
            <returns>The newly created list</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ListExtensions.CreateList(Microsoft.SharePoint.Client.Web,System.Guid,System.Int32,System.String,System.Boolean,System.Boolean,System.String,System.Boolean)">
            <summary>
            Adds a custom list to a site
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="featureId">Feature that contains the list template</param>
            <param name="listType">Type ID of the list, within the feature</param>
            <param name="listName">Name of the list</param>
            <param name="enableVersioning">Enable versioning on the list</param>
            <param name="updateAndExecuteQuery">(Optional) Perform list update and executequery, defaults to true</param>
            <param name="urlPath">(Optional) URL to use for the list</param>
            <param name="enableContentTypes">(Optional) Enable content type management</param>
            <returns>The newly created list</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ListExtensions.UpdateListVersioning(Microsoft.SharePoint.Client.Web,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Enable/disable versioning on a list
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="listName">List to operate on</param>
            <param name="enableVersioning">True to enable versioning, false to disable</param>
            <param name="enableMinorVersioning">Enable/Disable minor versioning</param>
            <param name="updateAndExecuteQuery">Perform list update and executequery, defaults to true</param>
            <exception cref="T:System.ArgumentException">Thrown when listName is a zero-length string or contains only white space</exception>
            <exception cref="T:System.ArgumentNullException">listName is null</exception>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ListExtensions.UpdateListVersioning(Microsoft.SharePoint.Client.List,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Enable/disable versioning on a list
            </summary>
            <param name="list">List to be processed</param>
            <param name="enableVersioning">True to enable versioning, false to disable</param>
            <param name="enableMinorVersioning">Enable/Disable minor versioning</param>
            <param name="updateAndExecuteQuery">Perform list update and executequery, defaults to true</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ListExtensions.UpdateTaxonomyFieldDefaultValue(Microsoft.SharePoint.Client.Web,System.String,System.String,System.String,System.Guid,System.Guid)">
            <summary>
            Sets the default value for a managed metadata column in the specified list. This operation will not change existing items in the list
            </summary>
            <param name="web">Extension web</param>
            <param name="termName">Name of a specific term</param>
            <param name="listName">Name of list</param>
            <param name="fieldInternalName">Internal name of field</param>
            <param name="groupGuid">TermGroup Guid</param>
            <param name="termSetGuid">TermSet Guid</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ListExtensions.SetJSLinkCustomizations(Microsoft.SharePoint.Client.List,Microsoft.SharePoint.Client.PageType,System.String)">
            <summary>
            Sets JS link customization for a list form
            </summary>
            <param name="list">SharePoint list</param>
            <param name="pageType">Type of form</param>
            <param name="jslink">JSLink to set to the form. Set to empty string to remove the set JSLink customization.
            Specify multiple values separated by pipe symbol. For e.g.: ~sitecollection/_catalogs/masterpage/jquery-2.1.0.min.js|~sitecollection/_catalogs/masterpage/custom.js
            </param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ListExtensions.SetLocalizationLabelsForList(Microsoft.SharePoint.Client.Web,System.String,System.String,System.String,System.String)">
            <summary>
            Can be used to set translations for different cultures. 
            <see href="http://blogs.msdn.com/b/vesku/archive/2014/03/20/office365-multilingual-content-types-site-columns-and-site-other-elements.aspx"/>
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="listTitle">Title of the list</param>
            <param name="cultureName">Culture name like en-us or fi-fi</param>
            <param name="titleResource">Localized Title string</param>
            <param name="descriptionResource">Localized Description string</param>
            <exception cref="T:System.ArgumentException">Thrown when listTitle, cultureName, titleResource, descriptionResource is a zero-length string or contains only white space</exception>
            <exception cref="T:System.ArgumentNullException">listTitle, cultureName, titleResource, descriptionResource is null</exception>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ListExtensions.SetLocalizationLabelsForList(Microsoft.SharePoint.Client.List,System.String,System.String,System.String)">
            <summary>
            Can be used to set translations for different cultures. 
            </summary>
            <example>
                list.SetLocalizationForSiteLabels("fi-fi", "Name of the site in Finnish", "Description in Finnish");
            </example>
            <see href="http://blogs.msdn.com/b/vesku/archive/2014/03/20/office365-multilingual-content-types-site-columns-and-site-other-elements.aspx"/>
            <param name="list">List to be processed </param>
            <param name="cultureName">Culture name like en-us or fi-fi</param>
            <param name="titleResource">Localized Title string</param>
            <param name="descriptionResource">Localized Description string</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ListExtensions.GetListID(Microsoft.SharePoint.Client.Web,System.String)">
            <summary>
            Returns the GUID id of a list
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="listName">List to operate on</param>
            <exception cref="T:System.ArgumentException">Thrown when listName is a zero-length string or contains only white space</exception>
            <exception cref="T:System.ArgumentNullException">listName is null</exception>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ListExtensions.GetListByTitle(Microsoft.SharePoint.Client.Web,System.String)">
            <summary>
            Get list by using Title
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="listTitle">Title of the list to return</param>
            <returns>Loaded list instance matching to title or null</returns>
            <exception cref="T:System.ArgumentException">Thrown when listTitle is a zero-length string or contains only white space</exception>
            <exception cref="T:System.ArgumentNullException">listTitle is null</exception>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ListExtensions.GetListByUrl(Microsoft.SharePoint.Client.Web,System.String)">
            <summary>
            Get list by using Url
            </summary>
            <param name="web">Web (site) to be processed</param>
            <param name="webRelativeUrl">Url of list relative to the web (site), e.g. lists/testlist</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ListExtensions.SetListPermission(Microsoft.SharePoint.Client.List,OfficeDevPnP.Core.Enums.BuiltInIdentity,Microsoft.SharePoint.Client.RoleType)">
            <summary>
            Set custom permission to the list
            </summary>
            <param name="list">List on which permission to be set</param>
            <param name="user">Built in user</param>
            <param name="roleType">Role type</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ListExtensions.SetListPermission(Microsoft.SharePoint.Client.List,Microsoft.SharePoint.Client.Principal,Microsoft.SharePoint.Client.RoleType)">
            <summary>
            Set custom permission to the list
            </summary>
            <param name="list">List on which permission to be set</param>
            <param name="principal">SharePoint Group or User</param>
            <param name="roleType">Role type</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ListExtensions.CreateViewsFromXMLFile(Microsoft.SharePoint.Client.Web,System.String,System.String)">
            <summary>
            Creates list views based on specific xml structure from file
            </summary>
            <param name="web"></param>
            <param name="listUrl"></param>
            <param name="filePath"></param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ListExtensions.CreateViewsFromXMLString(Microsoft.SharePoint.Client.Web,System.String,System.String)">
            <summary>
            Creates views based on specific xml structure from string
            </summary>
            <param name="web"></param>
            <param name="listUrl"></param>
            <param name="xmlString"></param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ListExtensions.CreateViewsFromXML(Microsoft.SharePoint.Client.Web,System.String,System.Xml.XmlDocument)">
            <summary>
            Create list views based on xml structure loaded to memory
            </summary>
            <param name="web"></param>
            <param name="listUrl"></param>
            <param name="xmlDoc"></param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ListExtensions.CreateViewsFromXMLFile(Microsoft.SharePoint.Client.List,System.String)">
            <summary>
            Create list views based on specific xml structure in external file
            </summary>
            <param name="list"></param>
            <param name="filePath"></param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ListExtensions.CreateViewsFromXMLString(Microsoft.SharePoint.Client.List,System.String)">
            <summary>
            Create list views based on specific xml structure in string 
            </summary>
            <param name="list"></param>
            <param name="xmlString"></param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ListExtensions.CreateViewsFromXML(Microsoft.SharePoint.Client.List,System.Xml.XmlDocument)">
            <summary>
            Actual implementation of the view creation logic based on given xml
            </summary>
            <param name="list"></param>
            <param name="xmlDoc"></param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ListExtensions.CreateView(Microsoft.SharePoint.Client.List,System.String,Microsoft.SharePoint.Client.ViewType,System.String[],System.UInt32,System.Boolean,System.String,System.Boolean)">
            <summary>
            Create view to existing list
            </summary>
            <param name="list"></param>
            <param name="viewName"></param>
            <param name="viewType"></param>
            <param name="viewFields"></param>
            <param name="rowLimit"></param>
            <param name="setAsDefault"></param>
            <param name="query"></param>
            <param name="personal"></param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ListExtensions.GetViewById(Microsoft.SharePoint.Client.List,System.Guid)">
            <summary>
            Gets a view by Id
            </summary>
            <param name="list"></param>
            <param name="id"></param>
            <returns>returns null if not found</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ListExtensions.GetViewByName(Microsoft.SharePoint.Client.List,System.String)">
            <summary>
            Gets a view by Name
            </summary>
            <param name="list"></param>
            <param name="name"></param>
            <returns>returns null if not found</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ListExtensions.SetDefaultColumnValues(Microsoft.SharePoint.Client.List,System.Collections.Generic.IEnumerable{OfficeDevPnP.Core.Entities.IDefaultColumnValue})">
            <summary>
            <para>Sets default values for column values.</para>
            <para>In order to for instance set the default Enterprise Metadata keyword field to a term, add the enterprise metadata keyword to a library (internal name "TaxKeyword")</para>
            <para> </para>
            <para>Column values are defined by the DefaultColumnValue class that has 3 properties:</para>
            <para>RelativeFolderPath : / to set a default value for the root of the document library, or /foldername to specify a subfolder</para>
            <para>FieldInternalName : The name of the field to set. For instance "TaxKeyword" to set the Enterprise Metadata field</para>
            <para>Terms : A collection of Taxonomy terms to set</para>
            </summary>
            <param name="list"></param>
            <param name="columnValues"></param>
        </member>
        <member name="T:Microsoft.SharePoint.Client.NavigationExtensions">
            <summary>
            This class holds deprecated navigation related methods
            </summary>
            <summary>
            This class holds navigation related methods
            </summary>
        </member>
        <member name="M:Microsoft.SharePoint.Client.NavigationExtensions.GetNavigationSettings(Microsoft.SharePoint.Client.Web)">
            <summary>
            Returns the navigation settings for the selected web
            </summary>
            <param name="web"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.NavigationExtensions.UpdateNavigationSettings(Microsoft.SharePoint.Client.Web,OfficeDevPnP.Core.Entities.AreaNavigationEntity)">
            <summary>
            Updates navigation settings for the current web
            </summary>
            <param name="web"></param>
            <param name="navigationSettings"></param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.NavigationExtensions.AddNavigationNode(Microsoft.SharePoint.Client.Web,System.String,System.Uri,System.String,OfficeDevPnP.Core.Enums.NavigationType)">
            <summary>
            Add a node to quick launch, top navigation bar or search navigation. The node will be added as the last node in the
            collection.
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="nodeTitle">the title of node to add</param>
            <param name="nodeUri">the url of node to add</param>
            <param name="parentNodeTitle">if string.Empty, then will add this node as top level node</param>
            <param name="navigationType">the type of navigation, quick launch, top navigation or search navigation</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.NavigationExtensions.DeleteNavigationNode(Microsoft.SharePoint.Client.Web,System.String,System.String,OfficeDevPnP.Core.Enums.NavigationType)">
            <summary>
            Deletes a navigation node from the quickLaunch or top navigation bar
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="nodeTitle">the title of node to delete</param>
            <param name="parentNodeTitle">if string.Empty, then will delete this node as top level node</param>
            <param name="navigationType">the type of navigation, quick launch, top navigation or search navigation</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.NavigationExtensions.DeleteAllQuickLaunchNodes(Microsoft.SharePoint.Client.Web)">
            <summary>
            Deletes all Quick Launch nodes
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.NavigationExtensions.UpdateNavigationInheritance(Microsoft.SharePoint.Client.Web,System.Boolean)">
            <summary>
            Updates the navigation inheritance setting
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="inheritNavigation">boolean indicating if navigation inheritance is needed or not</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.NavigationExtensions.LoadSearchNavigation(Microsoft.SharePoint.Client.Web)">
            <summary>
            Loads the search navigation nodes
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <returns>Collection of NavigationNode instances</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.NavigationExtensions.AddCustomAction(Microsoft.SharePoint.Client.Web,OfficeDevPnP.Core.Entities.CustomActionEntity)">
            <summary>
            Adds custom action to a web. If the CustomAction exists the item will be updated.
            Setting CustomActionEntity.Remove == true will delete the CustomAction.
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="customAction">Information about the custom action be added or deleted</param>
            <example>
            var editAction = new CustomActionEntity()
            {
               Title = "Edit Site Classification",
               Description = "Manage business impact information for site collection or sub sites.",
               Sequence = 1000,
               Group = "SiteActions",
               Location = "Microsoft.SharePoint.StandardMenu",
               Url = EditFormUrl,
               ImageUrl = EditFormImageUrl,
               Rights = new BasePermissions(),
            };
            editAction.Rights.Set(PermissionKind.ManageWeb);
            web.AddCustomAction(editAction);
            </example>
            <returns>True if action was successfull</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.NavigationExtensions.AddCustomAction(Microsoft.SharePoint.Client.Site,OfficeDevPnP.Core.Entities.CustomActionEntity)">
            <summary>
            Adds custom action to a site collection. If the CustomAction exists the item will be updated.
            Setting CustomActionEntity.Remove == true will delete the CustomAction.
            </summary>
            <param name="site">Site collection to be processed</param>
            <param name="customAction">Information about the custom action be added or deleted</param>
            <returns>True if action was successfull</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.NavigationExtensions.GetCustomActions(Microsoft.SharePoint.Client.Web)">
            <summary>
            Returns all custom actions in a web
            </summary>
            <param name="web">The web to process</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.NavigationExtensions.GetCustomActions(Microsoft.SharePoint.Client.Site)">
            <summary>
            Returns all custom actions in a web
            </summary>
            <param name="site">The site to process</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.NavigationExtensions.DeleteCustomAction(Microsoft.SharePoint.Client.Web,System.Guid)">
            <summary>
            Removes a custom action
            </summary>
            <param name="web">The web to process</param>
            <param name="id">The id of the action to remove. <seealso>
                    <cref>GetCustomActions</cref>
                </seealso>
            </param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.NavigationExtensions.DeleteCustomAction(Microsoft.SharePoint.Client.Site,System.Guid)">
            <summary>
            Removes a custom action
            </summary>
            <param name="site">The site to process</param>
            <param name="id">The id of the action to remove. <seealso>
                    <cref>GetCustomActions</cref>
                </seealso>
            </param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.NavigationExtensions.CustomActionExists(Microsoft.SharePoint.Client.Web,System.String)">
            <summary>
            Utility method to check particular custom action already exists on the web
            </summary>
            <param name="web"></param>
            <param name="name">Name of the custom action</param>
            <returns></returns>        
        </member>
        <member name="M:Microsoft.SharePoint.Client.NavigationExtensions.CustomActionExists(Microsoft.SharePoint.Client.Site,System.String)">
            <summary>
            Utility method to check particular custom action already exists on the web
            </summary>
            <param name="site"></param>
            <param name="name">Name of the custom action</param>
            <returns></returns>        
        </member>
        <member name="T:Microsoft.SharePoint.Client.PageExtensions">
            <summary>
            Class that holds all deprecated page and web part related operations
            </summary>
            <summary>
            Class that handles all page and web part related operations
            </summary>
        </member>
        <member name="M:Microsoft.SharePoint.Client.PageExtensions.GetWikiPageContent(Microsoft.SharePoint.Client.Web,System.String)">
            <summary>
            Returns the HTML contents of a wiki page
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="serverRelativePageUrl">Server relative url of the page, e.g. /sites/demo/SitePages/Test.aspx</param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">Thrown when serverRelativePageUrl is a zero-length string or contains only white space</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when serverRelativePageUrl is null</exception>
        </member>
        <member name="M:Microsoft.SharePoint.Client.PageExtensions.GetWebParts(Microsoft.SharePoint.Client.Web,System.String)">
            <summary>
            List the web parts on a page
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="serverRelativePageUrl">Server relative url of the page containing the webparts</param>
            <exception cref="T:System.ArgumentException">Thrown when serverRelativePageUrl is a zero-length string or contains only white space</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when serverRelativePageUrl is null</exception>
        </member>
        <member name="M:Microsoft.SharePoint.Client.PageExtensions.AddWebPartToWebPartPage(Microsoft.SharePoint.Client.Web,OfficeDevPnP.Core.Entities.WebPartEntity,System.String)">
            <summary>
            Inserts a web part on a web part page
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="webPart">Information about the web part to insert</param>
            <param name="page">Page to add the web part on</param>
            <exception cref="T:System.ArgumentException">Thrown when page is a zero-length string or contains only white space</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when webPart or page is null</exception>
        </member>
        <member name="M:Microsoft.SharePoint.Client.PageExtensions.AddWebPartToWebPartPage(Microsoft.SharePoint.Client.Web,System.String,OfficeDevPnP.Core.Entities.WebPartEntity)">
            <summary>
            Inserts a web part on a web part page
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="serverRelativePageUrl">Page to add the web part on</param>
            <param name="webPart">Information about the web part to insert</param>
            <exception cref="T:System.ArgumentException">Thrown when serverRelativePageUrl is a zero-length string or contains only white space</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when serverRelativePageUrl or webPart is null</exception>
        </member>
        <member name="M:Microsoft.SharePoint.Client.PageExtensions.AddWebPartToWikiPage(Microsoft.SharePoint.Client.Web,System.String,OfficeDevPnP.Core.Entities.WebPartEntity,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Add web part to a wiki style page
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="folder">System name of the wiki page library - typically sitepages</param>
            <param name="webPart">Information about the web part to insert</param>
            <param name="page">Page to add the web part on</param>
            <param name="row">Row of the wiki table that should hold the inserted web part</param>
            <param name="col">Column of the wiki table that should hold the inserted web part</param>
            <param name="addSpace">Does a blank line need to be added after the web part (to space web parts)</param>
            <exception cref="T:System.ArgumentException">Thrown when folder or page is a zero-length string or contains only white space</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when folder, webPart or page is null</exception>
        </member>
        <member name="M:Microsoft.SharePoint.Client.PageExtensions.AddWebPartToWikiPage(Microsoft.SharePoint.Client.Web,System.String,OfficeDevPnP.Core.Entities.WebPartEntity,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Add web part to a wiki style page
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="serverRelativePageUrl">Server relative url of the page to add the webpart to</param>
            <param name="webPart">Information about the web part to insert</param>
            <param name="row">Row of the wiki table that should hold the inserted web part</param>
            <param name="col">Column of the wiki table that should hold the inserted web part</param>
            <param name="addSpace">Does a blank line need to be added after the web part (to space web parts)</param>
            <exception cref="T:System.ArgumentException">Thrown when serverRelativePageUrl is a zero-length string or contains only white space</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when serverRelativePageUrl or webPart is null</exception>
        </member>
        <member name="M:Microsoft.SharePoint.Client.PageExtensions.AddLayoutToWikiPage(Microsoft.SharePoint.Client.Web,OfficeDevPnP.Core.WikiPageLayout,System.String)">
            <summary>
            Applies a layout to a wiki page
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="layout">Wiki page layout to be applied</param>
            <param name="serverRelativePageUrl"></param>
            <exception cref="T:System.ArgumentException">Thrown when serverRelativePageUrl is a zero-length string or contains only white space</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when serverRelativePageUrl is null</exception>
        </member>
        <member name="M:Microsoft.SharePoint.Client.PageExtensions.AddLayoutToWikiPage(Microsoft.SharePoint.Client.Web,System.String,OfficeDevPnP.Core.WikiPageLayout,System.String)">
            <summary>
            Applies a layout to a wiki page
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="folder">System name of the wiki page library - typically sitepages</param>
            <param name="layout">Wiki page layout to be applied</param>
            <param name="page">Name of the page that will get a new wiki page layout</param>
            <exception cref="T:System.ArgumentException">Thrown when folder or page is a zero-length string or contains only white space</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when folder or page is null</exception>
        </member>
        <member name="M:Microsoft.SharePoint.Client.PageExtensions.AddHtmlToWikiPage(Microsoft.SharePoint.Client.Web,System.String,System.String,System.String)">
            <summary>
            Add html to a wiki style page
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="folder">System name of the wiki page library - typically sitepages</param>
            <param name="html">The html to insert</param>
            <param name="page">Page to add the html on</param>
            <exception cref="T:System.ArgumentException">Thrown when folder, html or page is a zero-length string or contains only white space</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when folder, html or page is null</exception>
        </member>
        <member name="M:Microsoft.SharePoint.Client.PageExtensions.AddHtmlToWikiPage(Microsoft.SharePoint.Client.Web,System.String,System.String)">
            <summary>
            Add HTML to a wiki page
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="serverRelativePageUrl"></param>
            <param name="html"></param>
            <exception cref="T:System.ArgumentException">Thrown when serverRelativePageUrl or html is a zero-length string or contains only white space</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when serverRelativePageUrl or html is null</exception>
        </member>
        <member name="M:Microsoft.SharePoint.Client.PageExtensions.AddHtmlToWikiPage(Microsoft.SharePoint.Client.Web,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Add a HTML fragment to a location on a wiki style page
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="folder">System name of the wiki page library - typically sitepages</param>
            <param name="html">html to be inserted</param>
            <param name="page">Page to add the web part on</param>
            <param name="row">Row of the wiki table that should hold the inserted web part</param>
            <param name="col">Column of the wiki table that should hold the inserted web part</param>
            <exception cref="T:System.ArgumentException">Thrown when folder, html or page is a zero-length string or contains only white space</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when folder, html or page is null</exception>
        </member>
        <member name="M:Microsoft.SharePoint.Client.PageExtensions.AddHtmlToWikiPage(Microsoft.SharePoint.Client.Web,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Add a HTML fragment to a location on a wiki style page
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="serverRelativePageUrl">server relative Url of the page to add the fragment to</param>
            <param name="html">html to be inserted</param>
            <param name="row">Row of the wiki table that should hold the inserted web part</param>
            <param name="col">Column of the wiki table that should hold the inserted web part</param>
            <exception cref="T:System.ArgumentException">Thrown when serverRelativePageUrl or html is a zero-length string or contains only white space</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when serverRelativePageUrl or html is null</exception>
        </member>
        <member name="M:Microsoft.SharePoint.Client.PageExtensions.DeleteWebPart(Microsoft.SharePoint.Client.Web,System.String,System.String,System.String)">
            <summary>
            Deletes a web part from a page
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="folder">System name of the wiki page library - typically sitepages</param>
            <param name="title">Title of the web part that needs to be deleted</param>
            <param name="page">Page to remove the web part from</param>
            <exception cref="T:System.ArgumentException">Thrown when folder, title or page is a zero-length string or contains only white space</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when folder, title or page is null</exception>
        </member>
        <member name="M:Microsoft.SharePoint.Client.PageExtensions.DeleteWebPart(Microsoft.SharePoint.Client.Web,System.String,System.String)">
            <summary>
            Deletes a web part from a page
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="serverRelativePageUrl">Server relative URL of the page to remove</param>
            <param name="title">Title of the web part that needs to be deleted</param>
            <exception cref="T:System.ArgumentException">Thrown when serverRelativePageUrl or title is a zero-length string or contains only white space</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when serverRelativePageUrl or title is null</exception>
        </member>
        <member name="M:Microsoft.SharePoint.Client.PageExtensions.AddWikiPage(Microsoft.SharePoint.Client.Web,System.String,System.String)">
            <summary>
            Adds a blank Wiki page to the site pages library
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="wikiPageLibraryName">Name of the wiki page library</param>
            <param name="wikiPageName">Wiki page to operate on</param>
            <returns>The relative URL of the added wiki page</returns>
            <exception cref="T:System.ArgumentException">Thrown when wikiPageLibraryName or wikiPageName is a zero-length string or contains only white space</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when wikiPageLibraryName or wikiPageName is null</exception>
        </member>
        <member name="M:Microsoft.SharePoint.Client.PageExtensions.AddWikiPageByUrl(Microsoft.SharePoint.Client.Web,System.String,System.String)">
            <summary>
            Adds a wiki page by Url
            </summary>
            <param name="web">The web to process</param>
            <param name="serverRelativePageUrl">Server relative URL of the wiki page to process</param>
            <param name="html">HTML to add to wiki page</param>
            <exception cref="T:System.ArgumentException">Thrown when serverRelativePageUrl is a zero-length string or contains only white space</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when serverRelativePageUrl is null</exception>
        </member>
        <member name="M:Microsoft.SharePoint.Client.PageExtensions.SetWebPartProperty(Microsoft.SharePoint.Client.Web,System.String,System.String,System.Guid,System.String)">
            <summary>
            Sets a web part property
            </summary>
            <param name="web">The web to process</param>
            <param name="key">The key to update</param>
            <param name="value">The value to set</param>
            <param name="id">The id of the webpart</param>
            <param name="serverRelativePageUrl"></param>
            <exception cref="T:System.ArgumentException">Thrown when key or serverRelativePageUrl is a zero-length string or contains only white space</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when key or serverRelativePageUrl is null</exception>
        </member>
        <member name="M:Microsoft.SharePoint.Client.PageExtensions.SetWebPartProperty(Microsoft.SharePoint.Client.Web,System.String,System.Int32,System.Guid,System.String)">
            <summary>
            Sets a web part property
            </summary>
            <param name="web">The web to process</param>
            <param name="key">The key to update</param>
            <param name="value">The value to set</param>
            <param name="id">The id of the webpart</param>
            <param name="serverRelativePageUrl"></param>
            <exception cref="T:System.ArgumentException">Thrown when key or serverRelativePageUrl is a zero-length string or contains only white space</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when key or serverRelativePageUrl is null</exception>
        </member>
        <member name="M:Microsoft.SharePoint.Client.PageExtensions.GetWebPartProperties(Microsoft.SharePoint.Client.Web,System.Guid,System.String)">
            <summary>
            Returns web part properties
            </summary>
            <param name="web">The web to process</param>
            <param name="id">The id of the webpart</param>
            <param name="serverRelativePageUrl"></param>
            <exception cref="T:System.ArgumentException">Thrown when key or serverRelativePageUrl is a zero-length string or contains only white space</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when key or serverRelativePageUrl is null</exception>
        </member>
        <member name="M:Microsoft.SharePoint.Client.PageExtensions.AddPublishingPage(Microsoft.SharePoint.Client.Web,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Adds the publishing page.
            </summary>
            <param name="web">The web.</param>
            <param name="pageName">Name of the page.</param>
            <param name="pageTemplateName">Name of the page template.</param>
            <param name="title">The title.</param>
            <param name="publish">Should the page be published or not?</param>
            <exception cref="T:System.ArgumentNullException">Thrown when key or pageName is a zero-length string or contains only white space</exception>
            <exception cref="T:System.ArgumentException">Thrown when key or pageName is null</exception>
        </member>
        <member name="M:Microsoft.SharePoint.Client.PageExtensions.GetPublishingPage(Microsoft.SharePoint.Client.Web,System.String)">
            <summary>
            Gets a publishing page.
            </summary>
            <param name="web">The web.</param>
            <param name="fileLeafRef">The file leaf reference.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">fileLeafRef</exception>
            <exception cref="T:System.ArgumentException">fileLeafRef</exception>
        </member>
        <member name="T:Microsoft.SharePoint.Client.ProvisioningExtensions">
            <summary>
            File-based (CAML) deprecated provisioning extensions
            </summary>
            <summary>
            File-based (CAML) provisioning extensions
            </summary>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ProvisioningExtensions.ProvisionElementFile(Microsoft.SharePoint.Client.Web,System.String)">
            <summary>
            Provisions the items defined by the specified Elements (CAML) file; currently only supports modules (files).
            </summary>
            <param name="web">Web to provision the elements to</param>
            <param name="path">Path to the XML file containing the Elements CAML defintion</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ProvisioningExtensions.ProvisionElementXml(Microsoft.SharePoint.Client.Web,System.String,System.Xml.Linq.XElement)">
            <summary>
            Provisions the items defined by the specified Elements (CAML) XML; currently only supports modules (files).
            </summary>
            <param name="web">Web to provision the elements to</param>
            <param name="baseFolder">Base local folder to find any referenced items, e.g. files</param>
            <param name="elementsXml">Elements (CAML) XML element that defines the items to provision; currently only supports modules (files)</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ProvisioningExtensions.ProvisionModuleInternal(Microsoft.SharePoint.Client.Web,System.String,System.Xml.Linq.XElement)">
            <summary>
            Uploads all files defined by the moduleXml
            </summary>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ProvisioningExtensions.ProvisionFileInternal(Microsoft.SharePoint.Client.Web,System.String,System.String,System.Xml.Linq.XElement,System.Boolean)">
            <summary>
            Uploads the file defined by the fileXml, creating folders as necessary.
            </summary>
        </member>
        <member name="T:Microsoft.SharePoint.Client.RecordsManagementExtensions">
            <summary>
            Class that deals with deprecated records management functionality
            </summary>
            <summary>
            Class that deals with records management functionality
            </summary>
        </member>
        <member name="F:Microsoft.SharePoint.Client.RecordsManagementExtensions.INPLACE_RECORDS_MANAGEMENT_FEATURE_ID">
            <summary>
            Defines the ID of the Inplace Records Management Feature
            </summary>
        </member>
        <member name="F:Microsoft.SharePoint.Client.RecordsManagementExtensions.ECM_SITE_RECORD_DECLARATION_DEFAULT">
            <summary>
            Defines the name of the ECM Site Record Declaration Default propertybag value
            </summary>
        </member>
        <member name="F:Microsoft.SharePoint.Client.RecordsManagementExtensions.ECM_SITE_RECORD_RESTRICTIONS">
            <summary>
            Defines the name of the ECM Site Record Restrictions propertybag value
            </summary>
        </member>
        <member name="F:Microsoft.SharePoint.Client.RecordsManagementExtensions.ECM_SITE_RECORD_DECLARATION_BY">
            <summary>
            Defines the name of the ECM Site Record Declaration by propertybag value
            </summary>
        </member>
        <member name="F:Microsoft.SharePoint.Client.RecordsManagementExtensions.ECM_SITE_RECORD_UNDECLARATION_BY">
            <summary>
            Defines the name of the ECM Site Record Undeclaration by propertybag value
            </summary>
        </member>
        <member name="F:Microsoft.SharePoint.Client.RecordsManagementExtensions.ECM_ALLOW_MANUAL_DECLARATION">
            <summary>
            Defines the name of the ECM Allow Manual Declaration propertybag value
            </summary>
        </member>
        <member name="F:Microsoft.SharePoint.Client.RecordsManagementExtensions.ECM_IPR_LIST_USE_LIST_SPECIFIC">
            <summary>
            Defines the name of the ECM IPR List use List Specific propertybag value
            </summary>
        </member>
        <member name="F:Microsoft.SharePoint.Client.RecordsManagementExtensions.ECM_AUTO_DECLARE_RECORDS">
            <summary>
            Defines the name of the ECM auto declare records propertybag value
            </summary>
        </member>
        <member name="M:Microsoft.SharePoint.Client.RecordsManagementExtensions.IsInPlaceRecordsManagementActive(Microsoft.SharePoint.Client.Site)">
            <summary>
            Checks if in place records management functionality is enabled for this site collection
            </summary>
            <param name="site">Site collection to operate on</param>
            <returns>True if in place records management is enabled, false otherwise</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.RecordsManagementExtensions.ActivateInPlaceRecordsManagementFeature(Microsoft.SharePoint.Client.Site)">
            <summary>
            Activate the in place records management feature
            </summary>
            <param name="site">Site collection to operate on</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.RecordsManagementExtensions.DisableInPlaceRecordsManagementFeature(Microsoft.SharePoint.Client.Site)">
            <summary>
            Deactivate the in place records management feature
            </summary>
            <param name="site">Site collection to operate on</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.RecordsManagementExtensions.EnableSiteForInPlaceRecordsManagement(Microsoft.SharePoint.Client.Site)">
            <summary>
            Enable in place records management. The in place records management feature will be enabled and 
            the in place record management will be enabled in all locations with record declaration allowed 
            by all contributors and undeclaration by site admins
            </summary>
            <param name="site">Site collection to operate on</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.RecordsManagementExtensions.SetManualRecordDeclarationInAllLocations(Microsoft.SharePoint.Client.Site,System.Boolean)">
            <summary>
            Defines if in place records management is allowed in all places
            </summary>
            <param name="site">Site collection to operate on</param>
            <param name="inAllPlaces">True if allowed in all places, false otherwise</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.RecordsManagementExtensions.GetManualRecordDeclarationInAllLocations(Microsoft.SharePoint.Client.Site)">
            <summary>
            Get the value of the records management is allowed in all places setting
            </summary>
            <param name="site">Site collection to operate on</param>
            <returns>True if records management is allowed in all places, false otherwise</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.RecordsManagementExtensions.SetRecordRestrictions(Microsoft.SharePoint.Client.Site,OfficeDevPnP.Core.EcmSiteRecordRestrictions)">
            <summary>
            Defines the restrictions that are placed on a document once it's declared as a record
            </summary>
            <param name="site">Site collection to operate on</param>
            <param name="restrictions"><see cref="T:OfficeDevPnP.Core.EcmSiteRecordRestrictions"/> enum that holds the restrictions to be applied</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.RecordsManagementExtensions.GetRecordRestrictions(Microsoft.SharePoint.Client.Site)">
            <summary>
            Gets the current restrictions on declared records
            </summary>
            <param name="site">Site collection to operate on</param>
            <returns><see cref="T:OfficeDevPnP.Core.EcmSiteRecordRestrictions"/> enum that defines the current restrictions</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.RecordsManagementExtensions.SetRecordDeclarationBy(Microsoft.SharePoint.Client.Site,OfficeDevPnP.Core.EcmRecordDeclarationBy)">
            <summary>
            Defines who can declare records
            </summary>
            <param name="site">Site collection to operate on</param>
            <param name="by"><see cref="T:OfficeDevPnP.Core.EcmRecordDeclarationBy"/> enum that defines who can declare a record</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.RecordsManagementExtensions.GetRecordDeclarationBy(Microsoft.SharePoint.Client.Site)">
            <summary>
            Gets who can declare records
            </summary>
            <param name="site">Site collection to operate on</param>
            <returns><see cref="T:OfficeDevPnP.Core.EcmRecordDeclarationBy"/> enum that defines who can declare a record</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.RecordsManagementExtensions.SetRecordUnDeclarationBy(Microsoft.SharePoint.Client.Site,OfficeDevPnP.Core.EcmRecordDeclarationBy)">
            <summary>
            Defines who can undeclare records
            </summary>
            <param name="site">Site collection to operate on</param>
            <param name="by"><see cref="T:OfficeDevPnP.Core.EcmRecordDeclarationBy"/> enum that defines who can undeclare a record</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.RecordsManagementExtensions.GetRecordUnDeclarationBy(Microsoft.SharePoint.Client.Site)">
            <summary>
            Gets who can undeclare records
            </summary>
            <param name="site">Site collection to operate on</param>
            <returns><see cref="T:OfficeDevPnP.Core.EcmRecordDeclarationBy"/> enum that defines who can undeclare a record</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.RecordsManagementExtensions.IsListRecordSettingDefined(Microsoft.SharePoint.Client.List)">
            <summary>
            Checks if this list has active in place records management settings defined
            </summary>
            <param name="list">List to operate against</param>
            <returns>True if in place records management settings are active for this list</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.RecordsManagementExtensions.SetListManualRecordDeclaration(Microsoft.SharePoint.Client.List,OfficeDevPnP.Core.EcmListManualRecordDeclaration)">
            <summary>
            Defines the manual in place record declaration for this list
            </summary>
            <param name="list">List to operate against</param>
            <param name="settings"><see cref="T:OfficeDevPnP.Core.EcmListManualRecordDeclaration"/> enum that defines the manual in place record declaration settings for this list</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.RecordsManagementExtensions.GetListManualRecordDeclaration(Microsoft.SharePoint.Client.List)">
            <summary>
            Gets the manual in place record declaration for this list
            </summary>
            <param name="list">List to operate against</param>
            <returns><see cref="T:OfficeDevPnP.Core.EcmListManualRecordDeclaration"/> enum that defines the manual in place record declaration settings for this list</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.RecordsManagementExtensions.SetListAutoRecordDeclaration(Microsoft.SharePoint.Client.List,System.Boolean)">
            <summary>
            Defines if auto record declaration is active for this list: all added items will be automatically declared as a record if active
            </summary>
            <param name="list">List to operate on</param>
            <param name="autoDeclareRecords">True to automatically declare all added items as record, false otherwise</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.RecordsManagementExtensions.GetListAutoRecordDeclaration(Microsoft.SharePoint.Client.List)">
            <summary>
            Returns if auto record declaration is active for this list
            </summary>
            <param name="list">List to operate against</param>
            <returns>True if auto record declaration is active, false otherwise</returns>
        </member>
        <member name="T:Microsoft.SharePoint.Client.SearchExtensions">
            <summary>
            Class for deprecated search extension methods
            </summary>
            <summary>
            Class for Search extension methods
            </summary>
        </member>
        <member name="M:Microsoft.SharePoint.Client.SearchExtensions.ExportSearchSettings(Microsoft.SharePoint.Client.ClientContext,System.String,Microsoft.SharePoint.Client.Search.Administration.SearchObjectLevel)">
            <summary>
            Exports the search settings to file.
            </summary>
            <param name="context">Context for SharePoint objects and operations</param>
            <param name="exportFilePath">Path where to export the search settings</param>
            <param name="searchSettingsExportLevel">Search settings export level
            Reference: http://msdn.microsoft.com/en-us/library/microsoft.sharepoint.client.search.administration.searchobjectlevel(v=office.15).aspx
            </param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.SearchExtensions.ImportSearchSettings(Microsoft.SharePoint.Client.ClientContext,System.String,Microsoft.SharePoint.Client.Search.Administration.SearchObjectLevel)">
            <summary>
            Imports search settings from file.
            </summary>
            <param name="context">Context for SharePoint objects and operations</param>
            <param name="searchSchemaImportFilePath">Search schema xml file path</param>
            <param name="searchSettingsImportLevel">Search settings import level
            Reference: http://msdn.microsoft.com/en-us/library/microsoft.sharepoint.client.search.administration.searchobjectlevel(v=office.15).aspx
            </param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.SearchExtensions.SetSiteCollectionSearchCenterUrl(Microsoft.SharePoint.Client.Web,System.String)">
            <summary>
            Sets the search center url on site collection (Site Settings -> Site collection administration --> Search Settings)
            </summary>
            <param name="web">SharePoint site - root web</param>
            <param name="searchCenterUrl">Search center url</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.SearchExtensions.GetSiteCollectionSearchCenterUrl(Microsoft.SharePoint.Client.Web)">
            <summary>
            Get the search center url for the site collection (Site Settings -> Site collection administration --> Search Settings)
            </summary>
            <param name="web">SharePoint site - root web</param>
            <returns>Search center url for web</returns>
        </member>
        <member name="T:Microsoft.SharePoint.Client.SecurityExtensions">
            <summary>
            This manager class holds deprecated security related methods
            </summary>
            <summary>
            This manager class holds security related methods
            </summary>
        </member>
        <member name="M:Microsoft.SharePoint.Client.SecurityExtensions.GetAdministrators(Microsoft.SharePoint.Client.Web)">
            <summary>
            Get a list of site collection administrators
            </summary>
            <param name="web">Site to operate on</param>
            <returns>List of <see cref="T:OfficeDevPnP.Core.Entities.UserEntity"/> objects</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.SecurityExtensions.AddAdministrators(Microsoft.SharePoint.Client.Web,System.Collections.Generic.List{OfficeDevPnP.Core.Entities.UserEntity},System.Boolean)">
            <summary>
            Add a site collection administrator to a site collection
            </summary>
            <param name="web">Site to operate on</param>
            <param name="adminLogins">Array of admins loginnames to add</param>
            <param name="addToOwnersGroup">Optionally the added admins can also be added to the Site owners group</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.SecurityExtensions.RemoveAdministrator(Microsoft.SharePoint.Client.Web,OfficeDevPnP.Core.Entities.UserEntity)">
            <summary>
            Removes an administrators from the site collection
            </summary>
            <param name="web">Site to operate on</param>
            <param name="admin"><see cref="T:OfficeDevPnP.Core.Entities.UserEntity"/> that describes the admin to be removed</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.SecurityExtensions.AddReaderAccess(Microsoft.SharePoint.Client.Web)">
            <summary>
            Add read access to the group "Everyone except external users".
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.SecurityExtensions.AddReaderAccess(Microsoft.SharePoint.Client.Web,OfficeDevPnP.Core.Enums.BuiltInIdentity)">
            <summary>
            Add read access to the group "Everyone except external users".
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="user">Built in user to add to the visitors group</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.SecurityExtensions.GetSharingCapabilitiesTenant(Microsoft.SharePoint.Client.Web,System.Uri)">
            <summary>
            Get the external sharing settings for the provided site. Only works in Office 365 Multi-Tenant
            </summary>
            <param name="web">Tenant administration web</param>
            <param name="siteUrl">Site to get the sharing capabilities from</param>
            <returns>Sharing capabilities of the site collection</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.SecurityExtensions.GetExternalUsersTenant(Microsoft.SharePoint.Client.Web)">
            <summary>
            Returns a list all external users in your tenant
            </summary>
            <param name="web">Tenant administration web</param>
            <returns>A list of <see cref="T:OfficeDevPnP.Core.Entities.ExternalUserEntity"/> objects</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.SecurityExtensions.GetExternalUsersForSiteTenant(Microsoft.SharePoint.Client.Web,System.Uri)">
            <summary>
            Returns a list all external users for a given site that have at least the viewpages permission
            </summary>
            <param name="web">Tenant administration web</param>
            <param name="siteUrl">Url of the site fetch the external users for</param>
            <returns>A list of <see cref="T:OfficeDevPnP.Core.Entities.ExternalUserEntity"/> objects</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.SecurityExtensions.GetGroupID(Microsoft.SharePoint.Client.Web,System.String)">
            <summary>
            Returns the integer ID for a given group name
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="groupName">SharePoint group name</param>
            <returns>Integer group ID</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.SecurityExtensions.AddGroup(Microsoft.SharePoint.Client.Web,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Adds a group
            </summary>
            <param name="web">Site to add the group to</param>
            <param name="groupName">Name of the group</param>
            <param name="groupDescription">Description of the group</param>
            <param name="groupIsOwner">Sets the created group as group owner if true</param>
            <param name="updateAndExecuteQuery">Set to false to postpone the executequery call</param>
            <returns>The created group</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.SecurityExtensions.AssociateDefaultGroups(Microsoft.SharePoint.Client.Web,Microsoft.SharePoint.Client.Group,Microsoft.SharePoint.Client.Group,Microsoft.SharePoint.Client.Group)">
            <summary>
            Associate the provided groups as default owners, members or visitors groups. If a group is null then the 
            association is not done
            </summary>
            <param name="web">Site to operate on</param>
            <param name="owners">Owners group</param>
            <param name="members">Members group</param>
            <param name="visitors">Visitors group</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.SecurityExtensions.AddUserToGroup(Microsoft.SharePoint.Client.Web,System.String,System.String)">
            <summary>
            Adds a user to a group
            </summary>
            <param name="web">web to operate against</param>
            <param name="groupName">Name of the group</param>
            <param name="userLoginName">Loginname of the user</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.SecurityExtensions.AddUserToGroup(Microsoft.SharePoint.Client.Web,System.Int32,System.String)">
            <summary>
            Adds a user to a group
            </summary>
            <param name="web">web to operate against</param>
            /// <param name="groupId">Id of the group</param>
            <param name="userLoginName">Login name of the user</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.SecurityExtensions.AddUserToGroup(Microsoft.SharePoint.Client.Web,Microsoft.SharePoint.Client.Group,Microsoft.SharePoint.Client.User)">
            <summary>
            Adds a user to a group
            </summary>
            <param name="web">Web to operate against</param>
            <param name="group">Group object representing the group</param>
            <param name="user">User object representing the user</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.SecurityExtensions.AddUserToGroup(Microsoft.SharePoint.Client.Web,Microsoft.SharePoint.Client.Group,System.String)">
            <summary>
            Adds a user to a group
            </summary>
            <param name="web">Web to operate against</param>
            <param name="group">Group object representing the group</param>
            <param name="userLoginName">Login name of the user</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.SecurityExtensions.AddPermissionLevelToUser(Microsoft.SharePoint.Client.Web,System.String,Microsoft.SharePoint.Client.RoleType,System.Boolean)">
            <summary>
            Add a permission level (e.g.Contribute, Reader,...) to a user
            </summary>
            <param name="web">Web to operate against</param>
            <param name="userLoginName">Loginname of the user</param>
            <param name="permissionLevel">Permission level to add</param>
            <param name="removeExistingPermissionLevels">Set to true to remove all other permission levels for that user</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.SecurityExtensions.AddPermissionLevelToUser(Microsoft.SharePoint.Client.Web,System.String,System.String,System.Boolean)">
            <summary>
            Add a role definition (e.g.Contribute, Read, Approve) to a user
            </summary>
            <param name="web">Web to operate against</param>
            <param name="userLoginName">Loginname of the user</param>
            <param name="roleDefinitionName">Name of the role definition to add, Full Control|Design|Contribute|Read|Approve|Manage Hierarchy|Restricted Read. Use the correct name of the language of the root site you are using</param>
            <param name="removeExistingPermissionLevels">Set to true to remove all other permission levels for that user</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.SecurityExtensions.AddPermissionLevelToGroup(Microsoft.SharePoint.Client.Web,System.String,Microsoft.SharePoint.Client.RoleType,System.Boolean)">
            <summary>
            Add a permission level (e.g.Contribute, Reader,...) to a group
            </summary>
            <param name="web">Web to operate against</param>
            <param name="groupName">Name of the group</param>
            <param name="permissionLevel">Permission level to add</param>
            <param name="removeExistingPermissionLevels">Set to true to remove all other permission levels for that group</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.SecurityExtensions.AddPermissionLevelToGroup(Microsoft.SharePoint.Client.Web,System.String,System.String,System.Boolean)">
            <summary>
            Add a role definition (e.g.Contribute, Read, Approve) to a group
            </summary>
            <param name="web">Web to operate against</param>
            <param name="groupName">Name of the group</param>
            <param name="roleDefinitionName">Name of the role definition to add, Full Control|Design|Contribute|Read|Approve|Manage Hierarchy|Restricted Read. Use the correct name of the language of the root site you are using</param>
            <param name="removeExistingPermissionLevels">Set to true to remove all other permission levels for that group</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.SecurityExtensions.RemovePermissionLevelFromUser(Microsoft.SharePoint.Client.Web,System.String,Microsoft.SharePoint.Client.RoleType,System.Boolean)">
            <summary>
            Removes a permission level from a user
            </summary>
            <param name="web">Web to operate against</param>
            <param name="userLoginName">Loginname of user</param>
            <param name="permissionLevel">Permission level to remove. If null all permission levels are removed</param>
            <param name="removeAllPermissionLevels">Set to true to remove all permission level.</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.SecurityExtensions.RemovePermissionLevelFromUser(Microsoft.SharePoint.Client.Web,System.String,System.String,System.Boolean)">
            <summary>
            Removes a permission level from a user
            </summary>
            <param name="web">Web to operate against</param>
            <param name="userLoginName">Loginname of user</param>
            <param name="roleDefinitionName">Name of the role definition to add, Full Control|Design|Contribute|Read|Approve|Manage Heirarchy|Restricted Read. Use the correct name of the language of the site you are using</param>
            <param name="removeAllPermissionLevels">Set to true to remove all permission level.</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.SecurityExtensions.RemovePermissionLevelFromGroup(Microsoft.SharePoint.Client.Web,System.String,Microsoft.SharePoint.Client.RoleType,System.Boolean)">
            <summary>
            Removes a permission level from a group
            </summary>
            <param name="web">Web to operate against</param>
            <param name="groupName">name of the group</param>
            <param name="permissionLevel">Permission level to remove. If null all permission levels are removed</param>
            <param name="removeAllPermissionLevels">Set to true to remove all permission level.</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.SecurityExtensions.RemovePermissionLevelFromGroup(Microsoft.SharePoint.Client.Web,System.String,System.String,System.Boolean)">
            <summary>
            Removes a permission level from a group
            </summary>
            <param name="web">Web to operate against</param>
            <param name="groupName">name of the group</param>
            <param name="roleDefinitionName">Name of the role definition to add, Full Control|Design|Contribute|Read|Approve|Manage Heirarchy|Restricted Read. Use the correct name of the language of the site you are using</param>
            <param name="removeAllPermissionLevels">Set to true to remove all permission level.</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.SecurityExtensions.RemoveUserFromGroup(Microsoft.SharePoint.Client.Web,System.String,System.String)">
            <summary>
            Removes a user from a group
            </summary>
            <param name="web">Web to operate against</param>
            <param name="groupName">Name of the group</param>
            <param name="userLoginName">Loginname of the user</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.SecurityExtensions.RemoveUserFromGroup(Microsoft.SharePoint.Client.Web,Microsoft.SharePoint.Client.Group,Microsoft.SharePoint.Client.User)">
            <summary>
            Removes a user from a group
            </summary>
            <param name="web">Web to operate against</param>
            <param name="group">Group object to operate against</param>
            <param name="user">User object that needs to be removed</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.SecurityExtensions.RemoveGroup(Microsoft.SharePoint.Client.Web,System.String)">
            <summary>
            Remove a group
            </summary>
            <param name="web">Web to operate against</param>
            <param name="groupName">Name of the group</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.SecurityExtensions.RemoveGroup(Microsoft.SharePoint.Client.Web,Microsoft.SharePoint.Client.Group)">
            <summary>
            Remove a group
            </summary>
            <param name="web">Web to operate against</param>
            <param name="group">Group object to remove</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.SecurityExtensions.IsUserInGroup(Microsoft.SharePoint.Client.Web,System.String,System.String)">
            <summary>
            Checks if a user is member of a group
            </summary>
            <param name="web">Web to operate against</param>
            <param name="groupName">Name of the group</param>
            <param name="userLoginName">Loginname of the user</param>
            <returns>True if the user is in the group, false otherwise</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.SecurityExtensions.GroupExists(Microsoft.SharePoint.Client.Web,System.String)">
            <summary>
            Checks if a group exists
            </summary>
            <param name="web">Web to operate against</param>
            <param name="groupName">Name of the group</param>
            <returns>True if the group exists, false otherwise</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.SecurityExtensions.GetAuthenticationRealm(Microsoft.SharePoint.Client.Web)">
            <summary>
            Returns the authentication realm for the current web
            </summary>
            <param name="web"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.SharePoint.Client.TaxonomyExtensions">
            <summary>
            Class for deprecated taxonomy extension methods
            </summary>
        </member>
        <member name="F:Microsoft.SharePoint.Client.TaxonomyExtensions.TaxonomyGuidLabelDelimiter">
            <summary>
            The default Taxonomy Guid Label Delimiter
            </summary>
        </member>
        <member name="M:Microsoft.SharePoint.Client.TaxonomyExtensions.CreateTermGroup(Microsoft.SharePoint.Client.Taxonomy.TermStore,System.String,System.Guid,System.String)">
            <summary>
            Creates a new term group, in the specified term store.
            </summary>
            <param name="termStore">the term store to use</param>
            <param name="groupName">Name of the term group</param>
            <param name="groupId">(Optional) ID of the group; if not provided a random GUID is used</param>
            <param name="groupDescription">(Optional) Description of the term group</param>
            <returns>The created term group</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.TaxonomyExtensions.EnsureTermGroup(Microsoft.SharePoint.Client.Site,System.String,System.Guid,System.String)">
            <summary>
            Ensures the named group exists, returning a reference to the group, and creating or updating as necessary.
            </summary>
            <param name="site">Site connected to the term store to use</param>
            <param name="groupName">Name of the term group</param>
            <param name="groupId">(Optional) ID of the group; if not provided the parameter is ignored, a random GUID is used if necessary to create the group, otherwise if the ID differs a warning is logged</param>
            <param name="groupDescription">(Optional) Description of the term group; if null or not provided the parameter is ignored, otherwise the group is updated as necessary to match the description; passing an empty string will clear the description</param>
            <returns>The required term group</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.TaxonomyExtensions.EnsureTermSet(Microsoft.SharePoint.Client.Taxonomy.TermGroup,System.String,System.Guid,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.String,System.String)">
            <summary>
            Ensures the named term set exists, returning a reference to the set, and creating or updating as necessary.
            </summary>
            <param name="parentGroup">Group to check or create the term set in</param>
            <param name="termSetName">Name of the term set</param>
            <param name="termSetId">(Optional) ID of the term set; if not provided the parameter is ignored, a random GUID is used if necessary to create the term set, otherwise if the ID differs a warning is logged</param>
            <param name="lcid">(Optional) Default language of the term set; if not provided the default of the associate term store is used</param>
            <param name="description">(Optional) Description of the term set; if null or not provided the parameter is ignored, otherwise the term set is updated as necessary to match the description; passing an empty string will clear the description</param>
            <param name="isOpen">(Optional) Whether the term store is open for new term creation or not</param>
            <param name="termSetContact"></param>
            <param name="termSetOwner"></param>
            <returns>The required term set</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.TaxonomyExtensions.GetDefaultTermStore(Microsoft.SharePoint.Client.Web)">
            <summary>
            Private method used for resolving taxonomy term set for taxonomy field
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.TaxonomyExtensions.GetTaxonomySession(Microsoft.SharePoint.Client.Site)">
            <summary>
            Returns a new taxonomy session for the current site
            </summary>
            <param name="site"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.TaxonomyExtensions.GetDefaultKeywordsTermStore(Microsoft.SharePoint.Client.Site)">
            <summary>
            Returns the default keywords termstore for the current site
            </summary>
            <param name="site"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.TaxonomyExtensions.GetDefaultSiteCollectionTermStore(Microsoft.SharePoint.Client.Site)">
            <summary>
            Returns the default site collection termstore
            </summary>
            <param name="site"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.TaxonomyExtensions.GetTermSetsByName(Microsoft.SharePoint.Client.Site,System.String,System.Int32)">
            <summary>
            Finds a termset by name
            </summary>
            <param name="site">The current site</param>
            <param name="name">The name of the termset</param>
            <param name="lcid">The locale ID for the termset to return, defaults to 1033</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.TaxonomyExtensions.GetTermGroupByName(Microsoft.SharePoint.Client.Site,System.String)">
            <summary>
            Finds a termgroup by name
            </summary>
            <param name="site">The current site</param>
            <param name="name">The name of the termgroup</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.TaxonomyExtensions.GetTermGroupByName(Microsoft.SharePoint.Client.Taxonomy.TermStore,System.String)">
            <summary>
            Gets the named term group, if it exists in the term store.
            </summary>
            <param name="termStore">The term store to use</param>
            <param name="groupName">Name of the term group</param>
            <returns>The requested term group, or null if it does not exist</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.TaxonomyExtensions.GetTermGroupById(Microsoft.SharePoint.Client.Site,System.Guid)">
            <summary>
            Finds a termgroup by its ID
            </summary>
            <param name="site">The current site</param>
            <param name="termGroupId">The ID of the termgroup</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.TaxonomyExtensions.GetTermByName(Microsoft.SharePoint.Client.Site,System.Guid,System.String)">
            <summary>
            Gets a Taxonomy Term by Name
            </summary>
            <param name="site">The site to process</param>
            <param name="termSetId"></param>
            <param name="term"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.TaxonomyExtensions.AddTermToTermset(Microsoft.SharePoint.Client.Site,System.Guid,System.String)">
            <summary>
            Adds a term to a given termset
            </summary>
            <param name="site">The current site</param>
            <param name="termSetId">The ID of the termset</param>
            <param name="term">The label of the new term to create</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.TaxonomyExtensions.AddTermToTermset(Microsoft.SharePoint.Client.Site,System.Guid,System.String,System.Guid)">
            <summary>
            Adds a term to a given termset
            </summary>
            <param name="site">The current site</param>
            <param name="termSetId">The ID of the termset</param>
            <param name="term">The label of the new term to create</param>
            <param name="termId">The ID of the term to create</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.TaxonomyExtensions.ImportTerms(Microsoft.SharePoint.Client.Site,System.String[],System.Int32,System.String,System.Boolean)">
            <summary>
             Imports an array of | delimited strings into the deafult site collection termstore. Specify strings in this format:
             TermGroup|TermSet|Term
             
             E.g. "Locations|Nordics|Sweden"
             
            </summary>
            <param name="site"></param>
            <param name="termLines"></param>
            <param name="lcid"></param>
            <param name="delimiter"></param>
            <param name="synchronizeDeletions">Remove tags that are not present in the import</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.TaxonomyExtensions.ImportTerms(Microsoft.SharePoint.Client.Site,System.String[],System.Int32,Microsoft.SharePoint.Client.Taxonomy.TermStore,System.String,System.Boolean)">
            <summary>
             Imports an array of | delimited strings into the deafult site collection termstore. Specify strings in this format:
             TermGroup|TermSet|Term
             
             E.g. "Locations|Nordics|Sweden"
             
            </summary>
            <param name="site"></param>
            <param name="termLines"></param>
            <param name="lcid"></param>
            <param name="termStore">The termstore to import the terms into</param>
            <param name="delimiter"></param>
            <param name="synchronizeDeletions">Remove tags that are not present in the import</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.TaxonomyExtensions.ImportTermSet(Microsoft.SharePoint.Client.Taxonomy.TermGroup,System.String,System.Guid,System.Boolean,System.Nullable{System.Boolean},System.String,System.String)">
            <summary>
            Imports terms from a term set file, updating with any new terms, in the same format at that used by the web interface import ability.
            </summary>
            <param name="termGroup">Group to create the term set within</param>
            <param name="filePath">Local path to the file to import</param>
            <param name="termSetId">GUID to use for the term set; if Guid.Empty is passed then a random GUID is generated and used</param>
            <param name="synchroniseDeletions">(Optional) Whether to also synchronise deletions; that is, remove any terms not in the import file; default is no (false)</param>
            <param name="termSetIsOpen">(Optional) Whether the term set should be marked open; if not passed, then the existing setting is not changed</param>
            <param name="termSetContact">(Optional) Contact for the term set; if not provided, the existing setting is retained</param>
            <param name="termSetOwner">(Optional) Owner for the term set; if not provided, the existing setting is retained</param>
            <returns>The created, or updated, term set</returns>
            <remarks>
            <para>
            The format of the file is the same as that used by the import function in the 
            web interface. A sample file can be obtained from the web interface.
            </para>
            <para>
            This is a CSV file, with the following headings:
            </para>
            <para>
            <code>Term Set Name,Term Set Description,LCID,Available for Tagging,Term Description,Level 1 Term,Level 2 Term,Level 3 Term,Level 4 Term,Level 5 Term,Level 6 Term,Level 7 Term</code>
            </para>
            <para>
            The first data row must contain the Term Set Name, Term Set Description, and LCID, and should also contain the first term. 
            </para>
            <para>
            It is recommended that a fixed GUID be used as the termSetId, to allow the term set to be easily updated (so do not pass Guid.Empty).
            </para>
            <para>
            In contrast to the web interface import, this is not a one-off import but runs synchronisation logic allowing updating of an existing Term Set.
            When synchronising, any existing terms are matched (with Term Description and Available for Tagging updated as necessary),
            any new terms are added in the correct place in the hierarchy, and (if synchroniseDeletions is set) any terms not in the imported file 
            are removed.
            </para>
            <para>
            The import file also supports an expanded syntax for the Term Set Name and term names (Level 1 Term, Level 2 Term, etc).
            These columns support values with the format "Name|GUID", with the name and GUID separated by a pipe character (note that the pipe character is invalid to use within a taxomony item name).
            This expanded syntax is not required, but can be used to ensure all terms have fixed IDs.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.SharePoint.Client.TaxonomyExtensions.ImportTermSet(Microsoft.SharePoint.Client.Taxonomy.TermGroup,System.IO.Stream,System.Guid,System.Boolean,System.Nullable{System.Boolean},System.String,System.String)">
            <summary>
            Imports terms from a term set stream, updating with any new terms, in the same format at that used by the web interface import ability.
            </summary>
            <param name="termGroup">Group to create the term set within</param>
            <param name="termSetData">Stream containing the data to import</param>
            <param name="termSetId">GUID to use for the term set; if Guid.Empty is passed then a random GUID is generated and used</param>
            <param name="synchroniseDeletions">(Optional) Whether to also synchronise deletions; that is, remove any terms not in the import file; default is no (false)</param>
            <param name="termSetIsOpen">(Optional) Whether the term set should be marked open; if not passed, then the existing setting is not changed</param>
            <param name="termSetContact">(Optional) Contact for the term set; if not provided, the existing setting is retained</param>
            <param name="termSetOwner">(Optional) Owner for the term set; if not provided, the existing setting is retained</param>
            <returns>The created, or updated, term set</returns>
            <remarks>
            <para>
            The format of the file is the same as that used by the import function in the 
            web interface. A sample file can be obtained from the web interface.
            </para>
            <para>
            This is a CSV file, with the following headings:
            </para>
            <para>
            <code>Term Set Name,Term Set Description,LCID,Available for Tagging,Term Description,Level 1 Term,Level 2 Term,Level 3 Term,Level 4 Term,Level 5 Term,Level 6 Term,Level 7 Term</code>
            </para>
            <para>
            The first data row must contain the Term Set Name, Term Set Description, and LCID, and should also contain the first term. 
            </para>
            <para>
            It is recommended that a fixed GUID be used as the termSetId, to allow the term set to be easily updated (so do not pass Guid.Empty).
            </para>
            <para>
            In contrast to the web interface import, this is not a one-off import but runs synchronisation logic allowing updating of an existing Term Set.
            When synchronising, any existing terms are matched (with Term Description and Available for Tagging updated as necessary),
            any new terms are added in the correct place in the hierarchy, and (if synchroniseDeletions is set) any terms not in the imported file 
            are removed.
            </para>
            <para>
            The import file also supports an expanded syntax for the Term Set Name and term names (Level 1 Term, Level 2 Term, etc).
            These columns support values with the format "Name|GUID", with the name and GUID separated by a pipe character (note that the pipe character is invalid to use within a taxomony item name).
            This expanded syntax is not required, but can be used to ensure all terms have fixed IDs.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.SharePoint.Client.TaxonomyExtensions.ExportTermSet(Microsoft.SharePoint.Client.Site,System.Guid,System.Boolean,System.String)">
            <summary>
            Exports the full list of terms from all termsets in all termstores.
            </summary>
            <param name="site">The site to process</param>
            <param name="termSetId">The ID of the termset to export</param>
            <param name="includeId">if true, Ids of the the taxonomy items will be included</param>
            <param name="delimiter">if specified, this delimiter will be used. Notice that IDs will be delimited with ;# from the label</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.TaxonomyExtensions.ExportTermSet(Microsoft.SharePoint.Client.Site,System.Guid,System.Boolean,Microsoft.SharePoint.Client.Taxonomy.TermStore,System.String)">
            <summary>
            Exports the full list of terms from all termsets in all termstores.
            </summary>
            <param name="site">The site to export the termsets from</param>
            <param name="termSetId">The ID of the termset to export</param>
            <param name="includeId">if true, Ids of the the taxonomy items will be included</param>
            <param name="termStore">The term store to export the termset from</param>
            <param name="delimiter">if specified, this delimiter will be used. Notice that IDs will be delimited with ;# from the label</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.TaxonomyExtensions.ExportAllTerms(Microsoft.SharePoint.Client.Site,System.Boolean,System.String)">
            <summary>
            Exports the full list of terms from all termsets in all termstores.
            </summary>
            <param name="site">The site to process</param>
            <param name="includeId">if true, Ids of the the taxonomy items will be included</param>
            <param name="delimiter">if specified, this delimiter will be used. Notice that IDs will be delimited with ;# from the label</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.TaxonomyExtensions.GetTaxonomyItemByPath(Microsoft.SharePoint.Client.Site,System.String,System.String)">
            <summary>
            Returns a taxonomy item by it's path, e.g. Group|Set|Term
            </summary>
            <param name="site">The current site</param>
            <param name="path">The path of the item to return</param>
            <param name="delimiter">The delimeter separating groups, sets and term in the path. Defaults to |</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.TaxonomyExtensions.SetTaxonomyFieldValueByTermPath(Microsoft.SharePoint.Client.ListItem,System.String,System.Guid)">
            <summary>
            Sets a value in a taxonomy field
            </summary>
            <param name="item">The item to set the value to</param>
            <param name="TermPath">The path of the term in the shape of "TermGroupName|TermSetName|TermName"</param>
            <param name="fieldId">The id of the field</param>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException"/>
        </member>
        <member name="M:Microsoft.SharePoint.Client.TaxonomyExtensions.SetTaxonomyFieldValue(Microsoft.SharePoint.Client.ListItem,System.Guid,System.String,System.Guid)">
            <summary>
            Sets a value of a taxonomy field
            </summary>
            <param name="item">The item to process</param>
            <param name="fieldId">The ID of the field to set</param>
            <param name="label">The label of the term to set</param>
            <param name="termGuid">The id of the term to set</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.TaxonomyExtensions.CreateTaxonomyField(Microsoft.SharePoint.Client.Web,OfficeDevPnP.Core.Entities.TaxonomyFieldCreationInformation)">
            <summary>
            Can be used to create taxonomy field remotely to web.
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="fieldCreationInformation">Creation Information of the field</param>
            <returns>New taxonomy field</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.TaxonomyExtensions.RemoveTaxonomyFieldByInternalName(Microsoft.SharePoint.Client.Web,System.String)">
            <summary>
            Removes a taxonomy field (site column) and its associated hidden field by internal name
            </summary>
            <param name="web">Web object were the field (site column) exists</param>
            <param name="internalName">Internal name of the taxonomy field (site column) to be removed</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.TaxonomyExtensions.RemoveTaxonomyFieldById(Microsoft.SharePoint.Client.Web,System.Guid)">
            <summary>
            Removes a taxonomy field (site column) and its associated hidden field by id
            </summary>
            <param name="web">Web object were the field (site column) exists</param>
            <param name="id">Guid representing the id of the taxonomy field (site column) to be removed</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.TaxonomyExtensions.CreateTaxonomyField(Microsoft.SharePoint.Client.List,OfficeDevPnP.Core.Entities.TaxonomyFieldCreationInformation)">
            <summary>
            Can be used to create taxonomy field remotely in a list. 
            </summary>
            <param name="list">List to be processed</param>
            <param name="fieldCreationInformation">Creation information of the field</param>
            <returns>New taxonomy field</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.TaxonomyExtensions.WireUpTaxonomyField(Microsoft.SharePoint.Client.Web,Microsoft.SharePoint.Client.Field,System.String,System.String,System.Boolean)">
            <summary>
            Wires up MMS field to the specified term set.
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="field">Field to be wired up</param>
            <param name="mmsGroupName">Taxonomy group</param>
            <param name="mmsTermSetName">Term set name</param>
            <param name="multiValue">If true, create a multivalue field</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.TaxonomyExtensions.WireUpTaxonomyField(Microsoft.SharePoint.Client.Web,Microsoft.SharePoint.Client.Field,Microsoft.SharePoint.Client.Taxonomy.TermSet,System.Boolean)">
            <summary>
            Wires up MMS field to the specified term set.
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="field">Field to be wired up</param>
            <param name="termSet">Taxonomy TermSet</param>
            <param name="multiValue">If true, create a multivalue field</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.TaxonomyExtensions.WireUpTaxonomyField(Microsoft.SharePoint.Client.Web,Microsoft.SharePoint.Client.Field,Microsoft.SharePoint.Client.Taxonomy.Term,System.Boolean)">
            <summary>
            Wires up MMS field to the specified term.
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="field">Field to be wired up</param>
            <param name="anchorTerm">Taxonomy Term</param>
            <param name="multiValue">If true, create a multivalue field</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.TaxonomyExtensions.WireUpTaxonomyField(Microsoft.SharePoint.Client.Web,System.Guid,System.String,System.String,System.Boolean)">
            <summary>
            Wires up MMS field to the specified term set.
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="id">Field ID to be wired up</param>
            <param name="mmsGroupName">Taxonomy group</param>
            <param name="mmsTermSetName">Term set name</param>
            <param name="multiValue">If true, create a multivalue field</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.TaxonomyExtensions.WireUpTaxonomyField(Microsoft.SharePoint.Client.List,Microsoft.SharePoint.Client.Field,Microsoft.SharePoint.Client.Taxonomy.TermSet,System.Boolean)">
            <summary>
            Wires up MMS field to the specified term set.
            </summary>
            <param name="list">List to be processed</param>
            <param name="field">Field to be wired up</param>
            <param name="termSet">Taxonomy TermSet</param>
            <param name="multiValue">Term set name</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.TaxonomyExtensions.WireUpTaxonomyField(Microsoft.SharePoint.Client.List,Microsoft.SharePoint.Client.Field,Microsoft.SharePoint.Client.Taxonomy.Term,System.Boolean)">
            <summary>
            Wires up MMS field to the specified term.
            </summary>
            <param name="list">List to be processed</param>
            <param name="field">Field to be wired up</param>
            <param name="anchorTerm">Taxonomy Term</param>
            <param name="multiValue">Allow multiple selection</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.TaxonomyExtensions.WireUpTaxonomyField(Microsoft.SharePoint.Client.List,Microsoft.SharePoint.Client.Field,System.String,System.String,System.Boolean)">
            <summary>
            Wires up MMS field to the specified term set.
            </summary>
            <param name="list">List to be processed</param>
            <param name="field">Field to be wired up</param>
            <param name="mmsGroupName">Taxonomy group</param>
            <param name="mmsTermSetName">Term set name</param>
            <param name="multiValue">Allow multiple selection</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.TaxonomyExtensions.WireUpTaxonomyField(Microsoft.SharePoint.Client.List,System.Guid,System.String,System.String,System.Boolean)">
            <summary>
            Wires up MMS field to the specified term set.
            </summary>
            <param name="list">List to be processed</param>
            <param name="id">Field ID to be wired up</param>
            <param name="mmsGroupName">Taxonomy group</param>
            <param name="mmsTermSetName">Term set name</param>
            <param name="multiValue">Allow multiple selection</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.TaxonomyExtensions.WireUpTaxonomyFieldInternal(Microsoft.SharePoint.Client.Field,Microsoft.SharePoint.Client.Taxonomy.TaxonomyItem,System.Boolean)">
            <summary>
            Wires up MMS field to the specified term set or term.
            </summary>
            <param name="field">Field to be wired up</param>
            <param name="taxonomyItem">Taxonomy TermSet or Term</param>
            <param name="multiValue">Allow multiple selection</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.TaxonomyExtensions.GetWssIdForTerm(Microsoft.SharePoint.Client.Web,Microsoft.SharePoint.Client.Taxonomy.Term)">
            <summary>
            Returns the Id for a term if present in the TaxonomyHiddenList. Otherwise returns -1;
            </summary>
            <param name="web"></param>
            <param name="term"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.TaxonomyExtensions.SetTaxonomyFieldDefaultValue(Microsoft.SharePoint.Client.Field,Microsoft.SharePoint.Client.Taxonomy.TaxonomyItem,System.String)">
            <summary>
            Sets the default value for a managed metadata field
            </summary>
            <param name="field">Field to be wired up</param>
            <param name="taxonomyItem">Taxonomy TermSet or Term</param>
            <param name="defaultValue">default value for the field</param>
        </member>
        <member name="T:Microsoft.SharePoint.Client.TenantExtensions">
            <summary>
            Class for deprecated tenant extension methods
            </summary>
        </member>
        <member name="M:Microsoft.SharePoint.Client.TenantExtensions.CreateSiteCollection(Microsoft.Online.SharePoint.TenantAdministration.Tenant,OfficeDevPnP.Core.Entities.SiteEntity,System.Boolean,System.Boolean)">
            <summary>
            Adds a SiteEntity by launching site collection creation and waits for the creation to finish
            </summary>
            <param name="tenant">A tenant object pointing to the context of a Tenant Administration site</param>
            <param name="properties">Describes the site collection to be created</param>
            <param name="removeFromRecycleBin">It true and site is present in recycle bin, it will be removed first from the recycle bin</param>
            <param name="wait">If true, processing will halt until the site collection has been created</param>
            <returns>Guid of the created site collection and Guid.Empty is the wait parameter is specified as false</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.TenantExtensions.CreateSiteCollection(Microsoft.Online.SharePoint.TenantAdministration.Tenant,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt32,System.Boolean,System.Boolean)">
            <summary>
            Launches a site collection creation and waits for the creation to finish 
            </summary>
            <param name="tenant">A tenant object pointing to the context of a Tenant Administration site</param>
            <param name="siteFullUrl">The SPO url</param>
            <param name="title">The site title</param>
            <param name="siteOwnerLogin">Owner account</param>
            <param name="template">Site template being used</param>
            <param name="storageMaximumLevel">Site quota in MB</param>
            <param name="storageWarningLevel">Site quota warning level in MB</param>
            <param name="timeZoneId">TimeZoneID for the site. "(UTC+01:00) Brussels, Copenhagen, Madrid, Paris" = 3 </param>
            <param name="userCodeMaximumLevel">The user code quota in points</param>
            <param name="userCodeWarningLevel">The user code quota warning level in points</param>
            <param name="lcid">The site locale. See http://technet.microsoft.com/en-us/library/ff463597.aspx for a complete list of Lcid's</param>
            <param name="removeFromRecycleBin">If true, any existing site with the same URL will be removed from the recycle bin</param>
            <param name="wait">Wait for the site to be created before continuing processing</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.TenantExtensions.CheckIfSiteExists(Microsoft.Online.SharePoint.TenantAdministration.Tenant,System.String,System.String)">
            <summary>
            Returns if a site collection is in a particular status. If the url contains a sub site then returns true is the sub site exists, false if not. 
            Status is irrelevant for sub sites
            </summary>
            <param name="tenant">A tenant object pointing to the context of a Tenant Administration site</param>
            <param name="siteFullUrl">Url to the site collection</param>
            <param name="status">Status to check (Active, Creating, Recycled)</param>
            <returns>True if in status, false if not in status</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.TenantExtensions.IsSiteActive(Microsoft.Online.SharePoint.TenantAdministration.Tenant,System.String)">
            <summary>
            Checks if a site collection is Active
            </summary>
            <param name="tenant">A tenant object pointing to the context of a Tenant Administration site</param>
            <param name="siteFullUrl">URL to the site collection</param>
            <returns>True if active, false if not</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.TenantExtensions.SiteExists(Microsoft.Online.SharePoint.TenantAdministration.Tenant,System.String)">
            <summary>
            Checks if a site collection exists, relies on tenant admin API. Sites that are recycled also return as existing sites
            </summary>
            <param name="tenant">A tenant object pointing to the context of a Tenant Administration site</param>
            <param name="siteFullUrl">URL to the site collection</param>
            <returns>True if existing, false if not</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.TenantExtensions.SubSiteExists(Microsoft.Online.SharePoint.TenantAdministration.Tenant,System.String)">
            <summary>
            Checks if a sub site exists
            </summary>
            <param name="tenant">A tenant object pointing to the context of a Tenant Administration site</param>
            <param name="siteFullUrl">URL to the sub site</param>
            <returns>True if existing, false if not</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.TenantExtensions.DeleteSiteCollection(Microsoft.Online.SharePoint.TenantAdministration.Tenant,System.String,System.Boolean)">
            <summary>
            Deletes a site collection
            </summary>
            <param name="tenant">A tenant object pointing to the context of a Tenant Administration site</param>
            <param name="siteFullUrl">Url of the site collection to delete</param>
            <param name="useRecycleBin">Leave the deleted site collection in the site collection recycle bin</param>
            <returns>True if deleted</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.TenantExtensions.DeleteSiteCollectionFromRecycleBin(Microsoft.Online.SharePoint.TenantAdministration.Tenant,System.String,System.Boolean)">
            <summary>
            Deletes a site collection from the site collection recycle bin
            </summary>
            <param name="tenant">A tenant object pointing to the context of a Tenant Administration site</param>
            <param name="siteFullUrl">URL of the site collection to delete</param>
            <param name="wait">If true, processing will halt until the site collection has been deleted from the recycle bin</param>
            <returns>True if deleted</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.TenantExtensions.GetSiteGuidByUrl(Microsoft.Online.SharePoint.TenantAdministration.Tenant,System.String)">
            <summary>
            Gets the ID of site collection with specified URL
            </summary>
            <param name="tenant">A tenant object pointing to the context of a Tenant Administration site</param>
            <param name="siteFullUrl">A URL that specifies a site collection to get ID.</param>
            <returns>The Guid of a site collection</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.TenantExtensions.GetSiteGuidByUrl(Microsoft.Online.SharePoint.TenantAdministration.Tenant,System.Uri)">
            <summary>
            Gets the ID of site collection with specified URL
            </summary>
            <param name="tenant">A tenant object pointing to the context of a Tenant Administration site</param>
            <param name="siteFullUrl">A URL that specifies a site collection to get ID.</param>
            <returns>The Guid of a site collection or an Guid.Empty if the Site does not exist</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.TenantExtensions.GetWebTemplates(Microsoft.Online.SharePoint.TenantAdministration.Tenant,System.UInt32,System.Int32)">
            <summary>
            Returns available webtemplates/site definitions
            </summary>
            <param name="tenant">A tenant object pointing to the context of a Tenant Administration site</param>
            <param name="lcid"></param>
            <param name="compatibilityLevel">14 for SharePoint 2010, 15 for SharePoint 2013/SharePoint Online</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.TenantExtensions.SetSiteProperties(Microsoft.Online.SharePoint.TenantAdministration.Tenant,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{Microsoft.Online.SharePoint.TenantManagement.SharingCapabilities},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Sets tenant site Properties
            </summary>
            <param name="tenant">A tenant object pointing to the context of a Tenant Administration site</param>
            <param name="siteFullUrl"></param>
            <param name="title"></param>
            <param name="allowSelfServiceUpgrade"></param>
            <param name="sharingCapability"></param>
            <param name="storageMaximumLevel"></param>
            <param name="storageWarningLevel"></param>
            <param name="userCodeMaximumLevel"></param>
            <param name="userCodeWarningLevel"></param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.TenantExtensions.SetSiteLockState(Microsoft.Online.SharePoint.TenantAdministration.Tenant,System.String,OfficeDevPnP.Core.SiteLockState,System.Boolean)">
            <summary>
            Sets a site to Unlock access or NoAccess. This operation may occur immediately, but the site lock may take a short while before it goes into effect.
            </summary>
            <param name="tenant">A tenant object pointing to the context of a Tenant Administration site (i.e. https://[tenant]-admin.sharepoint.com)</param>
            <param name="siteFullUrl">The target site to change the lock state.</param>
            <param name="lockState">The target state the site should be changed to.</param>
            <param name="wait">If true, processing will halt until the site collection lock state has been implemented</param>      
        </member>
        <member name="M:Microsoft.SharePoint.Client.TenantExtensions.AddAdministrators(Microsoft.Online.SharePoint.TenantAdministration.Tenant,System.Collections.Generic.IEnumerable{OfficeDevPnP.Core.Entities.UserEntity},System.Uri,System.Boolean)">
            <summary>
            Add a site collection administrator to a site collection
            </summary>
            <param name="tenant">A tenant object pointing to the context of a Tenant Administration site</param>
            <param name="adminLogins">Array of admins loginnames to add</param>
            <param name="siteUrl">Url of the site to operate on</param>
            <param name="addToOwnersGroup">Optionally the added admins can also be added to the Site owners group</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.TenantExtensions.GetSiteCollections(Microsoft.Online.SharePoint.TenantAdministration.Tenant,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Returns all site collections in the current Tenant based on a startIndex. IncludeDetail adds additional properties to the SPSite object. EndIndex is the maximum number based on chunkcs of 300.
            </summary>
            <param name="tenant">Tenant object to operate against</param>
            <param name="startIndex">Start getting site collections from this index. Defaults to 0</param>
            <param name="endIndex">The index of the last site. Defaults to 100.000</param>
            <param name="includeDetail">Option to return a limited set of data</param>
            <returns>An IList of SiteEntity objects</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.TenantExtensions.GetOneDriveSiteCollections(Microsoft.Online.SharePoint.TenantAdministration.Tenant)">
            <summary>
            Get OneDrive site collections by iterating through all user profiles.
            </summary>
            <param name="tenant"></param>
            <returns>List of <see cref="T:OfficeDevPnP.Core.Entities.SiteEntity"/> objects containing site collection info.</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.TenantExtensions.GetUserProfileServiceClient(Microsoft.Online.SharePoint.TenantAdministration.Tenant)">
            <summary>
            Gets the UserProfileService proxy to enable calls to the UPA web service.
            </summary>
            <param name="tenant"></param>
            <returns>UserProfileService web service client</returns>
        </member>
        <member name="T:OfficeDevPnP.Core.AppModelExtensions.VariationExtensions">
            <summary>
            Class that holds deprecated methods for variations
            </summary>
            <summary>
            Class that provides methods for variations
            </summary>
        </member>
        <member name="M:OfficeDevPnP.Core.AppModelExtensions.VariationExtensions.ProviosionTargetVariationLabels(Microsoft.SharePoint.Client.ClientContext,System.Collections.Generic.List{OfficeDevPnP.Core.Entities.VariationLabelEntity})">
            <summary>
            Add a node to quickLaunch or top navigation bar
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="nodeTitle">the title of node to add</param>
            <param name="nodeUri">the url of node to add</param>
            <param name="parentNodeTitle">if string.Empty, then will add this node as top level node</param>
            <param name="isQuickLaunch">true: add to quickLaunch; otherwise, add to top navigation bar</param>
        </member>
        <member name="M:OfficeDevPnP.Core.AppModelExtensions.VariationExtensions.ConfigureVariationsSettings(Microsoft.SharePoint.Client.ClientContext,OfficeDevPnP.Core.Entities.VariationInformation)">
            <summary>
            Configures the variation settings
            1. Go to "Site Actions" -> "Site settings"
            2. Under "Site collection administration", click "Variation Settings".
            This method is for the page above to change or update the "Variation Settings"
            </summary>
            <param name="context">Context for SharePoint objects and operations</param>
            <param name="variationSettings">Variation settings</param>
        </member>
        <member name="M:OfficeDevPnP.Core.AppModelExtensions.VariationExtensions.ProvisionSourceVariationLabel(Microsoft.SharePoint.Client.ClientContext,OfficeDevPnP.Core.Entities.VariationLabelEntity)">
            <summary>
            Creates source variation label
            </summary>
            <param name="context">Context for SharePoint objects and operations</param>
            <param name="sourceVariationLabel">Source variation label</param>
        </member>
        <member name="M:OfficeDevPnP.Core.AppModelExtensions.VariationExtensions.ProvisionTargetVariationLabels(Microsoft.SharePoint.Client.ClientContext,System.Collections.Generic.List{OfficeDevPnP.Core.Entities.VariationLabelEntity})">
            <summary>
            Creates target variation labels
            </summary>
            <param name="context">Context for SharePoint objects and operations</param>
            <param name="variationLabels">Variation labels</param>
        </member>
        <member name="M:OfficeDevPnP.Core.AppModelExtensions.VariationExtensions.WaitForVariationLabelCreation(Microsoft.SharePoint.Client.ClientContext,OfficeDevPnP.Core.Entities.VariationLabelEntity)">
            <summary>
            Wait for the variation label creation
            </summary>
            <param name="context">Context for SharePoint objects and operations</param>
            <param name="variationLabel">Variation label</param>
        </member>
        <member name="M:OfficeDevPnP.Core.AppModelExtensions.VariationExtensions.GetVariationLabels(Microsoft.SharePoint.Client.ClientContext)">
            <summary>
            Retrieve all configured variation labels
            </summary>
            <param name="context">Context for SharePoint objects and operations</param>
            <returns>Collection of VariationLabelEntity objects</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.AppModelExtensions.VariationExtensions.CreateVariationLabels(Microsoft.SharePoint.Client.ClientContext,System.Collections.Generic.List{OfficeDevPnP.Core.Entities.VariationLabelEntity})">
            <summary>
            Create variation labels
            </summary>
            <param name="context">Context for SharePoint objects and operations</param>
            <param name="variationLabels">Variation labels</param>
        </member>
        <member name="M:OfficeDevPnP.Core.AppModelExtensions.VariationExtensions.CheckForHierarchyCreation(Microsoft.SharePoint.Client.ClientContext,OfficeDevPnP.Core.Entities.VariationLabelEntity)">
            <summary>
            Checks if hierarchy is created for the variation label.
            Get the "Hierarchy_x0020_Is_x0020_Created" list item value
            </summary>
            <param name="context">Context for SharePoint objects and operations</param>
            <param name="variationLabel">Variation label</param>
            <returns>True, if hierarchy is created for the variation label</returns>
        </member>
        <member name="T:Microsoft.SharePoint.Client.WebExtensions">
            <summary>
            Class that holds deprecated methods for site (both site collection and web site) creation, status, retrieval and settings
            </summary>
            <summary>
            Class that deals with site (both site collection and web site) creation, status, retrieval and settings
            </summary>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WebExtensions.CreateWeb(Microsoft.SharePoint.Client.Web,OfficeDevPnP.Core.Entities.SiteEntity,System.Boolean,System.Boolean)">
            <summary>
            Adds a new child Web (site) to a parent Web.
            </summary>
            <param name="parentWeb">The parent Web (site) to create under</param>
            <param name="subsite">Details of the Web (site) to add. Only Title, Url (as the leaf URL), Description, Template and Language are used.</param>
            <param name="inheritPermissions">Specifies whether the new site will inherit permissions from its parent site.</param>
            <param name="inheritNavigation">Specifies whether the site inherits navigation.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WebExtensions.CreateWeb(Microsoft.SharePoint.Client.Web,System.String,System.String,System.String,System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Adds a new child Web (site) to a parent Web.
            </summary>
            <param name="parentWeb">The parent Web (site) to create under</param>
            <param name="title">The title of the new site. </param>
            <param name="leafUrl">A string that represents the URL leaf name.</param>
            <param name="description">The description of the new site. </param>
            <param name="template">The name of the site template to be used for creating the new site. </param>
            <param name="language">The locale ID that specifies the language of the new site. </param>
            <param name="inheritPermissions">Specifies whether the new site will inherit permissions from its parent site.</param>
            <param name="inheritNavigation">Specifies whether the site inherits navigation.</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WebExtensions.DeleteWeb(Microsoft.SharePoint.Client.Web,System.String)">
            <summary>
            Deletes the child website with the specified leaf URL, from a parent Web, if it exists. 
            </summary>
            <param name="parentWeb">The parent Web (site) to delete from</param>
            <param name="leafUrl">A string that represents the URL leaf name.</param>
            <returns>true if the web was deleted; otherwise false if nothing was done</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WebExtensions.GetAllWebUrls(Microsoft.SharePoint.Client.Site)">
            <summary>
            Gets the collection of the URLs of all Web sites that are contained within the site collection, 
            including the top-level site and its subsites.
            </summary>
            <param name="site">Site collection to retrieve the URLs for.</param>
            <returns>An enumeration containing the full URLs as strings.</returns>
            <remarks>
            <para>
            This is analagous to the <code>SPSite.AllWebs</code> property and can be used to get a collection
            of all web site URLs to loop through, e.g. for branding.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WebExtensions.GetWeb(Microsoft.SharePoint.Client.Web,System.String)">
            <summary>
            Returns the child Web site with the specified leaf URL.
            </summary>
            <param name="parentWeb">The Web site to check under</param>
            <param name="leafUrl">A string that represents the URL leaf name.</param>
            <returns>The requested Web, if it exists, otherwise null.</returns>
            <remarks>
            <para>
            The ServerRelativeUrl property of the retrieved Web is instantiated.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WebExtensions.WebExists(Microsoft.SharePoint.Client.Web,System.String)">
            <summary>
            Determines if a child Web site with the specified leaf URL exists. 
            </summary>
            <param name="parentWeb">The Web site to check under</param>
            <param name="leafUrl">A string that represents the URL leaf name.</param>
            <returns>true if the Web (site) exists; otherwise false</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WebExtensions.WebExistsFullUrl(Microsoft.SharePoint.Client.ClientRuntimeContext,System.String)">
            <summary>
            Determines if a Web (site) exists at the specified full URL, either accessible or that returns an access error.
            </summary>
            <param name="context">Existing context, used to provide credentials.</param>
            <param name="webFullUrl">Full URL of the site to check.</param>
            <returns>true if the Web (site) exists; otherwise false</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WebExtensions.IsSubSite(Microsoft.SharePoint.Client.Web)">
            <summary>
            Checks if the current web is a sub site or not
            </summary>
            <param name="web">Web to check</param>
            <returns>True is sub site, false otherwise</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WebExtensions.GetAppInstances(Microsoft.SharePoint.Client.Web)">
            <summary>
            Returns all app instances
            </summary>
            <param name="web">The site to process</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WebExtensions.RemoveAppInstanceByTitle(Microsoft.SharePoint.Client.Web,System.String)">
            <summary>
            Removes the app instance with the specified title.
            </summary>
            <param name="web">Web to remove the app instance from</param>
            <param name="appTitle">Title of the app instance to remove</param>
            <returns>true if the the app instance was removed; false if it does not exist</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WebExtensions.InstallSolution(Microsoft.SharePoint.Client.Site,System.Guid,System.String,System.Int32,System.Int32)">
            <summary>
            Uploads and installs a sandbox solution package (.WSP) file, replacing existing solution if necessary.
            </summary>
            <param name="site">Site collection to install to</param>
            <param name="packageGuid">ID of the solution, from the solution manifest (required for the remove step)</param>
            <param name="sourceFilePath">Path to the sandbox solution package (.WSP) file</param>
            <param name="majorVersion">Optional major version of the solution, defaults to 1</param>
            <param name="minorVersion">Optional minor version of the solution, defaults to 0</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WebExtensions.UninstallSolution(Microsoft.SharePoint.Client.Site,System.Guid,System.String,System.Int32,System.Int32)">
            <summary>
            Uninstalls a sandbox solution package (.WSP) file
            </summary>
            <param name="site">Site collection to install to</param>
            <param name="packageGuid">ID of the solution, from the solution manifest</param>
            <param name="fileName">filename of the WSP file to uninstall</param>
            <param name="majorVersion">Optional major version of the solution, defaults to 1</param>
            <param name="minorVersion">Optional minor version of the solution, defaults to 0</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WebExtensions.MySiteSearch(Microsoft.SharePoint.Client.Web)">
            <summary>
            Returns all my site site collections
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <returns>All my site site collections</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WebExtensions.SiteSearch(Microsoft.SharePoint.Client.Web)">
            <summary>
            Returns all site collections that are indexed. In MT the search center, mysite host and contenttype hub are defined as non indexable by default and thus 
            are not returned
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <returns>All site collections</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WebExtensions.SiteSearch(Microsoft.SharePoint.Client.Web,System.String,System.Boolean)">
            <summary>
            Returns the site collections that comply with the passed keyword query
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="keywordQueryValue">Keyword query</param>
            <param name="trimDublicates">Indicates if dublicates should be trimmed or not</param>
            <returns>All found site collections</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WebExtensions.SiteSearchScopedByUrl(Microsoft.SharePoint.Client.Web,System.String)">
            <summary>
            Returns all site collection that start with the provided URL
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="siteUrl">Base URL for which sites can be returned</param>
            <returns>All found site collections</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WebExtensions.SiteSearchScopedByTitle(Microsoft.SharePoint.Client.Web,System.String)">
            <summary>
            Returns all site collection that match with the provided title
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="siteTitle">Title of the site to search for</param>
            <returns>All found site collections</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WebExtensions.ProcessQuery(Microsoft.SharePoint.Client.Web,System.String,System.Collections.Generic.List{OfficeDevPnP.Core.Entities.SiteEntity},Microsoft.SharePoint.Client.Search.Query.KeywordQuery,System.Int32)">
            <summary>
            Runs a query
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="keywordQueryValue">keyword query </param>
            <param name="sites">sites variable that hold the resulting sites</param>
            <param name="keywordQuery">KeywordQuery object</param>
            <param name="startRow">Start row of the resultset to be returned</param>
            <returns>Total number of rows for the query</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WebExtensions.SetPropertyBagValue(Microsoft.SharePoint.Client.Web,System.String,System.Int32)">
            <summary>
            Sets a key/value pair in the web property bag
            </summary>
            <param name="web">Web that will hold the property bag entry</param>
            <param name="key">Key for the property bag entry</param>
            <param name="value">Integer value for the property bag entry</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WebExtensions.SetPropertyBagValue(Microsoft.SharePoint.Client.Web,System.String,System.String)">
            <summary>
            Sets a key/value pair in the web property bag
            </summary>
            <param name="web">Web that will hold the property bag entry</param>
            <param name="key">Key for the property bag entry</param>
            <param name="value">String value for the property bag entry</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WebExtensions.SetPropertyBagValueInternal(Microsoft.SharePoint.Client.Web,System.String,System.Object)">
            <summary>
            Sets a key/value pair in the web property bag
            </summary>
            <param name="web">Web that will hold the property bag entry</param>
            <param name="key">Key for the property bag entry</param>
            <param name="value">Value for the property bag entry</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WebExtensions.RemovePropertyBagValue(Microsoft.SharePoint.Client.Web,System.String)">
            <summary>
            Removes a property bag value from the property bag
            </summary>
            <param name="web">The site to process</param>
            <param name="key">The key to remove</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WebExtensions.RemovePropertyBagValueInternal(Microsoft.SharePoint.Client.Web,System.String,System.Boolean)">
            <summary>
            Removes a property bag value
            </summary>
            <param name="web">The web to process</param>
            <param name="key">They key to remove</param>
            <param name="checkIndexed"></param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WebExtensions.GetPropertyBagValueInt(Microsoft.SharePoint.Client.Web,System.String,System.Int32)">
            <summary>
            Get int typed property bag value. If does not contain, returns default value.
            </summary>
            <param name="web">Web to read the property bag value from</param>
            <param name="key">Key of the property bag entry to return</param>
            <param name="defaultValue"></param>
            <returns>Value of the property bag entry as integer</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WebExtensions.GetPropertyBagValueString(Microsoft.SharePoint.Client.Web,System.String,System.String)">
            <summary>
            Get string typed property bag value. If does not contain, returns given default value.
            </summary>
            <param name="web">Web to read the property bag value from</param>
            <param name="key">Key of the property bag entry to return</param>
            <param name="defaultValue"></param>
            <returns>Value of the property bag entry as string</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WebExtensions.GetPropertyBagValueInternal(Microsoft.SharePoint.Client.Web,System.String)">
            <summary>
            Type independent implementation of the property getter.
            </summary>
            <param name="web">Web to read the property bag value from</param>
            <param name="key">Key of the property bag entry to return</param>
            <returns>Value of the property bag entry</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WebExtensions.PropertyBagContainsKey(Microsoft.SharePoint.Client.Web,System.String)">
            <summary>
            Checks if the given property bag entry exists
            </summary>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="key">Key of the property bag entry to check</param>
            <returns>True if the entry exists, false otherwise</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WebExtensions.GetEncodedValueForSearchIndexProperty(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Used to convert the list of property keys is required format for listing keys to be index
            </summary>
            <param name="keys">list of keys to set to be searchable</param>
            <returns>string formatted list of keys in proper format</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WebExtensions.GetIndexedPropertyBagKeys(Microsoft.SharePoint.Client.Web)">
            <summary>
            Returns all keys in the property bag that have been marked for indexing
            </summary>
            <param name="web">The site to process</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WebExtensions.AddIndexedPropertyBagKey(Microsoft.SharePoint.Client.Web,System.String)">
            <summary>
            Marks a property bag key for indexing
            </summary>
            <param name="web">The web to process</param>
            <param name="key">The key to mark for indexing</param>
            <returns>Returns True if succeeded</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WebExtensions.RemoveIndexedPropertyBagKey(Microsoft.SharePoint.Client.Web,System.String)">
            <summary>
            Unmarks a property bag key for indexing
            </summary>
            <param name="web">The site to process</param>
            <param name="key">The key to unmark for indexed. Case-sensitive</param>
            <returns>Returns True if succeeded</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WebExtensions.ReIndexWeb(Microsoft.SharePoint.Client.Web)">
            <summary>
            Queues a web for a full crawl the next incremental crawl
            </summary>
            <param name="web">Site to be processed</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WebExtensions.AddRemoteEventReceiver(Microsoft.SharePoint.Client.Web,System.String,System.String,Microsoft.SharePoint.Client.EventReceiverType,Microsoft.SharePoint.Client.EventReceiverSynchronization,System.Boolean)">
            <summary>
            Registers a remote event receiver
            </summary>
            <param name="web">The web to process</param>
            <param name="name">The name of the event receiver (needs to be unique among the event receivers registered on this list)</param>
            <param name="url">The URL of the remote WCF service that handles the event</param>
            <param name="eventReceiverType"></param>
            <param name="synchronization"></param>
            <param name="force">If True any event already registered with the same name will be removed first.</param>
            <returns>Returns an EventReceiverDefinition if succeeded. Returns null if failed.</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WebExtensions.AddRemoteEventReceiver(Microsoft.SharePoint.Client.Web,System.String,System.String,Microsoft.SharePoint.Client.EventReceiverType,Microsoft.SharePoint.Client.EventReceiverSynchronization,System.Int32,System.Boolean)">
            <summary>
            Registers a remote event receiver
            </summary>
            <param name="web">The web to process</param>
            <param name="name">The name of the event receiver (needs to be unique among the event receivers registered on this list)</param>
            <param name="url">The URL of the remote WCF service that handles the event</param>
            <param name="eventReceiverType"></param>
            <param name="synchronization"></param>
            <param name="sequenceNumber"></param>
            <param name="force">If True any event already registered with the same name will be removed first.</param>
            <returns>Returns an EventReceiverDefinition if succeeded. Returns null if failed.</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WebExtensions.GetEventReceiverById(Microsoft.SharePoint.Client.Web,System.Guid)">
            <summary>
            Returns an event receiver definition
            </summary>
            <param name="web">Web to process</param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WebExtensions.GetEventReceiverByName(Microsoft.SharePoint.Client.Web,System.String)">
            <summary>
            Returns an event receiver definition
            </summary>
            <param name="web"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WebExtensions.SetLocalizationLabels(Microsoft.SharePoint.Client.Web,System.String,System.String,System.String)">
            <summary>
            Can be used to set translations for different cultures. 
            </summary>
            <example>
                web.SetLocalizationForSiteLabels("fi-fi", "Name of the site in Finnish", "Description in Finnish");
            </example>
            <see href="http://blogs.msdn.com/b/vesku/archive/2014/03/20/office365-multilingual-content-types-site-columns-and-site-other-elements.aspx"/>
            <param name="web">Site to be processed - can be root web or sub site</param>
            <param name="cultureName">Culture name like en-us or fi-fi</param>
            <param name="titleResource">Localized Title string</param>
            <param name="descriptionResource">Localized Description string</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WebExtensions.ApplyProvisioningTemplate(Microsoft.SharePoint.Client.Web,OfficeDevPnP.Core.Framework.Provisioning.Model.ProvisioningTemplate,OfficeDevPnP.Core.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateApplyingInformation)">
            <summary>
            Can be used to apply custom remote provisioning template on top of existing site. 
            </summary>
            <param name="web"></param>
            <param name="template">ProvisioningTemplate with the settings to be applied</param>
            <param name="applyingInformation">Specified additional settings and or properties</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WebExtensions.GetProvisioningTemplate(Microsoft.SharePoint.Client.Web)">
            <summary>
            Can be used to extract custom provisioning template from existing site. The extracted template
            will be compared with the default base template.
            </summary>
            <param name="web">Web to get template from</param>
            <returns>ProvisioningTemplate object with generated values from existing site</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WebExtensions.GetProvisioningTemplate(Microsoft.SharePoint.Client.Web,OfficeDevPnP.Core.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateCreationInformation)">
            <summary>
            Can be used to extract custom provisioning template from existing site. The extracted template
            will be compared with the default base template.
            </summary>
            <param name="web">Web to get template from</param>
            <param name="connector">Connector that will be used to persist the files retrieved from the template "get"</param>
            <param name="creationInfo">Specifies additional settings and/or properties</param>
            <returns>ProvisioningTemplate object with generated values from existing site</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WebExtensions.SetPageOutputCache(Microsoft.SharePoint.Client.Web,System.Boolean,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Sets output cache on publishing web. The settings can be maintained from UI by visiting url /_layouts/15/sitecachesettings.aspx
            </summary>
            <param name="web">SharePoint web</param>
            <param name="enableOutputCache">Specify true to enable output cache. False otherwise.</param>
            <param name="anonymousCacheProfileId">Applies for anonymous users access for a site in Site Collection. Id of the profile specified in "Cache Profiles" list.</param>
            <param name="authenticatedCacheProfileId">Applies for authenticated users access for a site in the Site Collection. Id of the profile specified in "Cache Profiles" list.</param>
            <param name="debugCacheInformation">Specify true to enable the display of additional cache information on pages in this site collection. False otherwise.</param>
        </member>
        <member name="T:Microsoft.SharePoint.Client.WorkflowExtensions">
            <summary>
            Class for deprecated workflow extension methods
            </summary>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WorkflowExtensions.GetWorkflowSubscription(Microsoft.SharePoint.Client.Web,System.String)">
            <summary>
            Returns a workflow subscription for a site.
            </summary>
            <param name="web"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WorkflowExtensions.GetWorkflowSubscription(Microsoft.SharePoint.Client.Web,System.Guid)">
            <summary>
            Returns a workflow subscription
            </summary>
            <param name="web"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WorkflowExtensions.GetWorkflowSubscription(Microsoft.SharePoint.Client.List,System.String)">
            <summary>
            Returns a workflow subscription (associations) for a list
            </summary>
            <param name="list"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WorkflowExtensions.AddWorkflowSubscription(Microsoft.SharePoint.Client.List,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Adds a workflow subscription
            </summary>
            <param name="list"></param>
            <param name="workflowDefinitionName">The name of the workflow definition <seealso>
                    <cref>WorkflowExtensions.GetWorkflowDefinition</cref>
                </seealso>
            </param>
            <param name="subscriptionName">The name of the workflow subscription to create</param>
            <param name="startManually">if True the workflow can be started manually</param>
            <param name="startOnCreate">if True the workflow will be started on item creation</param>
            <param name="startOnChange">if True the workflow will be started on item change</param>
            <param name="historyListName">the name of the history list. If not available it will be created</param>
            <param name="taskListName">the name of the task list. If not available it will be created</param>
            <param name="associationValues"></param>
            <returns>Guid of the workflow subscription</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WorkflowExtensions.AddWorkflowSubscription(Microsoft.SharePoint.Client.List,Microsoft.SharePoint.Client.WorkflowServices.WorkflowDefinition,System.String,System.Boolean,System.Boolean,System.Boolean,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Adds a workflow subscription to a list
            </summary>
            <param name="list"></param>
            <param name="workflowDefinition">The workflow definition. <seealso>
                    <cref>WorkflowExtensions.GetWorkflowDefinition</cref>
                </seealso>
            </param>
            <param name="subscriptionName">The name of the workflow subscription to create</param>
            <param name="startManually">if True the workflow can be started manually</param>
            <param name="startOnCreate">if True the workflow will be started on item creation</param>
            <param name="startOnChange">if True the workflow will be started on item change</param>
            <param name="historyListName">the name of the history list. If not available it will be created</param>
            <param name="taskListName">the name of the task list. If not available it will be created</param>
            <param name="associationValues"></param>
            <returns>Guid of the workflow subscription</returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WorkflowExtensions.Delete(Microsoft.SharePoint.Client.WorkflowServices.WorkflowSubscription)">
            <summary>
            Deletes the subscription
            </summary>
            <param name="subscription"></param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WorkflowExtensions.GetWorkflowDefinition(Microsoft.SharePoint.Client.Web,System.String,System.Boolean)">
            <summary>
            Returns a workflow definition for a site
            </summary>
            <param name="web"></param>
            <param name="displayName"></param>
            <param name="publishedOnly"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WorkflowExtensions.GetWorkflowDefinition(Microsoft.SharePoint.Client.Web,System.Guid)">
            <summary>
            Returns a workflow definition
            </summary>
            <param name="web"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WorkflowExtensions.Delete(Microsoft.SharePoint.Client.WorkflowServices.WorkflowDefinition)">
            <summary>
            Deletes a workflow definition
            </summary>
            <param name="definition"></param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WorkflowExtensions.GetWorkflowInstances(Microsoft.SharePoint.Client.Web)">
            <summary>
            Returns alls workflow instances for a site
            </summary>
            <param name="web"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WorkflowExtensions.GetWorkflowInstances(Microsoft.SharePoint.Client.Web,Microsoft.SharePoint.Client.ListItem)">
            <summary>
            Returns alls workflow instances for a list item
            </summary>
            <param name="web"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WorkflowExtensions.GetInstances(Microsoft.SharePoint.Client.WorkflowServices.WorkflowSubscription)">
            <summary>
            Returns all instances of a workflow for this subscription
            </summary>
            <param name="subscription"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WorkflowExtensions.CancelWorkFlow(Microsoft.SharePoint.Client.WorkflowServices.WorkflowInstance)">
            <summary>
            Cancels a workflow instance
            </summary>
            <param name="instance"></param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WorkflowExtensions.ResumeWorkflow(Microsoft.SharePoint.Client.WorkflowServices.WorkflowInstance)">
            <summary>
            Resumes a workflow
            </summary>
            <param name="instance"></param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.WorkflowExtensions.PublishCustomEvent(Microsoft.SharePoint.Client.WorkflowServices.WorkflowInstance,System.String,System.String)">
            <summary>
            Publish a custom event to a target workflow instance
            </summary>
            <param name="instance"></param>
            <param name="eventName">The name of the target event</param>
            <param name="payload">The payload that will be sent to the event</param>
        </member>
        <member name="T:Microsoft.SharePoint.Client.ListRatingExtensions">
            <summary>
            Enables: Ratings / Likes functionality on list in publishing web.
            </summary>
        </member>
        <member name="F:Microsoft.SharePoint.Client.ListRatingExtensions.RatingsFieldGuid_AverageRating">
            TODO: Replace Logging throughout 
        </member>
        <member name="M:Microsoft.SharePoint.Client.ListRatingExtensions.SetRating(Microsoft.SharePoint.Client.List,OfficeDevPnP.Core.VotingExperience)">
            <summary>
            Enable Social Settings Likes/Ratings on list. 
            Note: 1. Requires Publishing feature enabled on the web.
                  2. Defaults enable Ratings Experience on the List
            </summary>
            <param name="list">Current List</param>
            <param name="experience">Likes/Ratings</param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ListRatingExtensions.AddListFields">
            <summary>
            Add Ratings/Likes related fields to List from current Web
            </summary>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ListRatingExtensions.AddViewFields(OfficeDevPnP.Core.VotingExperience)">
            <summary>
            Add/Remove Ratings/Likes field in default view depending on exerpeince selected
            </summary>
            <param name="experience"></param>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ListRatingExtensions.EnsureField(Microsoft.SharePoint.Client.List,System.Guid)">
            <summary>
            Check for Ratings/Likes field and add to ListField if doesn't exists.
            </summary>
            <param name="list">List</param>
            <param name="fieldId">Field Id</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SharePoint.Client.ListRatingExtensions.AddProperty(OfficeDevPnP.Core.VotingExperience)">
            <summary>
            Add required key/value settings on List Root-Folder
            </summary>
            <param name="experience"></param>
        </member>
        <member name="T:OfficeDevPnP.Core.AuthenticationManager">
            <summary>
            This manager class can be used to obtain a SharePointContext object
            </summary>
        </member>
        <member name="M:OfficeDevPnP.Core.AuthenticationManager.GetSharePointOnlineAuthenticatedContextTenant(System.String,System.String,System.String)">
            <summary>
            Returns a SharePointOnline ClientContext object 
            </summary>
            <param name="siteUrl">Site for which the ClientContext object will be instantiated</param>
            <param name="tenantUser">User to be used to instantiate the ClientContext object</param>
            <param name="tenantUserPassword">Password of the user used to instantiate the ClientContext object</param>
            <returns>ClientContext to be used by CSOM code</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.AuthenticationManager.GetSharePointOnlineAuthenticatedContextTenant(System.String,System.String,System.Security.SecureString)">
            <summary>
            Returns a SharePointOnline ClientContext object 
            </summary>
            <param name="siteUrl">Site for which the ClientContext object will be instantiated</param>
            <param name="tenantUser">User to be used to instantiate the ClientContext object</param>
            <param name="tenantUserPassword">Password (SecureString) of the user used to instantiate the ClientContext object</param>
            <returns>ClientContext to be used by CSOM code</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.AuthenticationManager.GetAppOnlyAuthenticatedContext(System.String,System.String,System.String,System.String)">
            <summary>
            Returns an app only ClientContext object
            </summary>
            <param name="siteUrl">Site for which the ClientContext object will be instantiated</param>
            <param name="realm">Realm of the environment (tenant) that requests the ClientContext object</param>
            <param name="appId">Application ID which is requesting the ClientContext object</param>
            <param name="appSecret">Application secret of the Application which is requesting the ClientContext object</param>
            <returns>ClientContext to be used by CSOM code</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.AuthenticationManager.GetNetworkCredentialAuthenticatedContext(System.String,System.String,System.String,System.String)">
            <summary>
            Returns a SharePoint on-premises / SharePoint Online Dedicated ClientContext object
            </summary>
            <param name="siteUrl">Site for which the ClientContext object will be instantiated</param>
            <param name="user">User to be used to instantiate the ClientContext object</param>
            <param name="password">Password of the user used to instantiate the ClientContext object</param>
            <param name="domain">Domain of the user used to instantiate the ClientContext object</param>
            <returns>ClientContext to be used by CSOM code</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.AuthenticationManager.GetNetworkCredentialAuthenticatedContext(System.String,System.String,System.Security.SecureString,System.String)">
            <summary>
            Returns a SharePoint on-premises / SharePoint Online Dedicated ClientContext object
            </summary>
            <param name="siteUrl">Site for which the ClientContext object will be instantiated</param>
            <param name="user">User to be used to instantiate the ClientContext object</param>
            <param name="password">Password (SecureString) of the user used to instantiate the ClientContext object</param>
            <param name="domain">Domain of the user used to instantiate the ClientContext object</param>
            <returns>ClientContext to be used by CSOM code</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.AuthenticationManager.GetADFSUserNameMixedAuthenticatedContext(System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Returns a SharePoint on-premises ClientContext for sites secured via ADFS
            </summary>
            <param name="siteUrl">Url of the SharePoint site that's secured via ADFS</param>
            <param name="user">Name of the user (e.g. administrator) </param>
            <param name="password">Password of the user</param>
            <param name="domain">Windows domain of the user</param>
            <param name="sts">Hostname of the ADFS server (e.g. sts.company.com)</param>
            <param name="idpId">Identifier of the ADFS relying party that we're hitting</param>
            <param name="logonTokenCacheExpirationWindow">Optioanlly provide the value of the SharePoint STS logonTokenCacheExpirationWindow. Defaults to 10 minutes.</param>
            <returns>ClientContext to be used by CSOM code</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.AuthenticationManager.RefreshADFSUserNameMixedAuthenticatedContext(System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Refreshes the SharePoint FedAuth cookie 
            </summary>
            <param name="siteUrl">Url of the SharePoint site that's secured via ADFS</param>
            <param name="user">Name of the user (e.g. administrator) </param>
            <param name="password">Password of the user</param>
            <param name="domain">Windows domain of the user</param>
            <param name="sts">Hostname of the ADFS server (e.g. sts.company.com)</param>
            <param name="idpId">Identifier of the ADFS relying party that we're hitting</param>
            <param name="logonTokenCacheExpirationWindow">Optioanlly provide the value of the SharePoint STS logonTokenCacheExpirationWindow. Defaults to 10 minutes.</param>
        </member>
        <member name="M:OfficeDevPnP.Core.AuthenticationManager.EnsureToken(System.String,System.String,System.String,System.String)">
            <summary>
            Ensure that AppAccessToken is filled with a valid string representation of the OAuth AccessToken. This method will launch handle with token cleanup after the token expires
            </summary>
            <param name="siteUrl">Site for which the ClientContext object will be instantiated</param>
            <param name="realm">Realm of the environment (tenant) that requests the ClientContext object</param>
            <param name="appId">Application ID which is requesting the ClientContext object</param>
            <param name="appSecret">Application secret of the Application which is requesting the ClientContext object</param>
        </member>
        <member name="T:OfficeDevPnP.Core.BuiltInContentTypeId">
            <summary>
            A class that returns strings that represent identifiers (IDs) for built-in content types.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.BuiltInContentTypeId.DocumentSet">
            <summary>
            Contains the content identifier (ID) for the DocumentSet content type. To get content type from a list, use BestMatchContentTypeId().
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.BuiltInContentTypeId.Item">
            <summary>
            Contains the content identifier (ID) for the Item content type.
            </summary>
        </member>
        <member name="T:OfficeDevPnP.Core.Constants">
            <summary>
            Constants
            </summary>
        </member>
        <member name="T:OfficeDevPnP.Core.Entities.AreaNavigationEntity">
            <summary>
            Entity description navigation
            </summary>
        </member>
        <member name="M:OfficeDevPnP.Core.Entities.AreaNavigationEntity.#ctor">
            <summary>
            ctor
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.AreaNavigationEntity.GlobalNavigation">
            <summary>
            Specifies the Global Navigation (top bar navigation)
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.AreaNavigationEntity.CurrentNavigation">
            <summary>
            Specifies the Current Navigation (quick launch navigation)
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.AreaNavigationEntity.Sorting">
            <summary>
            Defines the sorting
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.AreaNavigationEntity.SortAscending">
            <summary>
            Defines if sorted ascending
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.AreaNavigationEntity.SortBy">
            <summary>
            Defines sorted by value
            </summary>
        </member>
        <member name="T:OfficeDevPnP.Core.Entities.CustomActionEntity">
            <summary>
            CustomActionEntity class describes the information for a Custom Action
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.CustomActionEntity.CommandUIExtension">
            <summary>
            Gets or sets a value that specifies an implementation specific XML fragment that determines user interface properties of the custom action
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.CustomActionEntity.RegistrationId">
            <summary>
            Gets or sets the value that specifies the identifier of the object associated with the custom action.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.CustomActionEntity.RegistrationType">
            <summary>
            Specifies the type of object associated with the custom action. A Nullable Type
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.CustomActionEntity.Name">
            <summary>
            Gets or sets the name of the custom action.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.CustomActionEntity.Description">
            <summary>
            Description of the custom action
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.CustomActionEntity.Title">
            <summary>
            Custom action title
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.CustomActionEntity.Location">
            <summary>
            Custom action location (A string that contains the location; for example, Microsoft.SharePoint.SiteSettings)
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.CustomActionEntity.ScriptBlock">
            <summary>
            The JavaScript to be executed by this custom action
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.CustomActionEntity.Sequence">
            <summary>
            The sequence number of this custom action
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.CustomActionEntity.ImageUrl">
            <summary>
            The URL to the image used for this custom action
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.CustomActionEntity.Group">
            <summary>
            The group of this custom action
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.CustomActionEntity.Url">
            <summary>
            The URL this custom action should navigate the user to
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.CustomActionEntity.Rights">
            <summary>
            Gets or sets the value that specifies the permissions needed for the custom action.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.CustomActionEntity.Remove">
            <summary>
            Indicates if the custom action will need to be removed
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.CustomActionEntity.ScriptSrc">
            <summary>
            Gets or sets a value that specifies the URI of a file which contains the ECMAScript to execute on the page
            </summary>
        </member>
        <member name="T:OfficeDevPnP.Core.Entities.DefaultColumnTermPathValue">
            <summary>
            Specifies a default column value for a document library
            </summary>
        </member>
        <member name="M:OfficeDevPnP.Core.Entities.DefaultColumnTermPathValue.#ctor">
            <summary>
            ctor
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.DefaultColumnTermPathValue.FolderRelativePath">
            <summary>
            The Path of the folder, Rootfolder of the document library is "/" 
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.DefaultColumnTermPathValue.FieldInternalName">
            <summary>
            The internal name of the field
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.DefaultColumnTermPathValue.TermPaths">
            <summary>
            Taxonomy paths in the shape of "TermGroup|TermSet|Term"
            </summary>
        </member>
        <member name="T:OfficeDevPnP.Core.Entities.IDefaultColumnValue">
            <summary>
            IDefaultColumnValue
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.IDefaultColumnValue.FolderRelativePath">
            <summary>
            Folder relative path
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.IDefaultColumnValue.FieldInternalName">
            <summary>
            Field internal name
            </summary>
        </member>
        <member name="T:OfficeDevPnP.Core.Entities.DefaultColumnTermValue">
            <summary>
            Specifies a default column value for a document library
            </summary>
        </member>
        <member name="T:OfficeDevPnP.Core.Entities.DefaultColumnValue">
            <summary>
            DefaultColumnValue
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.DefaultColumnValue.FolderRelativePath">
            <summary>
            The Path of the folder, Rootfolder of the document library is "/" 
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.DefaultColumnValue.FieldInternalName">
            <summary>
            The internal name of the field
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.DefaultColumnTermValue.Terms">
            <summary>
            Taxonomy paths in the shape of "TermGroup|TermSet|Term"
            </summary>
        </member>
        <member name="T:OfficeDevPnP.Core.Entities.DefaultColumnTextValue">
            <summary>
            DefaultColumnTextValue
            </summary>
        </member>
        <member name="T:OfficeDevPnP.Core.Entities.ExternalUserEntity">
            <summary>
            External user entity
            </summary>
        </member>
        <member name="T:OfficeDevPnP.Core.Entities.SiteEntity">
            <summary>
            SiteEntity class describes the information for a SharePoint site (collection)
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.SiteEntity.Url">
            <summary>
            The SPO url
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.SiteEntity.Title">
            <summary>
            The site title
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.SiteEntity.Description">
            <summary>
            The site description
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.SiteEntity.SiteOwnerLogin">
            <summary>
            The site owner
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.SiteEntity.CurrentResourceUsage">
            <summary>
            The current resource usage points 
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.SiteEntity.Lcid">
            <summary>
            The site locale. See http://technet.microsoft.com/en-us/library/ff463597.aspx for a complete list of Lcid's
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.SiteEntity.StorageMaximumLevel">
            <summary>
            Site quota in MB
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.SiteEntity.StorageUsage">
            <summary>
            The storage quota usage in MB
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.SiteEntity.StorageWarningLevel">
            <summary>
            Site quota warning level in MB
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.SiteEntity.LastContentModifiedDate">
            <summary>
            The last modified date/time of the site collection's content
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.SiteEntity.Template">
            <summary>
            Site template being used
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.SiteEntity.TimeZoneId">
            <summary>
            TimeZoneID for the site. "(UTC+01:00) Brussels, Copenhagen, Madrid, Paris" = 3 
            See http://blog.jussipalo.com/2013/10/list-of-sharepoint-timezoneid-values.html for a complete list
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.SiteEntity.UserCodeMaximumLevel">
            <summary>
            The user code quota in points
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.SiteEntity.UserCodeWarningLevel">
            <summary>
            The user code quota warning level in points
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.SiteEntity.WebsCount">
            <summary>
            The count of the SPWeb objects in the site collection
            </summary>
        </member>
        <member name="T:OfficeDevPnP.Core.Entities.SitePolicyEntity">
            <summary>
            Properties of a site policy object
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.SitePolicyEntity.Description">
            <summary>
            The description of the policy
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.SitePolicyEntity.EmailBody">
            <summary>
            The body of the notification email if there is no site mailbox associated with the site. 
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.SitePolicyEntity.EmailBodyWithTeamMailbox">
            <summary>
            The body of the notification email if there is a site mailbox associated with the site.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.SitePolicyEntity.EmailSubject">
            <summary>
            The subject of the notification email. 
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.SitePolicyEntity.Name">
            <summary>
            The name of the policy
            </summary>
        </member>
        <member name="T:OfficeDevPnP.Core.Entities.VariationInformation">
            <summary>
            Class containing variation configuration information
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.VariationInformation.AutomaticCreation">
            <summary>
            Automatic creation 
            Mapped to property "EnableAutoSpawnPropertyName"
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.VariationInformation.RecreateDeletedTargetPage">
            <summary>
            Recreate Deleted Target Page; set to false to enable recreation
            Mapped to property "AutoSpawnStopAfterDeletePropertyName"
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.VariationInformation.UpdateTargetPageWebParts">
            <summary>
            Update Target Page Web Parts
            Mapped to property "UpdateWebPartsPropertyName"
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.VariationInformation.CopyResources">
            <summary>
            Copy resources
            Mapped to property "CopyResourcesPropertyName"
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.VariationInformation.SendNotificationEmail">
            <summary>
            Send email notification
            Mapped to property "SendNotificationEmailPropertyName"
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.VariationInformation.RootWebTemplate">
            <summary>
            Configuration setting site template to be used for the top sites of each label
            Mapped to property "SourceVarRootWebTemplatePropertyName"
            </summary>
        </member>
        <member name="T:OfficeDevPnP.Core.Entities.VariationLabelEntity">
            <summary>
            Class represents variation label
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.VariationLabelEntity.Title">
            <summary>
            The variation label title
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.VariationLabelEntity.Description">
            <summary>
            The variation label description
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.VariationLabelEntity.FlagControlDisplayName">
            <summary>
            The flag to control display name
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.VariationLabelEntity.Language">
            <summary>
            The variation label language
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.VariationLabelEntity.Locale">
            <summary>
            The variation label locale
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.VariationLabelEntity.HierarchyCreationMode">
            <summary>
            The hierarchy creation mode
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.VariationLabelEntity.IsSource">
            <summary>
            Set as source variation
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.VariationLabelEntity.IsCreated">
            <summary>
            Gets a value indicating whether the variation label has been created
            </summary>
        </member>
        <member name="T:OfficeDevPnP.Core.Entities.WebPartEntity">
            <summary>
            Class that describes information about a web part 
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.WebPartEntity.WebPartXml">
            <summary>
            XML representation of the web part
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.WebPartEntity.WebPartZone">
            <summary>
            Zone that will need to hold the web part
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.WebPartEntity.WebPartIndex">
            <summary>
            Index (order) of the web part in it's zone
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.WebPartEntity.WebPartTitle">
            <summary>
            Title of the web part
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.WebTemplateEntity.LanguageCode">
            <summary>
            Language code, use 'all' or leave empty when not relevant
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Entities.WebTemplateEntity.TemplateName">
            <summary>
            Template name in format of BLOG#0
            </summary>
        </member>
        <member name="T:OfficeDevPnP.Core.Entities.YammerGroup">
            <summary>
            Represents Yammer Group information
            Generated based on Yammer response on 30th of June 2014 and using http://json2csharp.com/ service 
            </summary>
        </member>
        <member name="T:OfficeDevPnP.Core.Entities.YammerUser">
            <summary>
            Represents YammerUser
            Generated based on Yammer response on 30th of June 2014 and using http://json2csharp.com/ service 
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.ContentTypeId">
            <summary>
            Returns a GUID that represents the content type identifier of the specified Windows SharePoint Services object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.ContentType">
            <summary>
            Returns a GUID that represents the content type of the specified Windows SharePoint Services object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.Modified">
            <summary>
            Returns a GUID that represents the last modified date and time information that is associated with the specified Windows SharePoint Services object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.Created">
            <summary>
            Returns a GUID that represents the date and time when the specified Windows SharePoint Services object was created.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.Author">
            <summary>
            Returns a GUID that represents the specified author of the Windows SharePoint Services object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.Editor">
            <summary>
            Returns a GUID that is used to represent the editor name or information that is associated with a person who is referenced by a Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.owshiddenversion">
            <summary>
            Returns a GUID that represents the internal version of a rowset, and is used when the rowset includes multiple versions of the same Windows SharePoint Services list item object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId._Author">
            <summary>
            Returns a GUID that represents the author of the specified Windows SharePoint Services object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId._Category">
            <summary>
            Returns a string that represents the category of the specified Windows SharePoint Services object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.FileRef">
            <summary>
            Returns a GUID that represents information about the server-relative URL for the specified Windows SharePoint Services object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.FileDirRef">
            <summary>
            Returns a GUID that represents information about the file directory for the specified Windows SharePoint Services object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.Last_x0020_Modified">
            <summary>
            Returns a GUID that represents version control information for the last modified version of the specified Windows SharePoint Services list object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.Created_x0020_Date">
            <summary>
            Returns a GUID that indicates the date that is associated with the creation of the specified Windows SharePoint Services object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.File_x0020_Size">
            <summary>
            Returns a GUID that represents information about the file size for the version history of the specified Windows SharePoint Services list object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.FSObjType">
            <summary>
            Returns a GUID that represents information about the file system type for the specified Windows SharePoint Services object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.CheckoutUser">
            <summary>
            Returns a GUID that represents the designated user who has checked out the Windows SharePoint Services object by using version control.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.VirusStatus">
            <summary>
            Returns a GUID that represents the virus scan status of a specified Windows SharePoint Services object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.InstanceID">
            <summary>
            Returns a GUID that represents the associated instance identifier for the history of the specified Windows SharePoint Services list object that was used under version control.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId._CheckinComment">
            <summary>
            Returns a GUID that represents the check-in comments of the specified Windows SharePoint Services object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId._Level">
            <summary>
            Returns a GUID that represents the version control alert level information of the specified Windows SharePoint Services object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId._IsCurrentVersion">
            <summary>
            Returns a GUID that represents the latest version information of the check-in history of the specified Windows SharePoint Services object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId._HasCopyDestinations">
            <summary>
            Returns a GUID that represents the destination information of the specified Windows SharePoint Services object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId._CopySource">
            <summary>
            Returns a GUID that represents the CopySource property of the specified Windows SharePoint Services object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId._ModerationStatus">
            <summary>
            Returns a GUID that represents the information about the moderation status of the specified Windows SharePoint Services object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId._ModerationComments">
            <summary>
            Returns a GUID that represents information about the moderation comments  of the specified Windows SharePoint Services weblog object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.Title">
            <summary>
            Returns a GUID that represents information about the occupational title of a specified Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.Attachments">
            <summary>
            Returns a GUID that represents the attachments that are associated with the specified Windows SharePoint Services object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.Edit">
            <summary>
            Returns a GUID that indicates the editing state icon that is associated with the specified Windows SharePoint Services object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.GUID">
            <summary>
            Returns a GUID that is used to return the GUID of the specified Windows SharePoint Services object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.WorkflowInstanceID">
            <summary>
            Returns a GUID that represents the workflow instance identifier that is specified in a Windows SharePoint Services workflow task object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.FileLeafRef">
            <summary>
            Returns a GUID that represents information about the server-relative URL for the file node that is associated with the specified Windows SharePoint Services object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.EmailSender">
            <summary>
            Returns a GUID that represents information about the fully qualified e-mail sender for the specified Windows SharePoint Services list object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.EmailTo">
            <summary>
            Returns a GUID that represents the "sent to" information for the specified Windows SharePoint Services list object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.EmailCc">
            <summary>
            Returns a GUID that is used to represent information about the e-mail carbon copy recipient for the specified SharePoint list object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.EmailFrom">
            <summary>
            Returns a GUID that is used to represent information about the e-mail display name for the specified Windows SharePoint Services list object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.EmailSubject">
            <summary>
            Returns a GUID that represents the subject information for the specified Windows SharePoint Services list object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.EmailCalendarUid">
            <summary>
            Returns a GUID that is used to represent the update identifier that is associated with the specified Windows SharePoint Services calendar event object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.EmailCalendarSequence">
            <summary>
            Returns a GUID that is used to represent the sequence modification number that is associated with the specified Windows SharePoint Services calendar event object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.EmailCalendarDateStamp">
            <summary>
            Returns a GUID that is used to represent the date stamp information that is associated with the specified Windows SharePoint Services calendar object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId._UIVersion">
            <summary>
            Returns a GUID that represents the version number of the user interface of the specified Windows SharePoint Services weblog object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId._UIVersionString">
            <summary>
            Returns a GUID that represents the version string that is associated with the user interface of the specified Windows SharePoint Services weblog object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.Created_x0020_By">
            <summary>
            Returns a GUID that indicates the user who is associated with the creation of the specified Windows SharePoint Services object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.File_x0020_Type">
            <summary>
            Returns a GUID that represents file type information that is associated with the version history for the specified Windows SharePoint Services list object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId._SourceUrl">
            <summary>
            Returns a GUID that represents the source URL of the specified Windows SharePoint Services weblog object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId._SharedFileIndex">
            <summary>
            Returns a GUID that represents information about the shared file index of the specified Windows SharePoint Services object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.LinkFilenameNoMenu">
            <summary>
            Returns a GUID that represents the icon that is used to create a link to a file in a document library, where the file can be edited without using a menu.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId._EditMenuTableStart">
            <summary>
            Returns a GUID that represents the EditMenuTableEnd property of the specified Windows SharePoint Services object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId._EditMenuTableEnd">
            <summary>
            Returns a GUID that represents the EditMenuTableEnd property of the specified Windows SharePoint Services object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.LinkFilename">
            <summary>
            Returns a GUID that represents the icon that is used to create a link to a file in a document library, where the file can be edited by using a menu.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.DocIcon">
            <summary>
            Returns a GUID that specifies the document icon that is associated with the creation of the specified Windows SharePoint Services template document object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.EncodedAbsUrl">
            <summary>
            Returns a GUID that represents the encoded search URL for the specified Windows SharePoint Services object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.BaseName">
            <summary>
            Returns a GUID that represents the base name of the specified Windows SharePoint Services object that does not include URL information.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.FileSizeDisplay">
            <summary>
            Returns a GUID that represents information about the properly formatted file size for version history of the specified Windows SharePoint Services list object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.Body">
            <summary>
            Returns a GUID that represents the body of the specified Windows SharePoint Services message object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.Expires">
            <summary>
            Returns a GUID that represents expiration date for the specified Windows SharePoint Services announcement object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.URL">
            <summary>
            Returns a GUID that represents the URL of a Windows SharePoint Services link object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId._Comments">
            <summary>
            Returns a GUID that represents comments that are associated with the specified Windows SharePoint Services object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.EndDate">
            <summary>
            Returns a GUID that represents the end date for the specified Windows SharePoint Services workflow task object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.URLwMenu">
            <summary>
            Returns a GUID that represents the associated URL for the specified Windows SharePoint Services link object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.LastNamePhonetic">
            <summary>
            Returns a GUID that represents information about the phonetics (speech sounds) that are associated with the last name of the specified Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.FirstName">
            <summary>
            Returns a GUID that represents the first name for the specified Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.FirstNamePhonetic">
            <summary>
            Returns a GUID that represents the phonetic information (speech sounds) that are associated with the specified first name for the Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.FullName">
            <summary>
            Returns a GUID that represents information about the full name of a person who is referenced in a specified Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.CompanyPhonetic">
            <summary>
            Returns a GUID that represents pronunciation information for the person or company that is specified in a Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.Company">
            <summary>
            Returns a GUID that represents the company information for the person who is referenced in a Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.JobTitle">
            <summary>
            Returns a GUID that represents the job title of the person who is referenced in a Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.WorkPhone">
            <summary>
            Returns a GUID that represents the corporate telephone number for the person who is referenced in a specified Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.HomePhone">
            <summary>
            Returns a GUID that represents the home telephone number for the person specified in a Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.CellPhone">
            <summary>
            Returns a GUID that represents the cell phone number of the person who is specified in a Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.WorkFax">
            <summary>
            Returns a GUID that represents the corporate fax information for the person specified in a Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.WorkAddress">
            <summary>
            Returns a GUID that represents the work address of the person who is referenced in the Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.WorkCity">
            <summary>
            Returns a GUID that represents the work city for the person who is referenced in a specified Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.WorkState">
            <summary>
            Returns a GUID that represents the regional corporate information for a person who is referenced in a specified Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.WorkZip">
            <summary>
            Returns a GUID that represents the work ZIP code for a person who is referenced in a specified Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.WorkCountry">
            <summary>
            Returns a GUID that represents the corporate country information for a person who is referenced in a Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.WebPage">
            <summary>
            Returns a GUID that represents the Web page that is associated with a person who is referenced in a specified  Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.Priority">
            <summary>
            Returns a GUID that represents the priority information that is associated with a Windows SharePoint Services workflow task object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.TaskStatus">
            <summary>
            Returns a GUID that represents information about the enumerated completion status for a specified Windows SharePoint Services task object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.PercentComplete">
            <summary>
            Returns a GUID that represents information about what percent of a specified Windows SharePoint Services workflow object is completed.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.AssignedTo">
            <summary>
            Returns a GUID that indicates the user to whom the specified Windows SharePoint Services workflow task object is assigned.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.TaskGroup">
            <summary>
            Returns a GUID that represents information about the task group for a specified Windows SharePoint Services task object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.StartDate">
            <summary>
            Returns a GUID that represents information about the start date of a task that is associated with the specified Windows SharePoint Services task object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.TaskDueDate">
            <summary>
            Returns a GUID that represents information about the due date for a specified Windows SharePoint Services task object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.WorkflowLink">
            <summary>
            Returns a GUID that represents the workflow URL that is specified in a Windows SharePoint Services workflow task object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.OffsiteParticipant">
            <summary>
            Returns a GUID that represents information about an off-site participant user object that is associated with the specified Windows SharePoint Services workflow object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.OffsiteParticipantReason">
            <summary>
            Returns a GUID that represents information about why an offsite participant is offsite. This information, in turn, is associated with the specified Windows SharePoint Services workflow object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.WorkflowOutcome">
            <summary>
            Returns a GUID that represents the type of outcome (for example, "Approved" or "Rejected") that is associated with a specified Windows SharePoint Services workflow task object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.WorkflowName">
            <summary>
            Returns a GUID that represents the workflow name that is specified in a Windows SharePoint Services workflow task object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.TaskType">
            <summary>
            Returns a GUID that represents information about the task type of a specified Windows SharePoint Services task object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.EmailBody">
            <summary>
            Returns a GUID that is used to represent information about the custom e-mail body of the specified Windows SharePoint Services object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.HasCustomEmailBody">
            <summary>
            Returns a GUID that references the custom e-mail body of the specified Windows SharePoint Services workflow task object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.PendingModTime">
            <summary>
            Returns a GUID that represents the time when the specified Windows SharePoint Services workflow object modifications were accepted (and not rolled back to an earlier version).
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.Completed">
            <summary>
            Returns a GUID that represents information about the completed status of the specified Windows SharePoint Services workflow task object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.Location">
            <summary>
            Returns a GUID that represents information about the physical location that is associated with a person who is referenced in a specified Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.fRecurrence">
            <summary>
            Returns a GUID that represents information about the recurrence field of the specified Windows SharePoint Services calendar event object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.WorkspaceLink">
            <summary>
            Returns a GUID that represents the URL for the meeting workspace for a specified Windows SharePoint Services event object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.EventType">
            <summary>
            Returns a GUID that represents information about the event type for the specified Windows SharePoint Services calendar event object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.UID">
            <summary>
            Returns a GUID that represents an update identifier for a Windows SharePoint Services calendar event object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.RecurrenceID">
            <summary>
            Returns a GUID that represents the recurrence identifier for a specified Windows SharePoint Services calendar event object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.EventCanceled">
            <summary>
            Returns a GUID that represents cancellation information for the specified Windows SharePoint Services calendar event object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.Duration">
            <summary>
            Returns a GUID that is associated with the duration of an event, as represented in a Windows SharePoint Services workflow event object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.RecurrenceData">
            <summary>
            Returns a GUID that represents information about the recurrence data that is associated with a Windows SharePoint Services calendar event object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.TimeZone">
            <summary>
            Returns a GUID that represents the time zone that is associated with a specified Windows SharePoint Services site or user object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.XMLTZone">
            <summary>
            Returns a GUID that indicates a time zone that is expressed in XML format and is associated with the specified Windows SharePoint Services object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.Workspace">
            <summary>
            Returns a GUID that represents the meeting workspace information for a specified Windows SharePoint Services event object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.IssueStatus">
            <summary>
            Returns a GUID that is used to indicate the issue status (for example, "Active", "Resolved", "Closed") that is associated with the specified Windows SharePoint Services object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.Comment">
            <summary>
            Returns a GUID that represents the comments that are associated with the specified Windows SharePoint Services object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.Comments">
            <summary>
            Returns a GUID that represents comments that are associated with a person who is referenced in a Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.Category">
            <summary>
            Returns a GUID that represents the data category of the specified Windows SharePoint Services message object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.RelatedIssues">
            <summary>
            Returns a GUID that represents related issues for a specified Windows SharePoint Services issue object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.V3Comments">
            <summary>
            Returns a GUID that represents the comments that are associated with a change in issue status (for example, changing an item to "Active", "Resolved", or "Closed" status) of the specified Windows SharePoint Services issue object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.Name">
            <summary>
            Returns a GUID that represents the name of the person who is referenced in a specified Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.EMail">
            <summary>
            Returns a GUID that is used to represent the e-mail address of a person who is represented by a Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.Notes">
            <summary>
            Returns a GUID that represents the notes that are associated with the person who is referenced in a specified Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.IsSiteAdmin">
            <summary>
            Returns a GUID that indicates whether the person who is associated with the specified Windows SharePoint Services user object is a site administrator.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.Deleted">
            <summary>
            Returns a GUID that is used to represent deletion information that is associated with the specified Windows SharePoint Services object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.Picture">
            <summary>
            Returns a GUID that represents the graphic image that is associated with a specified Windows SharePoint Services object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.Department">
            <summary>
            Returns a GUID that is used to represent information about the department information for the specified Windows SharePoint Services object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.SipAddress">
            <summary>
            Returns a GUID that represents the Session Initiation Protocol (SIP) information for a Windows SharePoint Services user object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.IsActive">
            <summary>
            Returns a GUID that is used to indicate whether a person who is associated with the specified Windows SharePoint Services user profile object is marked as active or inactive by the site administrator.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.TrimmedBody">
            <summary>
            Returns a GUID that represents whether or not the text that follows the first HTML division has been trimmed for the specified Windows SharePoint Services discussion board object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.EmailReferences">
            <summary>
            Returns a GUID that represents information about the header of the specified Windows SharePoint Services list object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.ParentFolderId">
            <summary>
            Returns a GUID that represents the identifier of the parent folder of the specified Windows SharePoint Services object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.DiscussionTitleLookup">
            <summary>
            Returns a GUID that is used to represent lookup information for the associated title of the specified Windows SharePoint Services discussion board message object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.DiscussionTitle">
            <summary>
            Returns a GUID that is used to represent information about the discussion title for the specified Windows SharePoint Services object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.LinkDiscussionTitleNoMenu">
            <summary>
            Returns a GUID that represents the linked discussion thread title, in which the discussion items in a discussion board can be edited without using  a menu.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.LinkDiscussionTitle">
            <summary>
            Returns a GUID that represents the linked discussion thread title, in which discussion items in a discussion board can be edited by using a menu.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.IndentLevel">
            <summary>
            Returns a GUID that represents information about the associated reply indentation level of the specified Windows SharePoint Services discussion board object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.Indentation">
            <summary>
            Returns a GUID that represents information about the associated reply indentation level of the specified Windows SharePoint Services discussion board object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.BodyAndMore">
            <summary>
            Returns a GUID that represents the body and associated indexing information (for example, the subject or discussion thread title) of the specified Windows SharePoint Services discussion board object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.BodyWasExpanded">
            <summary>
            Returns a GUID that represents the expansion of the body and associated indexing information (for example, the subject or discussion thread title) of the specified Windows SharePoint Services message object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.CorrectBodyToShow">
            <summary>
            Returns a GUID that represents the appropriate message body to display.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.FullBody">
            <summary>
            Returns a GUID that represents a link that provides a large amount of disclosed information from the message body for the specified Windows SharePoint Services discussion board object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.LimitedBody">
            <summary>
            Returns a GUID that represents a link that provides a small amount of disclosed information from the message body for the specified Windows SharePoint Services discussion board object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.MoreLink">
            <summary>
            Returns a GUID that represents a link that provides a large amount of disclosed information (in snippet form) for the specified Windows SharePoint Services discussion board object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.LessLink">
            <summary>
            Returns a GUID that represents a link that provides a small amount of disclosed information (in snippet form) for the specified Windows SharePoint Services discussion board object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.ToggleQuotedText">
            <summary>
            Returns a GUID that represents whether or not quoted text can be toggled in the specified Windows SharePoint Services discussion board object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.PersonImage">
            <summary>
            Returns a GUID that represents the image of the person who is referenced by a specified Windows SharePoint Services user object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.PersonViewMinimal">
            <summary>
            Returns a GUID that represents the minimal personal view of information that is associated with a user (for example, the header information that is associated with a discussion thread title) of the specified Windows SharePoint Services discussion board object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.Combine">
            <summary>
            Returns a GUID that represents combined file information as well as a specific base name of a Windows SharePoint Services object. This file information can be specific to a UNC path, a URL, local directories, or local files.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.WorkflowInstance">
            <summary>
            Returns a GUID that represents the workflow instance that is specified in a Windows SharePoint Services workflow task object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.WorkflowAssociation">
            <summary>
            Returns a GUID that represents an identifier that is associated with  another workflow object, as specified with a Windows SharePoint Services workflow task object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.WorkflowTemplate">
            <summary>
            Returns a GUID that represents the template that is associated with a Windows SharePoint Services workflow task object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.Item">
            <summary>
            Returns a GUID that represents the item identifier for the specified Windows SharePoint Services object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.User">
            <summary>
            Returns a GUID that represents the user information that is associated with the specified Windows SharePoint Services object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.Occurred">
            <summary>
            Returns a GUID that represents whether or not a workflow event has occurred for the specified Windows SharePoint Services workflow task object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.Event">
            <summary>
            Returns a GUID that represents the name of the specified Windows SharePoint Services event object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.Group">
            <summary>
            Returns a GUID that represents information about the permissions group of the specified Windows SharePoint Services object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.Outcome">
            <summary>
            Returns a GUID that represents the outcome that is associated with the specified Windows SharePoint Services workflow object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.DLC_Duration">
            <summary>
            Returns a GUID that is associated with an event duration, as represented in a Windows SharePoint Services workflow event object This GUID is limited to a maximum of 255 characters.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.DLC_Description">
            <summary>
            Returns a GUID that is associated with an event description, as represented in a Windows SharePoint Services workflow event object. This GUID is limited to a maximum of 255 characters.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.Data">
            <summary>
            Returns a GUID that represents data that is associated with a Windows SharePoint Services workflow event object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.ConnectionType">
            <summary>
            Returns a GUID that represents the type of interface connection that is used with the associated Windows SharePoint Services object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.FileType">
            <summary>
            Returns a GUID that represents information about the file type for version history of the specified Windows SharePoint Services library picture object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.ImageSize">
            <summary>
            Returns a GUID that represents the image size of the specified Windows SharePoint Services image object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.ImageWidth">
            <summary>
            Returns a GUID that represents the width of the specified Windows SharePoint Services image object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.ImageHeight">
            <summary>
            Returns a GUID that represents the height of the specified Windows SharePoint Services image object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.ImageCreateDate">
            <summary>
            Returns a GUID that represents information about the creation date of the specified Windows SharePoint Services image object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.EncodedAbsThumbnailUrl">
            <summary>
            Returns a GUID that represents the URL of the encoded thumbnail search image for the specified Windows SharePoint Services object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.EncodedAbsWebImgUrl">
            <summary>
            Returns a GUID that represents the encoded Web image of the search URL for the specified Windows SharePoint Services object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.NameOrTitle">
            <summary>
            Returns a GUID that represents information about the image of the specified Windows SharePoint Services picture library object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.Keywords">
            <summary>
            Returns a GUID that represents information about the keyword summary of the specified Windows SharePoint Services object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.Thumbnail">
            <summary>
            Returns a GUID that represents the thumbnail image for a Windows SharePoint Services image object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.DecisionStatus">
            <summary>
            Returns a GUID that represents the selected decision status that is associated with a Windows SharePoint Services workflow event object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.AttendeeStatus">
            <summary>
            Returns a GUID that represents the availability status of the specified Windows SharePoint Services object designated as an attendee.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.fAllDayEvent">
            <summary>
            Returns a GUID that represents the field that indicates an all-day event for the specified Windows SharePoint Services calendar event object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.Language">
            <summary>
            Returns a GUID that represents information about the primary spoken and written language of a person who is referenced in a Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.WikiField">
            <summary>
            Returns a GUID that is associated with the description of the content type of the wiki (for example, a "How To" wiki content type description) of the specified Windows SharePoint Services wiki document object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.Categories">
            <summary>
            Returns a GUID that represents the categories that are associated with a person who is referenced by a specified Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.ol_EventAddress">
            <summary>
            Returns a GUID that represents the address of an event that is represented by a specified Windows SharePoint Services event object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.DateCompleted">
            <summary>
            Returns a GUID that represents the completion date that is associated with a specified Windows SharePoint Services task object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.TotalWork">
            <summary>
            Returns a GUID that represents the total hours of work performed by a person or resource that is referenced by a specified Windows SharePoint Services object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.ActualWork">
            <summary>
            Returns a GUID that represents the actual work value that is associated with a specified Windows SharePoint Services workflow task object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.Mileage">
            <summary>
            Returns a GUID that represents mileage information that is associated with a person who is referenced in a specified Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.BillingInformation">
            <summary>
            Returns a GUID that represents the billing information that is associated with a person who is referenced by a specified  Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.Role">
            <summary>
            Returns a GUID that represents an organizational role description for a person who is referenced by a specified Windows SharePoint Services object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.MiddleName">
            <summary>
            Returns a GUID that represents the middle name of a person who is represented by a specified Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.Suffix">
            <summary>
            Returns a GUID that represents the suffix for a person who is referenced by a specified Windows SharePoint Services contact object (such as M.D., Jr., Sr., or III).
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.AssistantNumber">
            <summary>
            Returns a GUID that represents the telephone number of the assistant for a person who is referenced in a specified Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.Business2Number">
            <summary>
            Returns a GUID that represents a second corporate telephone number that is associated with a person who is referenced in a specified Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.CallbackNumber">
            <summary>
            Returns a GUID that represents a callback telephone number that is associated with a person who is referenced in a specified Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.CarNumber">
            <summary>
            Returns a GUID that represents the car identification number that is associated with a person who is referenced in a specified Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.CompanyNumber">
            <summary>
            Returns a GUID that represents the main telephone number of a corporation that is associated with a person who is referenced by a specified Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.Home2Number">
            <summary>
            Returns a GUID that represents the second home telephone number of a person who is referenced in a specified Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.HomeFaxNumber">
            <summary>
            Returns a GUID that represents the home facsimile telephone number of a person who is referenced in a specified Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.ISDNNumber">
            <summary>
            Returns a GUID that represents the Integrated Services Digital Network (ISDN) number of a person who is represented by a specified Windows SharePoint Services object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.OtherNumber">
            <summary>
            Returns a GUID that represents an alternative telephone number for a person who is referenced in a specified Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.OtherFaxNumber">
            <summary>
            Returns a GUID that represents an alternative facsimile telephone number for a person who is referenced in a specified Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.PagerNumber">
            <summary>
            Returns a GUID that represents the number of a pager device for a person who is referenced in a specified Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.PrimaryNumber">
            <summary>
            Returns a GUID that represents the primary telephone number of a person who is referenced in a specified Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.RadioNumber">
            <summary>
            Returns a GUID that represents the number of a portable radio unit of a person who is referenced in a Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.TelexNumber">
            <summary>
            Returns a GUID that represents the Telex number of a person who is represented by a specified Windows SharePoint Services object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.TTYTDDNumber">
            <summary>
            Returns a GUID that represents the number of a TeleType (TTY) or Telephone Device for the Deaf (TDD) of a person who is referenced in a specified Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.IMAddress">
            <summary>
            Returns a GUID that represents the instant messaging addressof a person who is referenced in a specified Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.HomeAddressStreet">
            <summary>
            Returns a GUID that represents the home street address for a person who is referenced in a specified Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.HomeAddressCity">
            <summary>
            Returns a GUID that represents the home city of a person who is referenced in a specified Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.HomeAddressStateOrProvince">
            <summary>
            Returns a GUID that represents the home state or province of a person who is referenced in a specified Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.HomeAddressPostalCode">
            <summary>
            Returns a GUID that represents information about the home postal code of a person who is referenced in a specified Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.HomeAddressCountry">
            <summary>
            Returns a GUID that represents the home country of a person who is referenced in a specified Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.OtherAddressStreet">
            <summary>
            Returns a GUID that represents an alternative street address of a person who is referenced in a specified Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.OtherAddressCity">
            <summary>
            Returns a GUID that represents an alternative city address of a person who is referenced in a specified Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.OtherAddressStateOrProvince">
            <summary>
            Returns a GUID that represents the alternative state or province of a person who is referenced in a specified Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.OtherAddressPostalCode">
            <summary>
            Returns a GUID that represents the alternative postal code of a person who is referenced in a specified Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.OtherAddressCountry">
            <summary>
            Returns a GUID that represents an alternative country of a person who is referenced in a specified Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.Email2">
            <summary>
            Returns a GUID that represents a second e-mail address for a person who is referenced in a specified Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.Email3">
            <summary>
            Returns a GUID that represents a third e-mail address for a person who is referenced in a Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.ol_Department">
            <summary>
            Returns a GUID that represents the department name or identifier (ID) of a person who is referenced in a specified Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.Office">
            <summary>
            Returns a GUID that represents the identifier of the physical office of a person who is represented by a specified Windows SharePoint Services object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.Profession">
            <summary>
            Returns a GUID that represents the profession of a person who is referenced in a Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.ManagersName">
            <summary>
            Returns a GUID that represents the manager's name in the corporate hierarchy for a person who is referenced in a specified Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.AssistantsName">
            <summary>
            Returns a GUID that represents the name of the assistant to a person who is referenced in a specified Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.Nickname">
            <summary>
            Returns a GUID that represents the informal name of a person who is referenced in a specified Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.SpouseName">
            <summary>
            Returns a GUID that represents the name of the spouse of a person who is referenced in a specified Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.Birthday">
            <summary>
            Returns a GUID that represents the birth date that is associated with a person who is referenced by a specified Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.Anniversary">
            <summary>
            Returns a GUID that represents the corporate start date for the specified Windows SharePoint Services user.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.Gender">
            <summary>
            Returns a GUID that represents the gender of a person who is referenced in a specified Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.Initials">
            <summary>
            Returns a GUID that represents the initials that are associated with a person who is represented by a specified Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.Hobbies">
            <summary>
            Returns a GUID that represents information about the personal activities of a person who is referenced in a specified Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.ChildrensNames">
            <summary>
            Returns a GUID that represents a field that contains the names of children who in turn are associated with a person who is referenced by a specified Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.UserField1">
            <summary>
            Returns a GUID that represents the customized information in a field named UserField1 for a person who is referenced by a specified Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.UserField2">
            <summary>
            Returns a GUID that represents the customized information in a field named UserField2 for a person who is referenced by a specified Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.UserField3">
            <summary>
            Returns a GUID that represents the customized information in a field named UserField3 for a person who is referenced by a specified Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.UserField4">
            <summary>
            Returns a GUID that represents the customized information in a field named UserField4 for a person who is referenced by a specified Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.GovernmentIDNumber">
            <summary>
            Returns a GUID that represents the Government Identification number of a person who is referenced in a specified Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.ComputerNetworkName">
            <summary>
            Returns a GUID that represents the name of a computer network for a person who is referenced in a specified  Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.ReferredBy">
            <summary>
            Returns a GUID that represents the name of the person who provided a referral for a person who is referenced by a specified Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.OrganizationalIDNumber">
            <summary>
            Returns a GUID that represents the employee identification number or organizational identification number that applies to a person who is referenced in a specified Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.PersonalWebsite">
            <summary>
            Returns a GUID that represents the URL for the personal Web site of a person who is represented by a specified Windows SharePoint Services object.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Enums.BuiltInFieldId.FTPSite">
            <summary>
            Returns a GUID that represents a File Transfer Protocol (FTP) URL that is associated with a person who is referenced in a specified Windows SharePoint Services contact object.
            </summary>
        </member>
        <member name="M:OfficeDevPnP.Core.Enums.BuiltInFieldId.Contains(System.Guid)">
            <summary>
            This method returns a Boolean value that specifies whether or not the current object matches the specified GUID. This value is used as a file identifier for an object that is associated with a Windows SharePoint Services Web site.
            </summary>
            
            <returns>
            Returns a GUID.
            </returns>
            <param name="fid">File identifier.</param>
        </member>
        <member name="T:OfficeDevPnP.Core.EcmListManualRecordDeclaration">
            <summary>
            Specifies whether this list should allow the manual declaration of records.  When manual record declaration 
            is unavailable, records can only be declared through a policy or workflow.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.EcmListManualRecordDeclaration.UseSiteCollectionDefaults">
            <summary>
            Use the site collection defaults
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.EcmListManualRecordDeclaration.AlwaysAllowManualDeclaration">
            <summary>
            Always allow to manual declare records in this list
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.EcmListManualRecordDeclaration.NeverAllowManualDeclaration">
            <summary>
            Never allow to manual declare records in this list
            </summary>
        </member>
        <member name="T:OfficeDevPnP.Core.EcmRecordDeclarationBy">
            <summary>
            Specify which user roles can declare and undeclare record status manually
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.EcmRecordDeclarationBy.AllListContributors">
            <summary>
            All list contributors and administrators
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.EcmRecordDeclarationBy.OnlyAdmins">
            <summary>
            Only list administrators
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.EcmRecordDeclarationBy.OnlyPolicy">
            <summary>
            Only policy actions
            </summary>
        </member>
        <member name="T:OfficeDevPnP.Core.EcmSiteRecordRestrictions">
            <summary>
            Specify restrictions to place on a document or item once it has been declared as a record.  Changing this setting 
            will not affect items which have already been declared records.  
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.EcmSiteRecordRestrictions.None">
            <summary>
            Records are no more restricted than non-records
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.EcmSiteRecordRestrictions.BlockDelete">
            <summary>
            Records can be edited but not deleted
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.EcmSiteRecordRestrictions.BlockEdit">
            <summary>
            Records cannot be edited or deleted. Any change will require the record declaration to be revoked
            </summary>
        </member>
        <member name="T:OfficeDevPnP.Core.Enums.NavigationType">
            <summary>
            Enum that defines the navigation types
            </summary>
        </member>
        <member name="T:OfficeDevPnP.Core.Enums.TimeZone">
            <summary>
            Timezones to use when creating sitecollections
            Format UTC[PLUS|MINUS][HH:MM]_[DESCRIPTION]
            </summary>
        </member>
        <member name="T:OfficeDevPnP.Core.VotingExperience">
            <summary>
            Voting Experience in List
            </summary>
        </member>
        <member name="T:OfficeDevPnP.Core.WikiPageLayout">
            <summary>
            Out of the box wiki page layouts enumeration
            </summary>
        </member>
        <member name="T:System.EnumerationExtensions">
            <summary>
            Extension methods to make working with Enum values easier. Copied from http://hugoware.net/blog/enumeration-extensions-2-0.
            </summary>
        </member>
        <member name="M:System.EnumerationExtensions.Include``1(System.Enum,``0)">
            <summary>
            Includes an enumerated type and returns the new value
            </summary>
        </member>
        <member name="M:System.EnumerationExtensions.Remove``1(System.Enum,``0)">
            <summary>
            Removes an enumerated type and returns the new value
            </summary>
        </member>
        <member name="M:System.EnumerationExtensions.Has``1(System.Enum,``0)">
            <summary>
            Checks if an enumerated type contains a value
            </summary>
        </member>
        <member name="M:System.EnumerationExtensions.Missing``1(System.Enum,``0)">
            <summary>
            Checks if an enumerated type is missing a value
            </summary>
        </member>
        <member name="T:OfficeDevPnP.Core.Extensions.EnumerableExtensions">
            <summary>
            Extension methods to make working with IEnumerable&lt;T&gt; values easier.
            </summary>
        </member>
        <member name="M:OfficeDevPnP.Core.Extensions.EnumerableExtensions.DeepEquals``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Compares to instances of IEnumerable&lt;T&gt;
            </summary>
            <typeparam name="T">The type of the enumerated item</typeparam>
            <param name="source">Source enumeration</param>
            <param name="target">Target enumeration</param>
            <returns>Wether the two enumerations are deep equal</returns>
        </member>
        <member name="T:System.SafeConvertExtensions">
            <summary>
            Safely convert strings to specified types.
            </summary>
        </member>
        <member name="M:System.SafeConvertExtensions.ToBoolean(System.String,System.Boolean)">
            <summary>
            Converts the input string to a boolean and if null, it returns the default value.
            </summary>
            <param name="input">Input string.</param>
            <param name="defaultValue">A default value to return for a null input value.</param>
        </member>
        <member name="M:System.SafeConvertExtensions.ToBoolean(System.String)">
            <summary>
            Converts the input string to a boolean and if null, it returns the default value.
            </summary>
            <param name="input">Input string.</param>
        </member>
        <member name="M:System.SafeConvertExtensions.ToInt32(System.String,System.Int32)">
            <summary>
            Converts the input string to a Int32 and if null, it returns the default value.
            </summary>
            <param name="input">Input string.</param>
            <param name="defaultValue">A default value to return for a null input value.</param>
        </member>
        <member name="M:System.SafeConvertExtensions.ToInt32(System.String)">
            <summary>
            Converts the input string to a Int64 and if null, it returns the default value.
            </summary>
            <param name="input">Input string.</param>
        </member>
        <member name="M:System.SafeConvertExtensions.ToInt64(System.String,System.Int32)">
            <summary>
            Converts the input string to a Int32 and if null, it returns the default value.
            </summary>
            <param name="input">Input string.</param>
            <param name="defaultValue">A default value to return for a null input value.</param>
        </member>
        <member name="M:System.SafeConvertExtensions.ToInt64(System.String)">
            <summary>
            Converts the input string to a Int32 and if null, it returns the default value.
            </summary>
            <param name="input">Input string.</param>
        </member>
        <member name="M:System.SafeConvertExtensions.ToDouble(System.String,System.Double)">
            <summary>
            Converts the input string to a double and if null, it returns the default value.
            </summary>
            <param name="input">Input string.</param>
            <param name="defaultValue">A default value to return for a null input value.</param>
        </member>
        <member name="M:System.SafeConvertExtensions.ToDouble(System.String)">
            <summary>
            Converts the input string to a double and if null, it returns the default value.
            </summary>
            <param name="input">Input string.</param>
        </member>
        <member name="M:System.SafeConvertExtensions.ToGuid(System.String)">
            <summary>
            Converts the input string to a Guid and if null, it returns the default value.
            </summary>
            <param name="input">Input string.</param>
        </member>
        <member name="M:System.SafeConvertExtensions.ToGuid(System.String,System.Guid)">
            <summary>
            Converts the input string to a Guid and if null, it returns the default value.
            </summary>
            <param name="input">Input string.</param>
            <param name="defaultValue">A default value to return for a null input value.</param>
        </member>
        <member name="M:System.ValidationExtensions.ValidateNotNullOrEmpty``1(``0,System.String)">
            <summary>
            Validates an object for not being null or not being the default value
            </summary>
            <typeparam name="T"></typeparam>
            <param name="input">The objec tto check</param>
            <param name="variableName">The name of the variable name to report in the error</param>
            <exception cref="T:System.ArgumentException">Thrown when variable is a zero-length string or contains only white space</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when variable is null</exception>
        </member>
        <member name="T:OfficeDevPnP.Core.CoreResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.AuthenticationManager_GetContext">
            <summary>
              Looks up a localized string similar to Getting authentication context for &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.AuthenticationManager_TenantUser">
            <summary>
              Looks up a localized string similar to Tenant user &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.AuthenticationManger_ProblemDeterminingTokenLease">
            <summary>
              Looks up a localized string similar to Could not determine lease for appOnlyAccessToken. Error = {0}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.BrandingExtension_ApplyTheme">
            <summary>
              Looks up a localized string similar to Applying theme &apos;{0}&apos; in &apos;{1}&apos;.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.BrandingExtension_ComposedLookMissing">
            <summary>
              Looks up a localized string similar to Composed look &apos;{0}&apos; not found..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.BrandingExtension_CreateComposedLook">
            <summary>
              Looks up a localized string similar to Creating composed look &apos;{0}&apos; in &apos;{1}&apos;.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.BrandingExtension_DeployMasterPage">
            <summary>
              Looks up a localized string similar to Deploying masterpage &apos;{0}&apos; to &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.BrandingExtension_DeployPageLayout">
            <summary>
              Looks up a localized string similar to Deploying page layout &apos;{0}&apos; to &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.BrandingExtension_DeployTheme">
            <summary>
              Looks up a localized string similar to Deploying theme &apos;{0}&apos; to &apos;{1}&apos;.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.BrandingExtension_SetCustomMasterUrl">
            <summary>
              Looks up a localized string similar to Setting custom master URL &apos;{0}&apos; in &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.BrandingExtension_SetMasterUrl">
            <summary>
              Looks up a localized string similar to Setting master URL &apos;{0}&apos; in &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.BrandingExtension_UpdateComposedLook">
            <summary>
              Looks up a localized string similar to Updating composed look &apos;{0}&apos; in &apos;{1}&apos;.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.BrandingExtensions_UploadThemeFile_Destination_file_name_is_required_">
            <summary>
              Looks up a localized string similar to Destination file name is required..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.BrandingExtensions_UploadThemeFile_Source_file_path_is_required_">
            <summary>
              Looks up a localized string similar to Source file path is required..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.BrandingExtensions_UploadThemeFile_The_argument_must_be_a_single_file_name_and_cannot_contain_path_characters_">
            <summary>
              Looks up a localized string similar to The argument must be a single file name and cannot contain path characters..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.ClientContextExtensions_Clone_Url_of_the_site_is_required_">
            <summary>
              Looks up a localized string similar to Url of the site is required..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.Exception_Message_EmptyString_Arg">
            <summary>
              Looks up a localized string similar to The passed argument is a zero-length string or contains only whitespace..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.FeatureExtensions_ActivateSiteCollectionFeature">
            <summary>
              Looks up a localized string similar to Activating feature {0} in site collection..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.FeatureExtensions_ActivateWebFeature">
            <summary>
              Looks up a localized string similar to Activating feature {0} in web..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.FeatureExtensions_DeactivateSiteCollectionFeature">
            <summary>
              Looks up a localized string similar to Deactivating feature {0} in site collection..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.FeatureExtensions_DeactivateWebFeature">
            <summary>
              Looks up a localized string similar to Deactivating feature {0} in web..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.FeatureExtensions_FeatureActivationProblem">
            <summary>
              Looks up a localized string similar to Problem with activation for feature id {0}. Error = {1}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.FieldAndContentTypeExtensions_AddField0ToContentType1">
            <summary>
              Looks up a localized string similar to Adding field ({0}) to content type ({1})..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.FieldAndContentTypeExtensions_ContentType01AlreadyExists">
            <summary>
              Looks up a localized string similar to Content type &apos;{0}&apos; ({1}) already exists; no changes made..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.FieldAndContentTypeExtensions_CreateContentType01">
            <summary>
              Looks up a localized string similar to Creating content type &apos;{0}&apos; ({1})..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.FieldAndContentTypeExtensions_CreateDocumentSet">
            <summary>
              Looks up a localized string similar to Creating document set &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.FieldAndContentTypeExtensions_CreateField01">
            <summary>
              Looks up a localized string similar to Creating field &apos;{0}&apos; ({1})..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.FieldAndContentTypeExtensions_CreateFieldBase">
            <summary>
              Looks up a localized string similar to New Field as XML: {0}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.FieldAndContentTypeExtensions_Field01AlreadyExists">
            <summary>
              Looks up a localized string similar to Field &apos;{0}&apos; ({1}) already exists; no changes made..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.FileFolderExtensions_CreateDocumentSet_The_argument_must_be_a_single_document_set_name_and_cannot_contain_path_characters_">
            <summary>
              Looks up a localized string similar to The argument must be a single document set name and cannot contain path characters..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.FileFolderExtensions_CreateFolder_The_argument_must_be_a_single_folder_name_and_cannot_contain_path_characters_">
            <summary>
              Looks up a localized string similar to The argument must be a single folder name and cannot contain path characters..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.FileFolderExtensions_CreateFolder0Under12">
            <summary>
              Looks up a localized string similar to Creating folder &apos;{0}&apos; under {1} &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.FileFolderExtensions_EnsureFolderPath_Folder_URL_is_required_">
            <summary>
              Looks up a localized string similar to Folder URL is required..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.FileFolderExtensions_FolderMissing">
            <summary>
              Looks up a localized string similar to Target folder does not exist in the web. Web: {0}, Folder: {1}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.FileFolderExtensions_LibraryMissing">
            <summary>
              Looks up a localized string similar to Target library does not exist in the web. Web: {0}, List: {1}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.FileFolderExtensions_UpdateFile0Properties1">
            <summary>
              Looks up a localized string similar to Update file &apos;{0}&apos;, change properties: {1}..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.FileFolderExtensions_UploadFile_Destination_file_name_is_required_">
            <summary>
              Looks up a localized string similar to Destination file name is required..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.FileFolderExtensions_UploadFile_The_argument_must_be_a_single_file_name_and_cannot_contain_path_characters_">
            <summary>
              Looks up a localized string similar to The argument must be a single file name and cannot contain path characters..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.FileFolderExtensions_UploadFile0ToFolder1">
            <summary>
              Looks up a localized string similar to Uploading file &apos;{0}&apos; to folder &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.FileFolderExtensions_UploadFileWebDav_The_argument_must_be_a_single_file_name_and_cannot_contain_path_characters_">
            <summary>
              Looks up a localized string similar to The argument must be a single file name and cannot contain path characters..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.ListExtensions_CreateList0Template12">
            <summary>
              Looks up a localized string similar to Creating list &apos;{0}&apos; from template {1}{2}..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.LoggingUtility_MessageWithException">
            <summary>
              Looks up a localized string similar to {0}; EXCEPTION: {{{1}}}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.MailUtility_SendException">
            <summary>
              Looks up a localized string similar to Mail message could not be sent. SMTP exception attempting to send. Error = {0}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.MailUtility_SendExceptionRethrow0">
            <summary>
              Looks up a localized string similar to Mail message could not be sent. Exception attempting to send email, rethrowing. Exception: {0}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.MailUtility_SendFailed">
            <summary>
              Looks up a localized string similar to Mail message could not be sent. Send completed with error {0}..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.MailUtility_SendMailCancelled">
            <summary>
              Looks up a localized string similar to Mail message was canceled..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.Provisioning_Connectors_Azure_FailedToInitialize">
            <summary>
              Looks up a localized string similar to Could not initialize AzureStorageConnector. Error = {0}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.Provisioning_Connectors_Azure_FileDeleted">
            <summary>
              Looks up a localized string similar to File {0} was deleted from Azure storage container {1}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.Provisioning_Connectors_Azure_FileDeleteFailed">
            <summary>
              Looks up a localized string similar to File {0} was not deleted from Azure storage container {1}. Error = {2}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.Provisioning_Connectors_Azure_FileDeleteNotFound">
            <summary>
              Looks up a localized string similar to File {0} was not deleted from Azure storage container {1} because it was not available.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.Provisioning_Connectors_Azure_FileNotFound">
            <summary>
              Looks up a localized string similar to File {0} not found in Azure storage container {1}. Exception = {2}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.Provisioning_Connectors_Azure_FileRetrieved">
            <summary>
              Looks up a localized string similar to File {0} retrieved from Azure storage container {1}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.Provisioning_Connectors_Azure_FileSaved">
            <summary>
              Looks up a localized string similar to File {0} saved to Azure storage container {1}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.Provisioning_Connectors_Azure_FileSaveFailed">
            <summary>
              Looks up a localized string similar to File {0} was not saved to Azure storage container {1}. Error = {2}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.Provisioning_Connectors_FileSystem_FileDeleted">
            <summary>
              Looks up a localized string similar to File {0} deleted from folder {1}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.Provisioning_Connectors_FileSystem_FileDeleteFailed">
            <summary>
              Looks up a localized string similar to File {0} was not deleted from folder {1}. Error = {2}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.Provisioning_Connectors_FileSystem_FileDeleteNotFound">
            <summary>
              Looks up a localized string similar to File {0} was not deleted from folder {1} because it was not available.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.Provisioning_Connectors_FileSystem_FileNotFound">
            <summary>
              Looks up a localized string similar to File {0} not found in directory {1}. Exception = {2}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.Provisioning_Connectors_FileSystem_FileRetrieved">
            <summary>
              Looks up a localized string similar to File {0} retrieved from folder {1}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.Provisioning_Connectors_FileSystem_FileSaved">
            <summary>
              Looks up a localized string similar to File {0} saved to folder {1}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.Provisioning_Connectors_FileSystem_FileSaveFailed">
            <summary>
              Looks up a localized string similar to File {0} was not saved to folder {1}. Error = {2}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.Provisioning_Connectors_SharePoint_FileDeleted">
            <summary>
              Looks up a localized string similar to File {0} deleted from site {1}, library {2}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.Provisioning_Connectors_SharePoint_FileDeleteFailed">
            <summary>
              Looks up a localized string similar to File {0} was not deleted from site {1}, library {2}. Error = {3}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.Provisioning_Connectors_SharePoint_FileDeleteNotFound">
            <summary>
              Looks up a localized string similar to File {0} was not deleted from site {1}, library {2} because it was not available.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.Provisioning_Connectors_SharePoint_FileNotFound">
            <summary>
              Looks up a localized string similar to File {0} not found in site {1}, library  {2}. Exception = {3}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.Provisioning_Connectors_SharePoint_FileRetrieved">
            <summary>
              Looks up a localized string similar to File {0}  found in site {1}, library  {2}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.Provisioning_Connectors_SharePoint_FileSaved">
            <summary>
              Looks up a localized string similar to File {0} saved to site {1}, library {2}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.Provisioning_Connectors_SharePoint_FileSaveFailed">
            <summary>
              Looks up a localized string similar to File {0} was not saved to site {1}, library {2}. Error = {3}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.Provisioning_Extensibility_Pipeline_BeforeInvocation">
            <summary>
              Looks up a localized string similar to Provisioning extensibility pipeline preparing to invoke, Assembly: {0}. Type {1}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.Provisioning_Extensibility_Pipeline_ClientCtxNull">
            <summary>
              Looks up a localized string similar to ClientContext is NULL. Unable to Invoke Extensibility Pipeline..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.Provisioning_Extensibility_Pipeline_Exception">
            <summary>
              Looks up a localized string similar to There was an exception invoking the custom extensibility provider. Assembly: {0}, Type: {1}. Exception {2}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.Provisioning_Extensibility_Pipeline_Missing_AssemblyName">
            <summary>
              Looks up a localized string similar to Provider.Assembly missing value. Unable to Invoke Extensibility Pipeline..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.Provisioning_Extensibility_Pipeline_Missing_TypeName">
            <summary>
              Looks up a localized string similar to Provider.Type missing value. Unable to Invoke Extensibility Pipeline..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.Provisioning_Extensibility_Pipeline_Success">
            <summary>
              Looks up a localized string similar to Provisioning extensibility pipline invocation successful, Assembly {0}, Type {1}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.Provisioning_ObjectHandlers_ComposedLooks">
            <summary>
              Looks up a localized string similar to Composed Looks.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.Provisioning_ObjectHandlers_ContentTypes">
            <summary>
              Looks up a localized string similar to Content Types.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.Provisioning_ObjectHandlers_CustomActions">
            <summary>
              Looks up a localized string similar to Custom Actions.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.Provisioning_ObjectHandlers_ExtensibilityProviders">
            <summary>
              Looks up a localized string similar to Extensibility Providers.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.Provisioning_ObjectHandlers_Features">
            <summary>
              Looks up a localized string similar to Features.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.Provisioning_ObjectHandlers_Fields">
            <summary>
              Looks up a localized string similar to Fields.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.Provisioning_ObjectHandlers_Files">
            <summary>
              Looks up a localized string similar to Files.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.Provisioning_ObjectHandlers_FinishExtraction">
            <summary>
              Looks up a localized string similar to FINISH - Template Extraction.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.Provisioning_ObjectHandlers_FinishProvisioning">
            <summary>
              Looks up a localized string similar to FINISH - Provisioning.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.Provisioning_ObjectHandlers_ListInstances">
            <summary>
              Looks up a localized string similar to Lists.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.Provisioning_ObjectHandlers_Pages">
            <summary>
              Looks up a localized string similar to Pages.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.Provisioning_ObjectHandlers_PropertyBagEntries">
            <summary>
              Looks up a localized string similar to Property Bag.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.Provisioning_ObjectHandlers_SitePolicy">
            <summary>
              Looks up a localized string similar to Site Policy.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.Provisioning_ObjectHandlers_SiteSecurity">
            <summary>
              Looks up a localized string similar to Site Security.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.Provisioning_ObjectHandlers_StartExtraction">
            <summary>
              Looks up a localized string similar to START - Template Extraction.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.Provisioning_ObjectHandlers_StartProvisioning">
            <summary>
              Looks up a localized string similar to START - Provisioning.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.Provisioning_ObjectHandlers_TermGroups">
            <summary>
              Looks up a localized string similar to Term Groups.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.Provisioning_Providers_XML_InvalidFileFormat">
            <summary>
              Looks up a localized string similar to Cannot process XML file {0}..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.ProvisioningExtensions_ErrorProvisioningModule0File1">
            <summary>
              Looks up a localized string similar to Error provisioning module &apos;{0}&apos; file &apos;{1}&apos;. Error = {2}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.ProvisioningExtensions_ProvisionElementFile_Path_to_the_element_file_is_required">
            <summary>
              Looks up a localized string similar to Path to the element file is required.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.ProvisioningExtensions_ProvisionElementFile0">
            <summary>
              Looks up a localized string similar to Provisioning Elements file &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.ProvisioningExtensions_ProvisionElementXml_Expected_element__Elements__">
            <summary>
              Looks up a localized string similar to Expected element &apos;Elements&apos;..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.ProvisioningExtensions_ProvisionFileInternal_Expected_element__File__">
            <summary>
              Looks up a localized string similar to Expected element &apos;File&apos;..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.ProvisioningExtensions_ProvisionModuleInternal_Expected_element__Module__">
            <summary>
              Looks up a localized string similar to Expected element &apos;Module&apos;..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.Service_RegistrationFailed">
            <summary>
              Looks up a localized string similar to Service registration for {0} using endpoint {1} and cachekey {2} failed..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.Services_AccessDenied">
            <summary>
              Looks up a localized string similar to Service requestor is not registered: access denied.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.Services_CookieWithCachKeyNotFound">
            <summary>
              Looks up a localized string similar to The cookie with the cachekey was not found...nothing can be retrieved from cache, so no clientcontext can be created..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.Services_Registered">
            <summary>
              Looks up a localized string similar to Service {0} has been registered for endpoint {1} using cachekey {2}..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.Services_TokenRefreshed">
            <summary>
              Looks up a localized string similar to Token for cachekey {0} and hostweburl {1} has been refreshed..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TaxonomyExtension_CreateTerm01UnderParent2">
            <summary>
              Looks up a localized string similar to Creating term &apos;{0}|{1}&apos; under parent &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TaxonomyExtension_CreateTermGroup0InStore1">
            <summary>
              Looks up a localized string similar to Creating term group &apos;{0}&apos; in term store &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TaxonomyExtension_CreateTermSet0InGroup1">
            <summary>
              Looks up a localized string similar to Creating term set &apos;{0}&apos; in term group &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TaxonomyExtension_DeleteTerm01">
            <summary>
              Looks up a localized string similar to Deleting term &apos;{0}|{1}&apos;..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TaxonomyExtension_ExceptionUpdateDescriptionGroup01">
            <summary>
              Looks up a localized string similar to Error setting description for term group &apos;{0}&apos; ({1}). Error = {2}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TaxonomyExtension_ExceptionUpdateDescriptionSet01">
            <summary>
              Looks up a localized string similar to Error setting description for term set &apos;{0}&apos; ({1}). Error = {2}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TaxonomyExtension_ImportErrorDeleteId0Line1">
            <summary>
              Looks up a localized string similar to Error encountered during import when attempting to delete invalid term with id {0} on line {1}. Error = {2}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TaxonomyExtension_ImportErrorDescription0Line1">
            <summary>
              Looks up a localized string similar to Error encountered during import. The description &apos;{0}&apos; on line {1} is not valid..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TaxonomyExtension_ImportErrorName0Line1">
            <summary>
              Looks up a localized string similar to Error encountered during import.  The name &apos;{0}&apos; is not valid on line {1}..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TaxonomyExtension_ImportErrorTaggingLine0">
            <summary>
              Looks up a localized string similar to Error encountered during import. The available for tagging entry on line {0} is not valid..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TaxonomyExtension_ImportTermSet">
            <summary>
              Looks up a localized string similar to Importing term set from file stream..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TaxonomyExtension_TermGroup0Id1DoesNotMatchSpecifiedId2">
            <summary>
              Looks up a localized string similar to Term group &apos;{0}&apos; ID ({1}) does not match specified ID ({2})..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TaxonomyExtension_TermSet0Id1DoesNotMatchSpecifiedId2">
            <summary>
              Looks up a localized string similar to Term set &apos;{0}&apos; ID ({1}) does not match specified ID ({2})..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TaxonomyExtensions_ImportTermSet_File_path_is_required_">
            <summary>
              Looks up a localized string similar to File path is required..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TaxonomyExtensions_ImportTermSetImplementation_Invalid_CSV_format__was_expecting_a_comma_in_the_first__header__line_">
            <summary>
              Looks up a localized string similar to Invalid CSV format; was expecting a comma in the first (header) line..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TenantExtensions_ClosedContextWarning">
            <summary>
              Looks up a localized string similar to ClientContext gets closed after action is completed. Calling ExecuteQuery again returns an error. Verify that you have an open ClientContext object. Error = {0}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TenantExtensions_SetLockState">
            <summary>
              Looks up a localized string similar to SetSiteLockState: Current: {0} Target: {1}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TenantExtensions_UnknownExceptionAccessingSite">
            <summary>
              Looks up a localized string similar to Could not determine if site exists in tenant. Error = {0}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_AddSite_Done">
            <summary>
              Looks up a localized string similar to Site {0} url/wildcard added.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_AddSite_InvalidUrl">
            <summary>
              Looks up a localized string similar to Site url ({0}) contains invalid characters.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_Authentication_AppOnly">
            <summary>
              Looks up a localized string similar to Timer job authentication set to type App-Only with clientId {0}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_Authentication_Network">
            <summary>
              Looks up a localized string similar to Timer job authentication set to type NetworkCredentials with user {0} in domain {1}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_Authentication_O365">
            <summary>
              Looks up a localized string similar to Timer job authentication set to type Office 365 with user {0}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_Authentication_RetrieveFromCredMan">
            <summary>
              Looks up a localized string similar to Retrieving credetials with name {0} from the Windows Credential Manager.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_Authentication_RetrieveFromCredManFailed">
            <summary>
              Looks up a localized string similar to Failed to retrieve credential manager credentials with name {0} or retrieved credentials don&apos;t have user or password set.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_ClearAddedSites">
            <summary>
              Looks up a localized string similar to All added sites are cleared.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_Clone">
            <summary>
              Looks up a localized string similar to Timer job {0} settings cloned to timer job {0}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_Constructor">
            <summary>
              Looks up a localized string similar to Timer job constructed with name {0}, version {1}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_DoWork_Done">
            <summary>
              Looks up a localized string similar to Work for site {0} done.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_DoWork_NoEventHandler">
            <summary>
              Looks up a localized string similar to No event receiver connected to the TimerJobRun event.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_DoWork_Start">
            <summary>
              Looks up a localized string similar to Doing work for site {0}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_Enumeration_Network">
            <summary>
              Looks up a localized string similar to Enumeration credentials specified for on-premises enumeration with user {0} and demain {1}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_Enumeration_NoDomain">
            <summary>
              Looks up a localized string similar to No domain specified that can be used for site enumeration. Use the SetEnumerationNetworkCredentials method to provide credentials as app-only does not work with search.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_Enumeration_NoPassword">
            <summary>
              Looks up a localized string similar to No password specified that can be used for site enumeration. Use the SetEnumeration... method to provide credentials as app-only does not work with search.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_Enumeration_NoUser">
            <summary>
              Looks up a localized string similar to No user specified that can be used for site enumeration. Use the SetEnumeration... method to provide credentials as app-only does not work with search.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_Enumeration_O365">
            <summary>
              Looks up a localized string similar to Enumeration credentials specified for Office 365 enumeration with user {0}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_ExpandSite_EatException">
            <summary>
              Looks up a localized string similar to Eating exception {0} for site {1}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_ExpandSubSites">
            <summary>
              Looks up a localized string similar to ExpandSubSites set to {0}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_ManageState">
            <summary>
              Looks up a localized string similar to Manage state set to {0}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_MaxThread1">
            <summary>
              Looks up a localized string similar to If you only want 1 thread then set the UseThreading property to false.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_MaxThread100">
            <summary>
              Looks up a localized string similar to You cannot use more than 100 threads.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_MaxThreadLessThan1">
            <summary>
              Looks up a localized string similar to Number of threads must be between 2 and 100.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_MaxThreadSet">
            <summary>
              Looks up a localized string similar to MaximumThreads set to {0}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_OnTimerJobRun_CallEventHandler">
            <summary>
              Looks up a localized string similar to Calling the eventhandler for site {0}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_OnTimerJobRun_CallEventHandlerDone">
            <summary>
              Looks up a localized string similar to Eventhandler called for site {0}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_OnTimerJobRun_Error">
            <summary>
              Looks up a localized string similar to Error during timerjob execution of site {0}. Exception message = {1}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_OnTimerJobRun_PrevRunRead">
            <summary>
              Looks up a localized string similar to Timerjob for site {1}, PreviousRun = {0}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_OnTimerJobRun_PrevRunSet">
            <summary>
              Looks up a localized string similar to Set Timerjob for site {1}, PreviousRun to {0}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_OnTimerJobRun_PrevRunSuccessRead">
            <summary>
              Looks up a localized string similar to Timerjob for site {1}, PreviousRunSuccessful = {0}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_OnTimerJobRun_PrevRunSuccessSet">
            <summary>
              Looks up a localized string similar to Set Timerjob for site {1}, PreviousRunSuccessful to {0}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_OnTimerJobRun_PrevRunVersionRead">
            <summary>
              Looks up a localized string similar to Timerjob for site {1}, PreviousRunVersion = {0}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_OnTimerJobRun_PrevRunVersionSet">
            <summary>
              Looks up a localized string similar to Set Timerjob for site {1}, PreviousRunVersion to {0}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_OnTimerJobRun_PropertiesRead">
            <summary>
              Looks up a localized string similar to Timerjob properties read using key {0} for site {1}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_OnTimerJobRun_PropertiesSet">
            <summary>
              Looks up a localized string similar to Timerjob properties written using key {0} for site {1}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_Realm">
            <summary>
              Looks up a localized string similar to Realm set to {0}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_ResolveSites_Done">
            <summary>
              Looks up a localized string similar to Resolving sites done, sub sites have been expanded.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_ResolveSites_DoneNoExpansionNeeded">
            <summary>
              Looks up a localized string similar to Resolving sites done, no expansion needed.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_ResolveSites_LaunchThreadPerBatch">
            <summary>
              Looks up a localized string similar to Expand subsites by launching a thread for each of the {0} work batches.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_ResolveSites_ResolveSite">
            <summary>
              Looks up a localized string similar to Resolving wildcard site {0}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_ResolveSites_ResolveSiteDone">
            <summary>
              Looks up a localized string similar to Done resolving wildcard site {0}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_ResolveSites_SequentialExpandDone">
            <summary>
              Looks up a localized string similar to Done sequentially expanding all sites.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_ResolveSites_Started">
            <summary>
              Looks up a localized string similar to Resolving sites started.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_ResolveSites_StartSequentialExpand">
            <summary>
              Looks up a localized string similar to Start sequentially expanding all sites.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_ResolveSites_ThreadLaunched">
            <summary>
              Looks up a localized string similar to Thread started to expand a batch of {0} sites.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_ResolveSites_ThreadsAreDone">
            <summary>
              Looks up a localized string similar to Done waiting for all site expanding threads.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_Run_AfterResolveAddedSites">
            <summary>
              Looks up a localized string similar to After calling the virtual ResolveAddedSites method. Current count of site url&apos;s = {0}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_Run_AfterUpdateAddedSites">
            <summary>
              Looks up a localized string similar to After calling the virtual UpdateAddedSites method. Current count of site url&apos;s = {0}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_Run_BeforeResolveAddedSites">
            <summary>
              Looks up a localized string similar to Before calling the virtual ResolveAddedSites method. Current count of site url&apos;s = {0}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_Run_BeforeStartWorkBatches">
            <summary>
              Looks up a localized string similar to Ready to start a thread for each of the {0} work batches.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_Run_BeforeUpdateAddedSites">
            <summary>
              Looks up a localized string similar to Before calling the virtual UpdateAddedSites method. Current count of site url&apos;s = {0}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_Run_Done">
            <summary>
              Looks up a localized string similar to Run of timer job has ended.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_Run_DoneProcessingWorkBatches">
            <summary>
              Looks up a localized string similar to Done processing the {0} work batches.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_Run_NoSites">
            <summary>
              Looks up a localized string similar to Job does not have sites to process, bailing out.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_Run_ProcessSequentially">
            <summary>
              Looks up a localized string similar to Ready to process each of the {0} sites in a sequential manner.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_Run_ProcessSequentiallyDone">
            <summary>
              Looks up a localized string similar to Done with sequentially processing each of the {0} sites.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_Run_Started">
            <summary>
              Looks up a localized string similar to Run of timer job has started.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_Run_ThreadLaunched">
            <summary>
              Looks up a localized string similar to Thread launched for processing {0} sites.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_SharePointVersion">
            <summary>
              Looks up a localized string similar to SharePointVersion set to {0}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_SharePointVersion_Versions">
            <summary>
              Looks up a localized string similar to SharePoint version must be 15 or 16.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.TimerJob_UseThreading">
            <summary>
              Looks up a localized string similar to UseThreading set to {0}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.WebExtensions_CreateWeb">
            <summary>
              Looks up a localized string similar to Creating web &apos;{0}&apos; with template &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.WebExtensions_DeleteWeb">
            <summary>
              Looks up a localized string similar to Deleting web &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.WebExtensions_InstallSolution">
            <summary>
              Looks up a localized string similar to Installing sandbox solution &apos;{0}&apos; to &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.WebExtensions_RemoveAppInstance">
            <summary>
              Looks up a localized string similar to Removing app &apos;{0}&apos; instance {1}..
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.WebExtensions_SiteSearchUnhandledException">
            <summary>
              Looks up a localized string similar to Site search error. Error = {0}.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.CoreResources.WebExtensions_UninstallSolution">
            <summary>
              Looks up a localized string similar to Removing sandbox solution &apos;{0}&apos;..
            </summary>
        </member>
        <member name="T:Microsoft.SharePoint.Client.BaseTemplateManager">
            <summary>
            This class will be used to provide access to the right base template configuration
            </summary>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Connectors.AzureStorageConnector">
            <summary>
            Connector for files in Azure blob storage
            </summary>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Connectors.FileConnectorBase">
            <summary>
            Base file connector class
            </summary>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Connectors.FileConnectorBase.GetFiles">
            <summary>
            Get the files available in the default container
            </summary>
            <returns>List of files</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Connectors.FileConnectorBase.GetFiles(System.String)">
            <summary>
            Get the files available in the specified container
            </summary>
            <param name="container">Name of the container to get the files from</param>
            <returns>List of files</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Connectors.FileConnectorBase.GetFile(System.String)">
            <summary>
            Gets a file as string from the default container
            </summary>
            <param name="fileName">Name of the file to get</param>
            <returns>String containing the file contents</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Connectors.FileConnectorBase.GetFile(System.String,System.String)">
            <summary>
            Gets a file as string from the specified container
            </summary>
            <param name="fileName">Name of the file to get</param>
            <param name="container">Name of the container to get the file from</param>
            <returns>String containing the file contents</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Connectors.FileConnectorBase.GetFileStream(System.String)">
            <summary>
            Gets a file as stream from the default container
            </summary>
            <param name="fileName">Name of the file to get</param>
            <returns>String containing the file contents</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Connectors.FileConnectorBase.GetFileStream(System.String,System.String)">
            <summary>
            Gets a file as stream from the specified container
            </summary>
            <param name="fileName">Name of the file to get</param>
            <param name="container">Name of the container to get the file from</param>
            <returns>String containing the file contents</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Connectors.FileConnectorBase.SaveFileStream(System.String,System.IO.Stream)">
            <summary>
            Saves a stream to the default container with the given name. If the file exists it will be overwritten
            </summary>
            <param name="fileName">Name of the file to save</param>
            <param name="stream">Stream containing the file contents</param>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Connectors.FileConnectorBase.SaveFileStream(System.String,System.String,System.IO.Stream)">
            <summary>
            Saves a stream to the specified container with the given name. If the file exists it will be overwritten
            </summary>
            <param name="fileName">Name of the file to save</param>
            <param name="container">Name of the container to save the file to</param>
            <param name="stream">Stream containing the file contents</param>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Connectors.FileConnectorBase.DeleteFile(System.String)">
            <summary>
            Deletes a file from the default container
            </summary>
            <param name="fileName">Name of the file to delete</param>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Connectors.FileConnectorBase.DeleteFile(System.String,System.String)">
            <summary>
            Deletes a file from the specified container
            </summary>
            <param name="fileName">Name of the file to delete</param>
            <param name="container">Name of the container to delete the file from</param>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Connectors.AzureStorageConnector.#ctor">
            <summary>
            Base constructor
            </summary>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Connectors.AzureStorageConnector.#ctor(System.String,System.String)">
            <summary>
            AzureStorageConnector constructor. Allows to directly set Azure Storage key and container
            </summary>
            <param name="connectionString">Azure Storage Key (DefaultEndpointsProtocol=https;AccountName=yyyy;AccountKey=xxxx)</param>
            <param name="container">Name of the Azure container to operate against</param>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Connectors.AzureStorageConnector.GetFiles">
            <summary>
            Get the files available in the default container
            </summary>
            <returns>List of files</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Connectors.AzureStorageConnector.GetFiles(System.String)">
            <summary>
            Get the files available in the specified container
            </summary>
            <param name="container">Name of the container to get the files from</param>
            <returns>List of files</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Connectors.AzureStorageConnector.GetFile(System.String)">
            <summary>
            Gets a file as string from the default container
            </summary>
            <param name="fileName">Name of the file to get</param>
            <returns>String containing the file contents</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Connectors.AzureStorageConnector.GetFile(System.String,System.String)">
            <summary>
            Gets a file as string from the specified container
            </summary>
            <param name="fileName">Name of the file to get</param>
            <param name="container">Name of the container to get the file from</param>
            <returns>String containing the file contents</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Connectors.AzureStorageConnector.GetFileStream(System.String)">
            <summary>
            Gets a file as stream from the default container
            </summary>
            <param name="fileName">Name of the file to get</param>
            <returns>String containing the file contents</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Connectors.AzureStorageConnector.GetFileStream(System.String,System.String)">
            <summary>
            Gets a file as stream from the specified container
            </summary>
            <param name="fileName">Name of the file to get</param>
            <param name="container">Name of the container to get the file from</param>
            <returns>String containing the file contents</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Connectors.AzureStorageConnector.SaveFileStream(System.String,System.IO.Stream)">
            <summary>
            Saves a stream to the default container with the given name. If the file exists it will be overwritten
            </summary>
            <param name="fileName">Name of the file to save</param>
            <param name="stream">Stream containing the file contents</param>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Connectors.AzureStorageConnector.SaveFileStream(System.String,System.String,System.IO.Stream)">
            <summary>
            Saves a stream to the specified container with the given name. If the file exists it will be overwritten
            </summary>
            <param name="fileName">Name of the file to save</param>
            <param name="container">Name of the container to save the file to</param>
            <param name="stream">Stream containing the file contents</param>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Connectors.AzureStorageConnector.DeleteFile(System.String)">
            <summary>
            Deletes a file from the default container
            </summary>
            <param name="fileName">Name of the file to delete</param>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Connectors.AzureStorageConnector.DeleteFile(System.String,System.String)">
            <summary>
            Deletes a file from the specified container
            </summary>
            <param name="fileName">Name of the file to delete</param>
            <param name="container">Name of the container to delete the file from</param>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Connectors.FileSystemConnector">
            <summary>
            Connector for files in file system
            </summary>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Connectors.FileSystemConnector.#ctor">
            <summary>
            Base constructor
            </summary>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Connectors.FileSystemConnector.#ctor(System.String,System.String)">
            <summary>
            FileSystemConnector constructor. Allows to directly set root folder and sub folder
            </summary>
            <param name="connectionString">Root folder (e.g. c:\temp or .\resources or . or .\resources\templates)</param>
            <param name="container">Sub folder (e.g. templates or resources\templates or blank</param>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Connectors.FileSystemConnector.GetFiles">
            <summary>
            Get the files available in the default container
            </summary>
            <returns>List of files</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Connectors.FileSystemConnector.GetFiles(System.String)">
            <summary>
            Get the files available in the specified container
            </summary>
            <param name="container">Name of the container to get the files from</param>
            <returns>List of files</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Connectors.FileSystemConnector.GetFile(System.String)">
            <summary>
            Gets a file as string from the default container
            </summary>
            <param name="fileName">Name of the file to get</param>
            <returns>String containing the file contents</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Connectors.FileSystemConnector.GetFile(System.String,System.String)">
            <summary>
            Gets a file as string from the specified container
            </summary>
            <param name="fileName">Name of the file to get</param>
            <param name="container">Name of the container to get the file from</param>
            <returns>String containing the file contents</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Connectors.FileSystemConnector.GetFileStream(System.String)">
            <summary>
            Gets a file as stream from the default container
            </summary>
            <param name="fileName">Name of the file to get</param>
            <returns>String containing the file contents</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Connectors.FileSystemConnector.GetFileStream(System.String,System.String)">
            <summary>
            Gets a file as stream from the specified container
            </summary>
            <param name="fileName">Name of the file to get</param>
            <param name="container">Name of the container to get the file from</param>
            <returns>String containing the file contents</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Connectors.FileSystemConnector.SaveFileStream(System.String,System.IO.Stream)">
            <summary>
            Saves a stream to the default container with the given name. If the file exists it will be overwritten
            </summary>
            <param name="fileName">Name of the file to save</param>
            <param name="stream">Stream containing the file contents</param>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Connectors.FileSystemConnector.SaveFileStream(System.String,System.String,System.IO.Stream)">
            <summary>
            Saves a stream to the specified container with the given name. If the file exists it will be overwritten
            </summary>
            <param name="fileName">Name of the file to save</param>
            <param name="container">Name of the container to save the file to</param>
            <param name="stream">Stream containing the file contents</param>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Connectors.FileSystemConnector.DeleteFile(System.String)">
            <summary>
            Deletes a file from the default container
            </summary>
            <param name="fileName">Name of the file to delete</param>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Connectors.FileSystemConnector.DeleteFile(System.String,System.String)">
            <summary>
            Deletes a file from the specified container
            </summary>
            <param name="fileName">Name of the file to delete</param>
            <param name="container">Name of the container to delete the file from</param>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Connectors.SharePointConnector">
            <summary>
            Connector for files in SharePoint
            </summary>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Connectors.SharePointConnector.#ctor">
            <summary>
            Base constructor
            </summary>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Connectors.SharePointConnector.#ctor(Microsoft.SharePoint.Client.ClientRuntimeContext,System.String,System.String)">
            <summary>
            SharePointConnector constructor. Allows to directly set root folder and sub folder
            </summary>
            <param name="clientContext"></param>
            <param name="connectionString">Site collection URL (e.g. https://yourtenant.sharepoint.com/sites/dev) </param>
            <param name="container">Library + folder that holds the files (mydocs/myfolder)</param>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Connectors.SharePointConnector.GetFiles">
            <summary>
            Get the files available in the default container
            </summary>
            <returns>List of files</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Connectors.SharePointConnector.GetFiles(System.String)">
            <summary>
            Get the files available in the specified container
            </summary>
            <param name="container">Name of the container to get the files from</param>
            <returns>List of files</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Connectors.SharePointConnector.GetFile(System.String)">
            <summary>
            Gets a file as string from the default container
            </summary>
            <param name="fileName">Name of the file to get</param>
            <returns>String containing the file contents</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Connectors.SharePointConnector.GetFile(System.String,System.String)">
            <summary>
            Gets a file as string from the specified container
            </summary>
            <param name="fileName">Name of the file to get</param>
            <param name="container">Name of the container to get the file from</param>
            <returns>String containing the file contents</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Connectors.SharePointConnector.GetFileStream(System.String)">
            <summary>
            Gets a file as stream from the default container
            </summary>
            <param name="fileName">Name of the file to get</param>
            <returns>String containing the file contents</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Connectors.SharePointConnector.GetFileStream(System.String,System.String)">
            <summary>
            Gets a file as stream from the specified container
            </summary>
            <param name="fileName">Name of the file to get</param>
            <param name="container">Name of the container to get the file from</param>
            <returns>String containing the file contents</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Connectors.SharePointConnector.SaveFileStream(System.String,System.IO.Stream)">
            <summary>
            Saves a stream to the default container with the given name. If the file exists it will be overwritten
            </summary>
            <param name="fileName">Name of the file to save</param>
            <param name="stream">Stream containing the file contents</param>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Connectors.SharePointConnector.SaveFileStream(System.String,System.String,System.IO.Stream)">
            <summary>
            Saves a stream to the specified container with the given name. If the file exists it will be overwritten
            </summary>
            <param name="fileName">Name of the file to save</param>
            <param name="container">Name of the container to save the file to</param>
            <param name="stream">Stream containing the file contents</param>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Connectors.SharePointConnector.DeleteFile(System.String)">
            <summary>
            Deletes a file from the default container
            </summary>
            <param name="fileName">Name of the file to delete</param>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Connectors.SharePointConnector.DeleteFile(System.String,System.String)">
            <summary>
            Deletes a file from the specified container
            </summary>
            <param name="fileName">Name of the file to delete</param>
            <param name="container">Name of the container to delete the file from</param>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Model.ContentType">
            <summary>
            Domain Object used in the Provisioning template that defines a Content Type
            <seealso>
                <cref>https://msdn.microsoft.com/en-us/library/office/ms463449.aspx</cref>
            </seealso>
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.ContentType.Id">
            <summary>
            The Id of the Content Type
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.ContentType.Name">
            <summary>
            The name of the Content Type
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.ContentType.Description">
            <summary>
            The description of the Content Type
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.ContentType.Group">
            <summary>
            The group name of the content type
            </summary>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Model.ContentTypeBinding">
            <summary>
            Domain Object for Content Type Binding in the Provisioning Template 
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.ContentTypeBinding.ContentTypeId">
            <summary>
            Gets or Sets the Content Type ID 
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.ContentTypeBinding.Default">
            <summary>
            Gets or Sets if the Content Type should be the default Content Type in the library
            </summary>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Model.Feature">
            <summary>
            Domain Object that represents an Feature.
            </summary>
            <summary>
            Domain Object that represents an Feature.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.Feature.Id">
            <summary>
            Gets or sets the feature Id
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.Feature.Deactivate">
            <summary>
            Gets or sets if the feature should be deactivated
            </summary>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Model.FieldRef">
            <summary>
            Represents a Field XML Markup that is used to define information about a field
            </summary>
            <summary>
            Represents a Field XML Markup that is used to define information about a field
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.FieldRef.Id">
            <summary>
            Gets ot sets the ID of the referenced field
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.FieldRef.Name">
            <summary>
            Gets or sets the name of the field link. This will not change the internal name of the field.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.FieldRef.DisplayName">
            <summary>
            Gets or sets the Display Name of the field. Only applicable to fields associated with lists.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.FieldRef.Required">
            <summary>
            Gets or sets if the field is Required
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.FieldRef.Hidden">
            <summary>
            Gets or sets if the field is Hidden
            </summary>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Model.ListInstance">
            <summary>
            This class holds deprecated ListInstance properties and methods
            </summary>
            <summary>
            Domain Object that specifies the properties of the new list.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.ListInstance.Title">
            <summary>
            Gets or sets the list title
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.ListInstance.Description">
            <summary>
            Gets or sets the description of the list
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.ListInstance.DocumentTemplate">
            <summary>
            Gets or sets a value that specifies the identifier of the document template for the new list.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.ListInstance.OnQuickLaunch">
            <summary>
            Gets or sets a value that specifies whether the new list is displayed on the Quick Launch of the site.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.ListInstance.TemplateType">
            <summary>
            Gets or sets a value that specifies the list server template of the new list.
            https://msdn.microsoft.com/en-us/library/office/microsoft.sharepoint.client.listtemplatetype.aspx
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.ListInstance.Url">
            <summary>
            Gets or sets a value that specifies whether the new list is displayed on the Quick Launch of the site.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.ListInstance.EnableVersioning">
            <summary>
            Gets or sets whether verisioning is enabled on the list
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.ListInstance.EnableMinorVersions">
            <summary>
            Gets or sets whether minor verisioning is enabled on the list
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.ListInstance.DraftVersionVisibility">
            <summary>
            Gets or sets the DraftVersionVisibility for the list
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.ListInstance.EnableModeration">
            <summary>
            Gets or sets whether moderation/content approval is enabled on the list
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.ListInstance.MinorVersionLimit">
            <summary>
            Gets or sets the MinorVersionLimit  for versioning, just in case it is enabled on the list
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.ListInstance.MaxVersionLimit">
            <summary>
            Gets or sets the MinorVersionLimit  for verisioning, just in case it is enabled on the list
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.ListInstance.RemoveExistingContentTypes">
            <summary>
            Gets or sets whether existing content types should be removed
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.ListInstance.RemoveExistingViews">
            <summary>
            Gets or sets whether existing views should be removed
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.ListInstance.ContentTypesEnabled">
            <summary>
            Gets or sets whether content types are enabled
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.ListInstance.Hidden">
            <summary>
            Gets or sets whether to hide the list
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.ListInstance.EnableAttachments">
            <summary>
            Gets or sets whether attachments are enabled. Defaults to true.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.ListInstance.EnableFolderCreation">
            <summary>
            Gets or sets whether folder is enabled. Defaults to true.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.ListInstance.ContentTypeBindings">
            <summary>
            Gets or sets the content types to associate to the list
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.ListInstance.Views">
            <summary>
            Gets or sets the content types to associate to the list
            </summary>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Model.ProvisioningTemplate">
            <summary>
            Domain Object for the Provisioning Template
            </summary>
            <summary>
            Domain Object for the Provisioning Template
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.ProvisioningTemplate.Parameters">
            <summary>
            Any parameters that can be used throughout the template
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.ProvisioningTemplate.Id">
            <summary>
            Gets or sets the ID of the Provisioning Template
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.ProvisioningTemplate.Version">
            <summary>
            Gets or sets the Version of the Provisioning Template
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.ProvisioningTemplate.SitePolicy">
            <summary>
            Gets or Sets the Site Policy
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.ProvisioningTemplate.Security">
            <summary>
            Security Groups Members for the Template
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.ProvisioningTemplate.SiteFields">
            <summary>
            Gets a collection of fields 
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.ProvisioningTemplate.ContentTypes">
            <summary>
            Gets a collection of Content Types to create
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.ProvisioningTemplate.Features">
            <summary>
            Gets or sets a list of features to activate or deactivate
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.ProvisioningTemplate.CustomActions">
            <summary>
            Gets or sets CustomActions for the template
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.ProvisioningTemplate.Files">
            <summary>
            Gets a collection of files for the template
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.ProvisioningTemplate.ComposedLook">
            <summary>
            Gets or Sets the composed look of the template
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.ProvisioningTemplate.Providers">
            <summary>
            Gets a collection of Providers that are used during the extensibility pipeline
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.ProvisioningTemplate.Pages">
            <summary>
            Gets a collection of Wiki Pages for the template
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.ProvisioningTemplate.TermGroups">
            <summary>
            Gets a collection of termgroups to deploy to the site
            </summary>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Extensibility.ExtensibilityManager">
            <summary>
             Provisioning Framework Component that is used for invoking custom providers during the provisioning process.
            </summary>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Extensibility.ExtensibilityManager.ExecuteExtensibilityCallOut(Microsoft.SharePoint.Client.ClientContext,OfficeDevPnP.Core.Framework.Provisioning.Model.Provider,OfficeDevPnP.Core.Framework.Provisioning.Model.ProvisioningTemplate)">
            <summary>
            Method to Invoke Custom Provisioning Providers. 
            Ensure the ClientContext is not dispose in the custom provider.
            </summary>
            <param name="ctx">Authenticated ClientContext that is passed to teh custom provider.</param>
            <param name="provider">A custom Extensibility Provisioning Provider</param>
            <param name="template">ProvisioningTemplate that is passed to the custom provider</param>
            <exception cref="T:OfficeDevPnP.Core.Framework.Provisioning.Extensibility.ExtensiblityPipelineException"></exception>
            <exception cref="T:System.ArgumentException">Provider.Assembly or Provider.Type is NullOrWhiteSpace&gt;</exception>
            <exception cref="T:System.ArgumentNullException">ClientContext is Null&gt;</exception>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Extensibility.ExtensiblityPipelineException">
            <summary>
            Initializes a new instance of the ExtensiblityPipelineException class. This Exception occurs when there 
            is an exception invoking a custom Extensibility Providers
            </summary>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Extensibility.ExtensiblityPipelineException.#ctor">
            <summary>
            Initializes a new instance of the ExtensiblityPipelineException class with a system supplied message
            </summary>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Extensibility.ExtensiblityPipelineException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ExtensiblityPipelineException class with the specified message string.
            </summary>
            <param name="message"> A string that describes the exception.</param>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Extensibility.ExtensiblityPipelineException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the ExtensiblityPipelineException class with a specified error message and a reference to the inner exception that
            is the cause of this exception.
            </summary>
            <param name="message">A string that describes the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Extensibility.ExtensiblityPipelineException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the ExtensiblityPipelineException class from serialized data.
            </summary>
            <param name="info">The object that contains the serialized data.</param>
            <param name="context">The stream that contains the serialized data.</param>
            <exception cref="T:System.ArgumentNullException">The info parameter is null.-or-The context parameter is null.</exception>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Extensibility.IProvisioningExtensibilityProvider">
            <summary>
            Defines a interface that accepts requests from the provisioning processing component
            </summary>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Extensibility.IProvisioningExtensibilityProvider.ProcessRequest(Microsoft.SharePoint.Client.ClientContext,OfficeDevPnP.Core.Framework.Provisioning.Model.ProvisioningTemplate,System.String)">
            <summary>
            Defines a interface that accepts requests from the provisioning processing component
            </summary>
            <param name="ctx"></param>
            <param name="template"></param>
            <param name="configurationData"></param>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Model.ComposedLook">
            <summary>
            Domain Object that defines a Composed Look in the Provision Template
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.ComposedLook.Name">
            <summary>
            Gets or sets the Name
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.ComposedLook.ColorFile">
            <summary>
            Gets or sets the ColorFile
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.ComposedLook.FontFile">
            <summary>
            Gets or sets the FontFile
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.ComposedLook.BackgroundFile">
            <summary>
            Gets or sets the Background Image 
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.ComposedLook.MasterPage">
            <summary>
            Gets or sets the MasterPage for the Composed Look
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.ComposedLook.SiteLogo">
            <summary>
            Gets or sets the Site Logo
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.ComposedLook.AlternateCSS">
            <summary>
            Gets or sets the AlternateCSS
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.ComposedLook.Version">
            <summary>
            Gets or sets the Version of the ComposedLook.
            </summary>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Model.CustomAction">
            <summary>
            Domain Object for custom actions  associated with a SharePoint list, Web site, or subsite.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.CustomAction.Name">
            <summary>
            Gets or sets the name of the custom action.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.CustomAction.Description">
            <summary>
            Gets or sets the description of the custom action.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.CustomAction.Group">
            <summary>
            Gets or sets a value that specifies an implementation-specific value that determines the position of the custom action in the page.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.CustomAction.Location">
            <summary>
            Gets or sets the location of the custom action.
            A string that contains the location; for example, Microsoft.SharePoint.SiteSettings.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.CustomAction.Title">
            <summary>
            Gets or sets the display title of the custom action.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.CustomAction.Sequence">
            <summary>
            Gets or sets the value that specifies an implementation-specific value that determines the order of the custom action that appears on the page.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.CustomAction.Rights">
            <summary>
            Gets or sets the value that specifies the permissions needed for the custom action.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.CustomAction.RightsValue">
            <summary>
            Gets or sets the value that specifies the permissions needed for the custom action.
            <seealso>
                <cref>https://msdn.microsoft.com/en-us/library/office/microsoft.sharepoint.client.permissionkind.aspx</cref>
            </seealso>
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.CustomAction.Url">
            <summary>
            Gets or sets the URL, URI, or ECMAScript (JScript, JavaScript) function associated with the action.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.CustomAction.ScriptBlock">
            <summary>
            Gets or sets the value that specifies the ECMAScript to be executed when the custom action is performed.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.CustomAction.ImageUrl">
            <summary>
            Gets or sets the URL of the image associated with the custom action.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.CustomAction.ScriptSrc">
            <summary>
            Gets or sets a value that specifies the URI of a file which contains the ECMAScript to execute on the page
            </summary>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Model.CustomActions">
            <summary>
            Domain Object that represents a Collections of Custom Actions
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.CustomActions.SiteCustomActions">
            <summary>
            A Collection of CustomActions at the Site level
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.CustomActions.WebCustomActions">
            <summary>
            A Collection of CustomActions at the Web level
            </summary>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Model.Features">
            <summary>
            Domain Object that is used in the Site Template for OOB Features
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.Features.SiteFeatures">
            <summary>
            A Collection of Features at the Site level
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.Features.WebFeatures">
            <summary>
            A Collection of Features at the Web level
            </summary>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Model.Field">
            <summary>
            Represents a Field XML Markup that is used to define information about a field
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.Field.SchemaXml">
            <summary>
            Gets a value that specifies the XML Schema representing the Field type.
            <seealso>
                <cref>https://msdn.microsoft.com/en-us/library/office/ff407271.aspx</cref>
            </seealso>
            </summary>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Model.Provider">
            <summary>
            Domain Object for Extensiblity Call out
            </summary>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Model.SiteSecurity">
            <summary>
            Domain Object that is used in the site template
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.SiteSecurity.AdditionalAdministrators">
            <summary>
            A Collection of users that are associated as site collection adminsitrators
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.SiteSecurity.AdditionalOwners">
            <summary>
            A Collection of users that are associated to the sites owners group
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.SiteSecurity.AdditionalMembers">
            <summary>
            A Collection of users that are associated to the sites members group
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.SiteSecurity.AdditionalVisitors">
            <summary>
            A Collection of users taht are associated to the sites visitors group
            </summary>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Model.User">
            <summary>
            Domain Object that defines a User or group in the provisioning template
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.User.Name">
            <summary>
            The User email Address or the group name.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Model.View.SchemaXml">
            <summary>
            Gets a value that specifies the XML Schema representing the View type.
            </summary>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.ObjectHandlers.ObjectExtensibilityProviders">
            <summary>
            Extensibility Provider CallOut
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateCreationInformation.BaseTemplate">
            <summary>
            Base template used to compare against when we're "getting" a template
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateCreationInformation.FileConnector">
            <summary>
            Connector used to persist files when needed
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateCreationInformation.PersistComposedLookFiles">
            <summary>
            Do composed look files (theme files, site logo, alternate css) need to be persisted to storage when 
            we're "getting" a template
            </summary>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.ObjectHandlers.SiteToTemplateConversion.GetRemoteTemplate(Microsoft.SharePoint.Client.Web,OfficeDevPnP.Core.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateCreationInformation)">
            <summary>
            Actual implementation of extracting configuration from existing site.
            </summary>
            <param name="web"></param>
            <param name="creationInfo"></param>
            <returns></returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.ObjectHandlers.SiteToTemplateConversion.ApplyRemoteTemplate(Microsoft.SharePoint.Client.Web,OfficeDevPnP.Core.Framework.Provisioning.Model.ProvisioningTemplate,OfficeDevPnP.Core.Framework.Provisioning.ObjectHandlers.ProvisioningTemplateApplyingInformation)">
            <summary>
            Actual implementation of the apply templates
            </summary>
            <param name="web"></param>
            <param name="provisioningInfo"></param>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.ITemplateFormatter">
            <summary>
            Interface for basic capabilites that any Template Formatter should provide/support
            </summary>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Providers.ITemplateFormatter.Initialize(OfficeDevPnP.Core.Framework.Provisioning.Providers.TemplateProviderBase)">
            <summary>
            Method to initialize the formatter with the proper TemplateProvider instance
            </summary>
            <param name="provider">The provider that is calling the current template formatter</param>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Providers.ITemplateFormatter.IsValid(System.IO.Stream)">
            <summary>
            Method to validate the content of a formatted template instace
            </summary>
            <param name="template">The formatted template instance as a Stream</param>
            <returns>Boolean result of the validation</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Providers.ITemplateFormatter.ToFormattedTemplate(OfficeDevPnP.Core.Framework.Provisioning.Model.ProvisioningTemplate)">
            <summary>
            Method to format a ProvisioningTemplate into a formatted template
            </summary>
            <param name="template">The input ProvisioningTemplate</param>
            <returns>The output formatted template as a Stream</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Providers.ITemplateFormatter.ToProvisioningTemplate(System.IO.Stream)">
            <summary>
            Method to convert a formatted template into a ProvisioningTemplate
            </summary>
            <param name="template">The input formatted template as a Stream</param>
            <returns>The output ProvisioningTemplate</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Providers.ITemplateFormatter.ToProvisioningTemplate(System.IO.Stream,System.String)">
            <summary>
            Method to convert a formatted template into a ProvisioningTemplate, based on a specific ID
            </summary>
            <param name="template">The input formatted template as a Stream</param>
            <param name="identifier">The identifier of the template to convert</param>
            <returns>The output ProvisioningTemplate</returns>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Json.JsonTemplateProvider">
            <summary>
            Provider for JSON based configurations
            </summary>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Providers.Json.JsonAzureStorageTemplateProvider.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.IXMLSchemaFormatter">
            <summary>
            Interface for template formatters that read and write XML documents
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.IXMLSchemaFormatter.NamespaceUri">
            <summary>
            The URI of the target XML Namespace
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.IXMLSchemaFormatter.NamespacePrefix">
            <summary>
            The default namespace prefix of the target XML Namespace
            </summary>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.SharePointProvisioningTemplate">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.SharePointProvisioningTemplate.SitePolicy">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.SharePointProvisioningTemplate.PropertyBagEntries">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.SharePointProvisioningTemplate.Security">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.SharePointProvisioningTemplate.SiteFields">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.SharePointProvisioningTemplate.ContentTypes">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.SharePointProvisioningTemplate.Lists">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.SharePointProvisioningTemplate.Features">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.SharePointProvisioningTemplate.CustomActions">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.SharePointProvisioningTemplate.Files">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.SharePointProvisioningTemplate.ComposedLook">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.SharePointProvisioningTemplate.Providers">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.SharePointProvisioningTemplate.ID">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.SharePointProvisioningTemplate.Version">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.PropertyBagEntry">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.PropertyBagEntry.Key">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.PropertyBagEntry.Value">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.Provider">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.Provider.Configuration">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.Provider.Enabled">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.Provider.Assembly">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.Provider.Type">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.ComposedLook">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.ComposedLook.Name">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.ComposedLook.ColorFile">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.ComposedLook.FontFile">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.ComposedLook.BackgroundFile">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.ComposedLook.MasterPage">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.ComposedLook.SiteLogo">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.ComposedLook.AlternateCSS">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.ComposedLook.Version">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.ComposedLook.VersionSpecified">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.File">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.File.Src">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.File.Folder">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.File.Overwrite">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.CustomAction">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.CustomAction.Name">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.CustomAction.Description">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.CustomAction.Group">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.CustomAction.Location">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.CustomAction.Title">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.CustomAction.Sequence">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.CustomAction.SequenceSpecified">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.CustomAction.Rights">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.CustomAction.RightsSpecified">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.CustomAction.Url">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.CustomAction.Enabled">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.CustomAction.ScriptBlock">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.CustomAction.ImageUrl">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.CustomAction.ScriptSrc">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.Feature">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.Feature.ID">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.Feature.Deactivate">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.Feature.Description">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.FieldRef">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.FieldRef.ID">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.ContentTypeBinding">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.ContentTypeBinding.ContentTypeID">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.ContentTypeBinding.Default">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.ListInstance">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.ListInstance.ContentTypeBindings">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.ListInstance.Views">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.ListInstance.Fields">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.ListInstance.FieldRefs">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.ListInstance.Title">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.ListInstance.Description">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.ListInstance.DocumentTemplate">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.ListInstance.OnQuickLaunch">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.ListInstance.TemplateType">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.ListInstance.Url">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.ListInstance.EnableVersioning">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.ListInstance.MinorVersionLimit">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.ListInstance.MinorVersionLimitSpecified">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.ListInstance.MaxVersionLimit">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.ListInstance.MaxVersionLimitSpecified">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.ListInstance.RemoveDefaultContentType">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.ListInstance.ContentTypesEnabled">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.ListInstance.Hidden">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.ListInstanceViews">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.ListInstanceViews.Any">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.ListInstanceFields">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.ListInstanceFields.Any">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.User">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.User.Name">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.SharePointProvisioningTemplateSecurity">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.SharePointProvisioningTemplateSecurity.AdditionalAdministrators">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.SharePointProvisioningTemplateSecurity.AdditionalOwners">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.SharePointProvisioningTemplateSecurity.AdditionalMembers">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.SharePointProvisioningTemplateSecurity.AdditionalVisitors">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.SharePointProvisioningTemplateSiteFields">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.SharePointProvisioningTemplateSiteFields.Any">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.SharePointProvisioningTemplateContentTypes">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.SharePointProvisioningTemplateContentTypes.Any">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.SharePointProvisioningTemplateFeatures">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.SharePointProvisioningTemplateFeatures.SiteFeatures">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.SharePointProvisioningTemplateFeatures.WebFeatures">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.SharePointProvisioningTemplateCustomActions">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.SharePointProvisioningTemplateCustomActions.SiteCustomActions">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201503.SharePointProvisioningTemplateCustomActions.WebCustomActions">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Provisioning">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Provisioning.Preferences">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Provisioning.Templates">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Provisioning.Sequence">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Provisioning.ImportSequence">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Preferences">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Preferences.Parameters">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Preferences.Version">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Preferences.Author">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Preferences.Generator">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.PreferencesParameter">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.PreferencesParameter.Key">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.PreferencesParameter.Required">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.PreferencesParameter.Text">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ImportSequence">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ImportSequence.File">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.TermStore">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.TermStore.TermGroup">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.TermStore.Scope">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.TermGroup">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.TaxonomyItem">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.TaxonomyItem.Name">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.TaxonomyItem.ID">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.TermGroup.TermSets">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.TermGroup.Description">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.TermSet">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.TermSetItem">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.TermSetItem.Owner">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.TermSetItem.Description">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.TermSetItem.IsAvailableForTagging">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.TermSet.CustomProperties">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.TermSet.Terms">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.TermSet.Language">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.TermSet.LanguageSpecified">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.TermSet.IsOpenForTermCreation">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.StringDictionaryItem">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.StringDictionaryItem.Key">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.StringDictionaryItem.Value">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.PropertyBagEntry">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.PropertyBagEntry.Indexed">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Term">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Term.Terms">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Term.Labels">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Term.CustomProperties">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Term.LocalCustomProperties">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Term.Language">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Term.LanguageSpecified">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Term.CustomSortOrder">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.TermTerms">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.TermTerms.Items">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.TermLabelsLabel">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.TermLabelsLabel.Language">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.TermLabelsLabel.Value">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.TermLabelsLabel.IsDefaultForLanguage">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.TermStoreScope">
            <remarks/>
        </member>
        <member name="F:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.TermStoreScope.Default">
            <remarks/>
        </member>
        <member name="F:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.TermStoreScope.Current">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Site">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Site.Templates">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Site.Title">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Site.CustomJSUrl">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Site.QuickLaunchEnabled">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Site.QuickLaunchEnabledSpecified">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Site.AlternateCssUrl">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Site.Language">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Site.AllowDesigner">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Site.AllowDesignerSpecified">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Site.MembersCanShare">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Site.MembersCanShareSpecified">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Site.TimeZone">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Site.UseSamePermissionsAsParentSite">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Site.UseSamePermissionsAsParentSiteSpecified">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Site.Url">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Templates">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Templates.ProvisioningTemplateFile">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Templates.ProvisioningTemplateReference">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Templates.ProvisioningTemplate">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Templates.ID">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ProvisioningTemplateFile">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ProvisioningTemplateFile.File">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ProvisioningTemplateFile.ID">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ProvisioningTemplateReference">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ProvisioningTemplateReference.ID">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ProvisioningTemplate">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ProvisioningTemplate.SitePolicy">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ProvisioningTemplate.PropertyBagEntries">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ProvisioningTemplate.Security">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ProvisioningTemplate.SiteFields">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ProvisioningTemplate.ContentTypes">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ProvisioningTemplate.Lists">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ProvisioningTemplate.Features">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ProvisioningTemplate.CustomActions">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ProvisioningTemplate.Files">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ProvisioningTemplate.Pages">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ProvisioningTemplate.TermGroups">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ProvisioningTemplate.ComposedLook">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ProvisioningTemplate.Providers">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ProvisioningTemplate.ID">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ProvisioningTemplate.Version">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ProvisioningTemplate.VersionSpecified">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ProvisioningTemplateSecurity">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ProvisioningTemplateSecurity.AdditionalAdministrators">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ProvisioningTemplateSecurity.AdditionalOwners">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ProvisioningTemplateSecurity.AdditionalMembers">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ProvisioningTemplateSecurity.AdditionalVisitors">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.User">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.User.Name">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ProvisioningTemplateSiteFields">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ProvisioningTemplateSiteFields.Any">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ContentType">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ContentType.FieldRefs">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ContentType.DocumentTemplate">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ContentType.ID">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ContentType.Name">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ContentType.Description">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ContentType.Group">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ContentType.Hidden">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ContentType.Sealed">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ContentType.ReadOnly">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ContentType.Overwrite">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ContentType.AnyAttr">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ContentTypeFieldRef">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.FieldRefBase">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.FieldRefBase.ID">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.FieldRefBase.Name">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.FieldRefBase.Required">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.FieldRefBase.Hidden">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ListInstanceFieldRef">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ListInstanceFieldRef.DisplayName">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ContentTypeDocumentTemplate">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ContentTypeDocumentTemplate.TargetName">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ListInstance">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ListInstance.ContentTypeBindings">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ListInstance.Views">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ListInstance.Fields">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ListInstance.FieldRefs">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ListInstance.DataRows">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ListInstance.Title">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ListInstance.Description">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ListInstance.DocumentTemplate">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ListInstance.OnQuickLaunch">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ListInstance.TemplateType">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ListInstance.Url">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ListInstance.EnableVersioning">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ListInstance.EnableMinorVersions">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ListInstance.EnableModeration">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ListInstance.MinorVersionLimit">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ListInstance.MinorVersionLimitSpecified">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ListInstance.MaxVersionLimit">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ListInstance.MaxVersionLimitSpecified">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ListInstance.DraftVersionVisibility">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ListInstance.DraftVersionVisibilitySpecified">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ListInstance.RemoveExistingContentTypes">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ListInstance.TemplateFeatureID">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ListInstance.ContentTypesEnabled">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ListInstance.Hidden">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ListInstance.EnableAttachments">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ListInstance.EnableFolderCreation">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ContentTypeBinding">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ContentTypeBinding.ContentTypeID">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ContentTypeBinding.Default">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ListInstanceViews">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ListInstanceViews.Any">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ListInstanceViews.RemoveExistingViews">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ListInstanceFields">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ListInstanceFields.Any">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.DataValue">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.DataValue.FieldName">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.DataValue.Value">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ProvisioningTemplateFeatures">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ProvisioningTemplateFeatures.SiteFeatures">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ProvisioningTemplateFeatures.WebFeatures">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Feature">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Feature.ID">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Feature.Deactivate">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Feature.Description">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ProvisioningTemplateCustomActions">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ProvisioningTemplateCustomActions.SiteCustomActions">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ProvisioningTemplateCustomActions.WebCustomActions">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.CustomAction">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.CustomAction.Name">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.CustomAction.Description">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.CustomAction.Group">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.CustomAction.Location">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.CustomAction.Title">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.CustomAction.Sequence">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.CustomAction.SequenceSpecified">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.CustomAction.Rights">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.CustomAction.RightsSpecified">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.CustomAction.Url">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.CustomAction.Enabled">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.CustomAction.ScriptBlock">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.CustomAction.ImageUrl">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.CustomAction.ScriptSrc">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.File">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.File.Properties">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.File.WebParts">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.File.Src">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.File.Folder">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.File.Overwrite">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.WebPartPageWebPart">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.WebPartPageWebPart.Contents">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.WebPartPageWebPart.Title">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.WebPartPageWebPart.Zone">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.WebPartPageWebPart.Order">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Page">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Page.WebParts">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Page.Url">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Page.Overwrite">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Page.Layout">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Page.WelcomePage">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.WikiPageWebPart">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.WikiPageWebPart.Contents">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.WikiPageWebPart.Title">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.WikiPageWebPart.Row">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.WikiPageWebPart.Column">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.WikiPageLayout">
            <remarks/>
        </member>
        <member name="F:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.WikiPageLayout.OneColumn">
            <remarks/>
        </member>
        <member name="F:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.WikiPageLayout.OneColumnSidebar">
            <remarks/>
        </member>
        <member name="F:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.WikiPageLayout.TwoColumns">
            <remarks/>
        </member>
        <member name="F:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.WikiPageLayout.TwoColumnsHeader">
            <remarks/>
        </member>
        <member name="F:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.WikiPageLayout.TwoColumnsHeaderFooter">
            <remarks/>
        </member>
        <member name="F:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.WikiPageLayout.ThreeColumns">
            <remarks/>
        </member>
        <member name="F:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.WikiPageLayout.ThreeColumnsHeader">
            <remarks/>
        </member>
        <member name="F:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.WikiPageLayout.ThreeColumnsHeaderFooter">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ComposedLook">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ComposedLook.Name">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ComposedLook.ColorFile">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ComposedLook.FontFile">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ComposedLook.BackgroundFile">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ComposedLook.MasterPage">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ComposedLook.SiteLogo">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ComposedLook.AlternateCSS">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ComposedLook.Version">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.ComposedLook.VersionSpecified">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Provider">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Provider.Configuration">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Provider.Enabled">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Provider.HandlerType">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.SiteCollection">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.SiteCollection.Templates">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.SiteCollection.StorageMaximumLevel">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.SiteCollection.StorageWarningLevel">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.SiteCollection.UserCodeMaximumLevel">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.SiteCollection.UserCodeWarningLevel">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.SiteCollection.PrimarySiteCollectionAdmin">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.SiteCollection.SecondarySiteCollectionAdmin">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.SiteCollection.Title">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.SiteCollection.CustomJSUrl">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.SiteCollection.QuickLaunchEnabled">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.SiteCollection.QuickLaunchEnabledSpecified">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.SiteCollection.AlternateCssUrl">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.SiteCollection.Language">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.SiteCollection.AllowDesigner">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.SiteCollection.AllowDesignerSpecified">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.SiteCollection.MembersCanShare">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.SiteCollection.MembersCanShareSpecified">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.SiteCollection.TimeZone">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.SiteCollection.Url">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Sequence">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Sequence.SiteCollection">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Sequence.Site">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Sequence.TermStore">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Sequence.Extensions">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Sequence.SequenceType">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.Sequence.ID">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.SequenceSequenceType">
            <remarks/>
        </member>
        <member name="F:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.SequenceSequenceType.Synchronous">
            <remarks/>
        </member>
        <member name="F:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.V201505.SequenceSequenceType.Asynchronous">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.XMLTemplateProvider">
            <summary>
            Provider for xml based configurations
            </summary>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.XMLAzureStorageTemplateProvider.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.XMLAzureStorageTemplateProvider.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="connectionString"></param>
            <param name="container"></param>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.XMLExtensions.ToXmlElement(System.Xml.Linq.XElement)">
            <summary>
            Internal Extension method to convert an XElement into an XmlElement
            </summary>
            <param name="element">The XElement to convert</param>
            <returns>The converted XmlElement</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.XMLExtensions.ToXElement(System.Xml.XmlElement)">
            <summary>
            Internal extension method to convert an XmlElement into an XElement
            </summary>
            <param name="element">The XmlElement to convert</param>
            <returns>The converted XElement</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.XMLExtensions.ToXElement(System.String)">
            <summary>
            Internal extension method to convert a String into an XElement
            </summary>
            <param name="xml"></param>
            <returns>The converted XElement</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.XMLExtensions.ToXmlElement(System.String)">
            <summary>
            Internal extension method to convert a String into an XmlElement
            </summary>
            <param name="xml"></param>
            <returns>The converted XmlElement</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.XMLExtensions.ToXmlNode(System.String)">
            <summary>
            Internal extension method to convert a String into an XmlNode
            </summary>
            <param name="xml"></param>
            <returns>The converted XmlNode</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.XMLExtensions.ToProviderConfiguration(System.Xml.XmlNode)">
            <summary>
            Internal extension method to convert the XML configuration
            of a provider into a String
            </summary>
            <param name="xml">The XmlNode with the provider configuration</param>
            <returns>The string representing the provider configuration</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.XMLExtensions.FixupElementNamespace(System.Xml.XmlElement)">
            <summary>
            Internal extension method to fix XML Namespaces onto a target XML element
            </summary>
            <param name="element">The XML element to fixup</param>
            <returns>The fixed up XML element</returns>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.XMLPnPSchemaFormatter">
            <summary>
            Helper class that abstracts from any specific version of XMLPnPSchemaFormatter
            </summary>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.XMLPnPSchemaFormatter.GetSpecificFormatter(OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.XMLPnPSchemaVersion)">
            <summary>
            Static method to retrieve a specific XMLPnPSchemaFormatter instance
            </summary>
            <param name="version"></param>
            <returns></returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.XMLPnPSchemaFormatter.GetSpecificFormatter(System.String)">
            <summary>
            Static method to retrieve a specific XMLPnPSchemaFormatter instance
            </summary>
            <param name="namespaceUri"></param>
            <returns></returns>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.Provisioning.Providers.Xml.XMLPnPSchemaFormatter.LatestFormatter">
            <summary>
            Static property to retrieve an instance of the latest XMLPnPSchemaFormatter
            </summary>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.TimerJobs.Enums.AuthenticationType">
            <summary>
            Type of authentication, supports Office365, NetworkCredentials (on-premises) and AppOnly (both Office 365 as On-premises)
            </summary>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.TimerJobs.TimerJobRunHandler">
            <summary>
            TimerJobRun delegate
            </summary>
            <param name="sender">calling object instance</param>
            <param name="e">TimerJobRunEventArgs event arguments instance</param>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.TimerJobs.TimerJob">
            <summary>
            Abstract base class for creating timer jobs (background processes) that operate against SharePoint sites. These timer jobs 
            are designed to use the CSOM API and thus can run on any server that can communicate with SharePoint.
            </summary>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.TimerJobs.TimerJob.#ctor(System.String)">
            <summary>
            Simpliefied constructor for timer job, version is always set to "1.0"
            </summary>
            <param name="name">Name of the timer job</param>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.TimerJobs.TimerJob.#ctor(System.String,System.String,System.String)">
            <summary>
            Default constructor for timer job
            </summary>
            <param name="name">Name of the timer job</param>
            <param name="version">Version of the timer job</param>
            <param name="configurationData"></param>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.TimerJobs.TimerJob.Run">
            <summary>   
            Triggers the timer job to start running
            </summary>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.TimerJobs.TimerJob.DoWorkBatch(System.Collections.Generic.List{System.String})">
            <summary>
            Processes the amount of work that will be done by one thread
            </summary>
            <param name="sites">Batch of sites that the thread will need to process</param>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.TimerJobs.TimerJob.DoWork(System.String)">
            <summary>
            Processes the amount of work that will be done for a single site/web
            </summary>
            <param name="site">Url of the site to process</param>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.TimerJobs.TimerJob.OnTimerJobRun(OfficeDevPnP.Core.Framework.TimerJobs.TimerJobRunEventArgs)">
            <summary>
            Triggers the event to fire and deals with all the pre/post processing needed to automatically manage state
            </summary>
            <param name="e">TimerJobRunEventArgs event arguments class that will be passed to the event handler</param>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.TimerJobs.TimerJob.CreateWorkBatches">
            <summary>
            Creates batches of sites to process. Batch size is based on max number of threads
            </summary>
            <returns>List of Lists holding the work batches</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.TimerJobs.TimerJob.UseOffice365Authentication(System.String,System.String)">
            <summary>
            Prepares the timerjob to operate against Office 365 with user and password credentials. Sets AuthenticationType 
            to AuthenticationType.Office365
            </summary>
            <param name="userUPN"></param>
            <param name="password">Password of the user that will be used to operate the timer job work</param>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.TimerJobs.TimerJob.UseOffice365Authentication(System.String,System.Security.SecureString)">
            <summary>
            Prepares the timerjob to operate against Office 365 with user and password credentials. Sets AuthenticationType 
            to AuthenticationType.Office365
            </summary>
            <param name="userUPN"></param>
            <param name="password">Password of the user that will be used to operate the timer job work</param>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.TimerJobs.TimerJob.UseOffice365Authentication(System.String)">
            <summary>
            Prepares the timerjob to operate against Office 365 with user and password credentials which are retrieved via 
            the windows Credential Manager. Also sets AuthenticationType to AuthenticationType.Office365
            </summary>
            <param name="credentialName">Name of the credential manager registration</param>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.TimerJobs.TimerJob.UseNetworkCredentialsAuthentication(System.String,System.String,System.String)">
            <summary>
            Prepares the timerjob to operate against SharePoint on-premises with user name password credentials. Sets AuthenticationType 
            to AuthenticationType.NetworkCredentials
            </summary>
            <param name="samAccountName">samAccontName of the windows user</param>
            <param name="password">Password of the windows user</param>
            <param name="domain">NT domain of the windows user</param>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.TimerJobs.TimerJob.UseNetworkCredentialsAuthentication(System.String,System.Security.SecureString,System.String)">
            <summary>
            Prepares the timerjob to operate against SharePoint on-premises with user name password credentials. Sets AuthenticationType 
            to AuthenticationType.NetworkCredentials
            </summary>
            <param name="samAccountName">samAccontName of the windows user</param>
            <param name="password">Password of the windows user</param>
            <param name="domain">NT domain of the windows user</param>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.TimerJobs.TimerJob.UseNetworkCredentialsAuthentication(System.String)">
            <summary>
            Prepares the timerjob to operate against SharePoint on-premises with user name password  credentials which are retrieved via 
            the windows Credential Manager. Sets AuthenticationType to AuthenticationType.NetworkCredentials
            </summary>
            <param name="credentialName">Name of the credential manager registration</param>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.TimerJobs.TimerJob.UseAppOnlyAuthentication(System.String,System.String)">
            <summary>
            Prepares the timerjob to operate against SharePoint on-premises with app-only credentials. Sets AuthenticationType 
            to AuthenticationType.AppOnly
            </summary>
            <param name="clientId">Client ID of the app</param>
            <param name="clientSecret">Client Secret of the app</param>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.TimerJobs.TimerJob.Clone(OfficeDevPnP.Core.Framework.TimerJobs.TimerJob)">
            <summary>
            Takes over the settings from the passed timer job. Is useful when you run multiple jobs in a row or chain 
            job execution. Settings that are taken over are all the authentication, enumeration settings and SharePointVersion
            </summary>
            <param name="job"></param>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.TimerJobs.TimerJob.GetAuthenticationManager(System.String)">
            <summary>
            Get an AuthenticationManager instance per host Url. Needed to make this work properly, else we're getting access denied 
            because of Invalid audience Uri
            </summary>
            <param name="url">Url of the site</param>
            <returns>An instantiated AuthenticationManager</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.TimerJobs.TimerJob.SetEnumerationCredentials(System.String,System.String)">
            <summary>
            Provides the timer job with the enumeration credentials. For Office 365 username and password is sufficient
            </summary>
            <param name="userUPN"></param>
            <param name="password">Password of the enumeration user</param>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.TimerJobs.TimerJob.SetEnumerationCredentials(System.String,System.Security.SecureString)">
            <summary>
            Provides the timer job with the enumeration credentials. For Office 365 username and password is sufficient
            </summary>
            <param name="userUPN"></param>
            <param name="password">Password of the enumeration user</param>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.TimerJobs.TimerJob.SetEnumerationCredentials(System.String,System.String,System.String)">
            <summary>
            Provides the timer job with the enumeration credentials. For SharePoint on-premises username, password and domain are needed
            </summary>
            <param name="samAccountName">UPN of the enumeration user</param>
            <param name="password">Password of the enumeration user</param>
            <param name="domain">Domain of the enumeration user</param>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.TimerJobs.TimerJob.SetEnumerationCredentials(System.String,System.Security.SecureString,System.String)">
            <summary>
            Provides the timer job with the enumeration credentials. For SharePoint on-premises username, password and domain are needed
            </summary>
            <param name="samAccountName">Account name of the enumeration user</param>
            <param name="password">Password of the enumeration user</param>
            <param name="domain">Domain of the enumeration user</param>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.TimerJobs.TimerJob.SetEnumerationCredentials(System.String)">
            <summary>
            Provides the timer job with the enumeration credentials. For SharePoint on-premises username, password and domain are needed
            </summary>
            <param name="credentialName">Name of the credential manager registration</param>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.TimerJobs.TimerJob.AddSite(System.String)">
            <summary>
            Adds a site Url or wildcard site Url to the collection of sites that the timer job will process
            </summary>
            <param name="site">Site Url or wildcard site Url to be processed by the timer job</param>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.TimerJobs.TimerJob.ClearAddedSites">
            <summary>
            Clears the list of added site Url's and/or wildcard site Url's
            </summary>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.TimerJobs.TimerJob.UpdateAddedSites(System.Collections.Generic.List{System.String})">
            <summary>
            Virtual method that can be overriden to allow the timer job itself to control the list of sites to operate against.
            Scenario is for example timer job that reads this data from a database instead of being fed by the calling program
            </summary>
            <param name="addedSites">List of added site Url's and/or wildcard site Url's</param>
            <returns>List of added site Url's and/or wildcard site Url's</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.TimerJobs.TimerJob.ResolveAddedSites(System.Collections.Generic.List{System.String})">
            <summary>
            Virtual method that can be overriden to control the list of resolved sites
            </summary>
            <param name="addedSites">List of added site Url's and/or wildcard site Url's</param>
            <returns>List of resolved sites</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.TimerJobs.TimerJob.DoExpandBatch(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            Processes one bach of sites to expand, whcih is the workload of one thread
            </summary>
            <param name="sites">Batch of sites to expand</param>
            <param name="resolvedSitesAndSubSites">List holding the expanded sites</param>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.TimerJobs.TimerJob.CreateExpandBatches(System.Collections.Generic.List{System.String})">
            <summary>
            Creates batches of sites to expand
            </summary>
            <param name="resolvedSites">List of sites to expand</param>
            <returns>List of list with batches of sites to expand</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.TimerJobs.TimerJob.ExpandSite(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Expands and individual site into sub sites
            </summary>
            <param name="resolvedSitesAndSubSites">list of sites and subsites resulting from the expanding</param>
            <param name="site">site to expand</param>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.TimerJobs.TimerJob.CreateClientContext(System.String)">
            <summary>
            Creates a ClientContext object based on the set AuthenticationType and the used version of SharePoint
            </summary>
            <param name="site">Site Url to create a ClientContext for</param>
            <returns>The created ClientContext object. Returns null if no ClientContext was created</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.TimerJobs.TimerJob.ResolveSite(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Resolves a wildcard site Url into a list of actual site Url's
            </summary>
            <param name="site">Wildcard site Url to resolve</param>
            <param name="resolvedSites">List of resolved site Url's</param>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.TimerJobs.TimerJob.GetAllSubSites(Microsoft.SharePoint.Client.Site)">
            <summary>
            Gets all sub sites for a given site
            </summary>
            <param name="site">Site to find all sub site for</param>
            <returns>IEnumerable of strings holding the sub site urls</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.TimerJobs.TimerJob.IsValidUrl(System.String)">
            <summary>
            Verifies if the passed Url has a valid structure
            </summary>
            <param name="url">Url to validate</param>
            <returns>True is valid, false otherwise</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.TimerJobs.TimerJob.GetSharePointVersion">
            <summary>
            Gets the current SharePoint version based on the loaded assembly
            </summary>
            <returns></returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.TimerJobs.TimerJob.GetTenantAdminSite(System.String)">
            <summary>
            Gets the tenant admin site based on the tenant name provided when setting the authentication details
            </summary>
            <returns>The tenant admin site</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.TimerJobs.TimerJob.GetTopLevelSite(System.String)">
            <summary>
            Gets the top level site for the given url
            </summary>
            <param name="site"></param>
            <returns></returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.TimerJobs.TimerJob.GetRootSite(System.String)">
            <summary>
            Gets the root site for a given site Url
            </summary>
            <param name="site">Site Url</param>
            <returns>Root site Url of the given site Url</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.TimerJobs.TimerJob.NormalizedTimerJobName(System.String)">
            <summary>
            Normalizes the timer job name
            </summary>
            <param name="timerJobName">Timer job name</param>
            <returns>Normalized timer job name</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.TimerJobs.TimerJob.IsInternalServerErrorException(System.Exception)">
            <summary>
            Returns true if the exception was a "The remote server returned an error: (500) Internal Server Error"
            </summary>
            <param name="ex">Exception to examine</param>
            <returns>True if "The remote server returned an error: (500) Internal Server Error" exception, false otherwise</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.TimerJobs.TimerJob.IsNotFoundException(System.Exception)">
            <summary>
            Returns true if the exception was a "The remote server returned an error: (404) Not Found"
            </summary>
            <param name="ex">Exception to examine</param>
            <returns>True if "The remote server returned an error: (404) Not Found" exception, false otherwise</returns>
        </member>
        <member name="E:OfficeDevPnP.Core.Framework.TimerJobs.TimerJob.TimerJobRun">
            <summary>
            TimerJobRun event
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.TimerJobs.TimerJob.Name">
            <summary>
            Gets the name of this timer job
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.TimerJobs.TimerJob.Version">
            <summary>
            Gets the version of this timer job
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.TimerJobs.TimerJob.ConfigurationData">
            <summary>
            Gets or sets additional timer job configuration data
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.TimerJobs.TimerJob.ManageState">
            <summary>
            Gets and sets the state management value: when true the timer job will automatically handle state by 
            storing a json serialized class as a web property bag entry. Default value is false
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.TimerJobs.TimerJob.IsRunning">
            <summary>
            Is this timer job running?
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.TimerJobs.TimerJob.UseThreading">
            <summary>
            Can this timer job use multiple threads. Defaults to true
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.TimerJobs.TimerJob.MaximumThreads">
            <summary>
            How many threads can be used by this timer job. Default value is 5.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.TimerJobs.TimerJob.AuthenticationType">
            <summary>
            Gets the authentication type that the timer job will use. This will be set as part 
            of the UseOffice365Authentication and UseNetworkCredentialsAuthentication methods
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.TimerJobs.TimerJob.SharePointVersion">
            <summary>
            Gets or sets the SharePoint version. Default value is detected based on the laoded CSOM assembly version, but can be overriden
            in case you want to for example use v16 assemblies in v15 (on-premises)
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.TimerJobs.TimerJob.Realm">
            <summary>
            Realm will be automatically defined, but there's an option to manually specify it which may 
            be needed when did an override of ResolveAddedSites and specify your sites.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.TimerJobs.TimerJob.ExpandSubSites">
            <summary>
            Does the timerjob need to fire as well for every sub site in the site?
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.TimerJobs.TimerJob.EnumerationUser">
            <summary>
            Returns the user account used for enumaration. Enumeration is done using search and the search API requires a user context
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.TimerJobs.TimerJob.EnumerationPassword">
            <summary>
            Returns the password of the user account used for enumaration. Enumeration is done using search and the search API requires a user context
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.TimerJobs.TimerJob.EnumerationDomain">
            <summary>
            Returns the domain of the user account used for enumaration. Enumeration is done using search and the search API requires a user context
            </summary>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.TimerJobs.TimerJobRun">
            <summary>
            Class that holds the state information that's being stored in the web property bag of web that's being "processed"
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Framework.TimerJobs.TimerJobRun.PreviousRun">
            <summary>
            DateTime of the previous run attempt
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Framework.TimerJobs.TimerJobRun.PreviousRunSuccessful">
            <summary>
            Bool indicating if the previous run was successful
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Framework.TimerJobs.TimerJobRun.PreviousRunVersion">
            <summary>
            Timer job version used during the previous run
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Framework.TimerJobs.TimerJobRun.Properties">
            <summary>
            Property value collection used to store timer job custom properties
            </summary>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.TimerJobs.TimerJobRunEventArgs">
            <summary>
            Event arguments for the TimerJobRun event
            </summary>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.TimerJobs.TimerJobRunEventArgs.#ctor(System.String,Microsoft.SharePoint.Client.ClientContext,Microsoft.SharePoint.Client.ClientContext,System.Nullable{System.DateTime},System.Nullable{System.Boolean},System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            Constructor used when state is being managed by the timer job framework
            </summary>
            <param name="url">Url of the site the timer job is operating against</param>
            <param name="siteClientContext">ClientContext object for the root site of the site collection</param>
            <param name="webClientContext">ClientContext object for passed site Url</param>
            <param name="previousRun">Datetime of the last run</param>
            <param name="previousRunSuccessful">Bool showing if the previous run was successful</param>
            <param name="previousRunVersion">Version of the timer job that was used for the previous run</param>
            <param name="properties">Custom keyword value collection that can be used to persist custom properties</param>
            <param name="configurationData">Optional timerjob configuration data</param>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.TimerJobs.TimerJobRunEventArgs.#ctor(System.String,Microsoft.SharePoint.Client.ClientContext,Microsoft.SharePoint.Client.ClientContext,System.String)">
            <summary>
            Constructor used when state is not managed
            </summary>
            <param name="url">Url of the site the timer job is operating against</param>
            <param name="ccSite">ClientContext object for the root site of the site collection</param>
            <param name="ccWeb">ClientContext object for passed site Url</param>
            <param name="configurationData">Configuration data</param>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.TimerJobs.TimerJobRunEventArgs.GetProperty(System.String)">
            <summary>
            Gets a property from the custom properties list
            </summary>
            <param name="propertyKey">Key of the property to retrieve</param>
            <returns>Value of the requested property</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.TimerJobs.TimerJobRunEventArgs.SetProperty(System.String,System.String)">
            <summary>
            Adds or updates a property in the custom properties list
            </summary>
            <param name="propertyKey">Key of the property to add or update</param>
            <param name="propertyValue">Value of the property to add or update</param>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.TimerJobs.TimerJobRunEventArgs.DeleteProperty(System.String)">
            <summary>
            Deletes a property from the custom property list
            </summary>
            <param name="propertyKey">Name of the property to delete</param>
        </member>
        <member name="T:OfficeDevPnP.Core.Utilities.Log">
            <summary>
            Logging class
            </summary>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.Log.Indent">
            <summary>
            Increases the current IndentLevel by one.
            </summary>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.Log.Unindent">
            <summary>
            Decreases the current IndentLevel by one.
            </summary>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.Log.Debug(System.String,System.String,System.Object[])">
            <summary>
            Writes out Debug messages
            </summary>
            <param name="source">Source of the message</param>
            <param name="message">Message to log</param>
            <param name="args">Arguments to used for message completion</param>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.Log.Info(System.String,System.String,System.Object[])">
            <summary>
            Writes out Info Messages
            </summary>
            <param name="source">Source of the message</param>
            <param name="message">Message to log</param>
            <param name="args">Arguments to used for message completion</param>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.Log.Warning(System.String,System.String,System.Object[])">
            <summary>
            Write out Warning Messages
            </summary>
            <param name="source">Source of the message</param>
            <param name="message">Message to log</param>
            <param name="args">Arguments to used for message completion</param>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.Log.Error(System.String,System.String,System.Object[])">
            <summary>
            Write out Error Messages
            </summary>
            <param name="source">Source of the message</param>
            <param name="message">Message to log</param>
            <param name="args">Arguments to used for message completion</param>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.Log.Fatal(System.String,System.String,System.Object[])">
            <summary>
            Writes out Fatal Error Messages
            </summary>
            <param name="source">Source of the message</param>
            <param name="message">Message to log</param>
            <param name="args">Arguments to used for message completion</param>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.Log.GetLogEntry(System.String,System.String,System.Object[])">
            <summary>
            Helper Method to format error messages
            </summary>
            <param name="source"></param>
            <param name="message"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:OfficeDevPnP.Core.Framework.TimerJobs.Utilities.SiteEnumeration">
            <summary>
            Singleton class that's responsible for resolving wildcard site Url's into a list af site Url's
            </summary>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.TimerJobs.Utilities.SiteEnumeration.ResolveSite(Microsoft.Online.SharePoint.TenantAdministration.Tenant,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Builds up a list of site collections that match the passed site wildcard. This method can be used against Office 365
            </summary>
            <param name="tenant">Tenant object to use for resolving the regular sites</param>
            <param name="siteWildCard">The widcard site Url (e.g. https://tenant.sharepoint.com/sites/*) </param>
            <param name="resolvedSites">List of site collections matching the passed wildcard site Url</param>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.TimerJobs.Utilities.SiteEnumeration.ResolveSite(Microsoft.SharePoint.Client.ClientContext,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Builds up a list of site collections that match the passed site wildcard. This method can be used against on-premises
            </summary>
            <param name="context">ClientContext object of an arbitrary site collection accessible by the defined enumeration username and password</param>
            <param name="site">The widcard site Url (e.g. https://tenant.sharepoint.com/sites/*) </param>
            <param name="resolvedSites">List of site collections matching the passed wildcard site Url</param>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.TimerJobs.Utilities.SiteEnumeration.FillSitesViaTenantAPIAndSearch(Microsoft.Online.SharePoint.TenantAdministration.Tenant)">
            <summary>
            Fill site list via tenant API for "regular" site collections. Search API is used for OneDrive for Business site collections
            </summary>
            <param name="tenant">Tenant object to operate against</param>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.TimerJobs.Utilities.SiteEnumeration.FillSitesViaSearch(Microsoft.SharePoint.Client.ClientContext)">
            <summary>
            Fill site list via the Search API. Applies to all type of sites. Typically used in on-premises environments
            </summary>
            <param name="context">ClientContext object of an arbitrary site collection accessible by the defined enumeration username and password</param>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.TimerJobs.Utilities.SiteEnumeration.SiteSearch(Microsoft.SharePoint.Client.ClientRuntimeContext,System.String)">
            <summary>
            Get all sites that match the passed query. Batching is done in batches of 500 as this is compliant for both Office 365 as SharePoint on-premises
            </summary>
            <param name="cc">ClientContext object of an arbitrary site collection accessible by the defined enumeration username and password</param>
            <param name="keywordQueryValue">Query string</param>
            <returns>List of found site collections</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Framework.TimerJobs.Utilities.SiteEnumeration.ProcessQuery(Microsoft.SharePoint.Client.ClientRuntimeContext,System.String,System.Collections.Generic.List{System.String},Microsoft.SharePoint.Client.Search.Query.KeywordQuery,System.Int32)">
            <summary>
            
            </summary>
            <param name="cc">ClientContext object of an arbitrary site collection accessible by the defined enumeration username and password</param>
            <param name="keywordQueryValue">Query to execute</param>
            <param name="sites">List of found site collections</param>
            <param name="keywordQuery">KeywordQuery instance that will perform the actual queries</param>
            <param name="startRow">Row as of which we want to see the results</param>
            <returns>Total result rows of the query</returns>
        </member>
        <member name="P:OfficeDevPnP.Core.Framework.TimerJobs.Utilities.SiteEnumeration.Instance">
            <summary>
            Singleton instance to access this class
            </summary>
        </member>
        <member name="T:OfficeDevPnP.Core.IdentityModel.TokenProviders.ADFS.BaseProvider">
            <summary>
            Base class for active SAML based authentication
            </summary>
        </member>
        <member name="M:OfficeDevPnP.Core.IdentityModel.TokenProviders.ADFS.BaseProvider.TransformSamlTokenToFedAuth(System.String,System.String,System.String)">
            <summary>
            Transforms the retrieved SAML token into a FedAuth cookie value by calling into the SharePoint STS
            </summary>
            <param name="samlToken">SAML token obtained via active authentication to ADFS</param>
            <param name="samlSite">Url of the SAML secured SharePoint site</param>
            <param name="relyingPartyIdentifier">Identifier of the ADFS relying party that we're hitting</param>
            <returns>The FedAuth cookie value</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.IdentityModel.TokenProviders.ADFS.BaseProvider.WrapInSoapMessage(System.String,System.String)">
            <summary>
            Wrap SAML token in RequestSecurityTokenResponse soap message
            </summary>
            <param name="stsResponse">SAML token obtained via active authentication to ADFS</param>
            <param name="relyingPartyIdentifier">Identifier of the ADFS relying party that we're hitting</param>
            <returns>RequestSecurityTokenResponse soap message</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.IdentityModel.TokenProviders.ADFS.BaseProvider.SamlTokenExpiresOn(System.String)">
            <summary>
            Returns the DateTime when then received saml token will expire
            </summary>
            <param name="stsResponse">saml token</param>
            <returns>DateTime holding the expiration date. Defaults to DateTime.MinValue if there's no valid datetime in the saml token</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.IdentityModel.TokenProviders.ADFS.BaseProvider.SamlTokenlifeTime(System.String)">
            <summary>
            Returns the SAML token life time
            </summary>
            <param name="stsResponse">saml token</param>
            <returns>TimeSpan holding the token lifetime. Defaults to TimeSpan.Zero is case of problems</returns>
        </member>
        <member name="T:OfficeDevPnP.Core.IdentityModel.TokenProviders.ADFS.UsernameMixed">
            <summary>
            ADFS Active authentication based on username + password. Uses the trust/13/usernamemixed ADFS endpoint.
            </summary>
        </member>
        <member name="M:OfficeDevPnP.Core.IdentityModel.TokenProviders.ADFS.UsernameMixed.GetFedAuthCookie(System.String,System.String,System.String,System.Uri,System.String,System.Int32)">
            <summary>
            Performs active authentication against ADFS using the trust/13/usernamemixed ADFS endpoint.
            </summary>
            <param name="siteUrl">Url of the SharePoint site that's secured via ADFS</param>
            <param name="userName">Name of the user (e.g. domain\administrator) </param>
            <param name="password">Password of th user</param>
            <param name="userNameMixed">Uri to the ADFS usernamemixed endpoint</param>
            <param name="relyingPartyIdentifier">Identifier of the ADFS relying party that we're hitting</param>
            <param name="logonTokenCacheExpirationWindow"></param>
            <returns>A cookiecontainer holding the FedAuth cookie</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.CredentialManager.GetSharePointOnlineCredential(System.String)">
            <summary>
            Returns a SharePoint Online Credential given a certain name. Add the credential in the Windows Credential Manager and create a new Windows Credential. Then add a new GENERIC Credential. The name parameter in the method maps to the Internet or network address field.
            </summary>
            <param name="name"></param>
            <returns>Microsoft.SharePoint.Client.SharePointOnlineCredentials</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.CredentialManager.GetCredential(System.String)">
            <summary>
            Returns a NetworkCredential given a certain name. Add the credential in the Windows Credential Manager and create a new Windows Credential. Then add a new GENERIC Credential. The name parameter in the method maps to the Internet or network address field.
            </summary>
            <param name="name"></param>
            <returns>System.Net.NetworkCredential</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.XMLSerializer.GetFormatter(System.Type)">
            <summary>
            Gets the formatter for the specified type. If the formatter is not provided one will be created.
            </summary>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.XMLSerializer.Deserialize``1(System.Xml.Linq.XDocument)">
            <summary>
            Deserialize an XDocuemnt to instance of an object T
            </summary>
            <typeparam name="T"></typeparam>
            <param name="xdoc"></param>
            <returns></returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.XMLSerializer.Serialize``1(``0)">
            <summary>
            Serializes an object instance to an XML represented string. 
            </summary>
            <typeparam name="T"></typeparam>
            <param name="objectToSerialize"></param>
            <returns>An string that represents the serialized object.</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.XMLSerializer.Serialize``1(``0,System.Xml.Serialization.XmlSerializerNamespaces)">
            <summary>
            Serializes an object instance to an XML represented string, providing custom namespace prefixes. 
            </summary>
            <typeparam name="T"></typeparam>
            <param name="objectToSerialize"></param>
            <param name="ns"></param>
            <returns>An string that represents the serialized object.</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.XMLSerializer.SerializeToStream``1(``0)">
            <summary>
            Serializes an object instance to a stream. 
            </summary>
            <typeparam name="T"></typeparam>
            <param name="objectToSerialize"></param>
            <returns>An string that represents the serialized object.</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.XMLSerializer.SerializeToStream``1(``0,System.Xml.Serialization.XmlSerializerNamespaces)">
            <summary>
            Serializes an object instance to a stream, providing custom namespace prefixes. 
            </summary>
            <typeparam name="T"></typeparam>
            <param name="objectToSerialize"></param>
            <param name="ns"></param>
            <returns>An string that represents the serialized object.</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.XMLSerializer.Deserialize``1(System.String)">
            <summary>
            Deserializes an XML string to an object instance
            </summary>
            <typeparam name="T">The Object Type to Desserialize</typeparam>
            <param name="xmlString">A string in XML format that representing the serialized object</param>
            <returns>An object instance of T</returns>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.UserProfileService">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.#ctor">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetUserProfileByIndex(System.Int32)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetUserProfileByIndexAsync(System.Int32)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetUserProfileByIndexAsync(System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.CreateUserProfileByAccountName(System.String)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.CreateUserProfileByAccountNameAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.CreateUserProfileByAccountNameAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetUserProfileByName(System.String)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetUserProfileByNameAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetUserProfileByNameAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetUserProfileByGuid(System.Guid)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetUserProfileByGuidAsync(System.Guid)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetUserProfileByGuidAsync(System.Guid,System.Object)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetUserProfileSchema">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetUserProfileSchemaAsync">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetUserProfileSchemaAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetProfileSchemaNameByAccountName(System.String)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetProfileSchemaNameByAccountNameAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetProfileSchemaNameByAccountNameAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetPropertyChoiceList(System.String)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetPropertyChoiceListAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetPropertyChoiceListAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.ModifyUserPropertyByAccountName(System.String,OfficeDevPnP.Core.UPAWebService.PropertyData[])">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.ModifyUserPropertyByAccountNameAsync(System.String,OfficeDevPnP.Core.UPAWebService.PropertyData[])">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.ModifyUserPropertyByAccountNameAsync(System.String,OfficeDevPnP.Core.UPAWebService.PropertyData[],System.Object)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetUserPropertyByAccountName(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetUserPropertyByAccountNameAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetUserPropertyByAccountNameAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.CreateMemberGroup(OfficeDevPnP.Core.UPAWebService.MembershipData)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.CreateMemberGroupAsync(OfficeDevPnP.Core.UPAWebService.MembershipData)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.CreateMemberGroupAsync(OfficeDevPnP.Core.UPAWebService.MembershipData,System.Object)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.AddMembership(System.String,OfficeDevPnP.Core.UPAWebService.MembershipData,System.String,OfficeDevPnP.Core.UPAWebService.Privacy)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.AddMembershipAsync(System.String,OfficeDevPnP.Core.UPAWebService.MembershipData,System.String,OfficeDevPnP.Core.UPAWebService.Privacy)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.AddMembershipAsync(System.String,OfficeDevPnP.Core.UPAWebService.MembershipData,System.String,OfficeDevPnP.Core.UPAWebService.Privacy,System.Object)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.RemoveMembership(System.String,System.Guid,System.String)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.RemoveMembershipAsync(System.String,System.Guid,System.String)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.RemoveMembershipAsync(System.String,System.Guid,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.UpdateMembershipPrivacy(System.String,System.Guid,System.String,OfficeDevPnP.Core.UPAWebService.Privacy)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.UpdateMembershipPrivacyAsync(System.String,System.Guid,System.String,OfficeDevPnP.Core.UPAWebService.Privacy)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.UpdateMembershipPrivacyAsync(System.String,System.Guid,System.String,OfficeDevPnP.Core.UPAWebService.Privacy,System.Object)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetUserMemberships(System.String)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetUserMembershipsAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetUserMembershipsAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetUserOrganizations(System.String)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetUserOrganizationsAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetUserOrganizationsAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetUserColleagues(System.String)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetUserColleaguesAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetUserColleaguesAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetUserLinks(System.String)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetUserLinksAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetUserLinksAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetUserPinnedLinks(System.String)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetUserPinnedLinksAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetUserPinnedLinksAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetInCommon(System.String)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetInCommonAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetInCommonAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetCommonManager(System.String)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetCommonManagerAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetCommonManagerAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetCommonColleagues(System.String)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetCommonColleaguesAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetCommonColleaguesAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetCommonMemberships(System.String)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetCommonMembershipsAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetCommonMembershipsAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.AddColleague(System.String,System.String,System.String,OfficeDevPnP.Core.UPAWebService.Privacy,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.AddColleagueAsync(System.String,System.String,System.String,OfficeDevPnP.Core.UPAWebService.Privacy,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.AddColleagueAsync(System.String,System.String,System.String,OfficeDevPnP.Core.UPAWebService.Privacy,System.Boolean,System.Object)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.AddColleagueWithoutEmailNotification(System.String,System.String,System.String,OfficeDevPnP.Core.UPAWebService.Privacy,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.AddColleagueWithoutEmailNotificationAsync(System.String,System.String,System.String,OfficeDevPnP.Core.UPAWebService.Privacy,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.AddColleagueWithoutEmailNotificationAsync(System.String,System.String,System.String,OfficeDevPnP.Core.UPAWebService.Privacy,System.Boolean,System.Object)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.RemoveColleague(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.RemoveColleagueAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.RemoveColleagueAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.UpdateColleaguePrivacy(System.String,System.String,OfficeDevPnP.Core.UPAWebService.Privacy)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.UpdateColleaguePrivacyAsync(System.String,System.String,OfficeDevPnP.Core.UPAWebService.Privacy)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.UpdateColleaguePrivacyAsync(System.String,System.String,OfficeDevPnP.Core.UPAWebService.Privacy,System.Object)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.AddPinnedLink(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.AddPinnedLinkAsync(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.AddPinnedLinkAsync(System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.UpdatePinnedLink(System.String,OfficeDevPnP.Core.UPAWebService.PinnedLinkData)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.UpdatePinnedLinkAsync(System.String,OfficeDevPnP.Core.UPAWebService.PinnedLinkData)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.UpdatePinnedLinkAsync(System.String,OfficeDevPnP.Core.UPAWebService.PinnedLinkData,System.Object)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.RemovePinnedLink(System.String,System.Int32)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.RemovePinnedLinkAsync(System.String,System.Int32)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.RemovePinnedLinkAsync(System.String,System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.AddLink(System.String,System.String,System.String,System.String,OfficeDevPnP.Core.UPAWebService.Privacy)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.AddLinkAsync(System.String,System.String,System.String,System.String,OfficeDevPnP.Core.UPAWebService.Privacy)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.AddLinkAsync(System.String,System.String,System.String,System.String,OfficeDevPnP.Core.UPAWebService.Privacy,System.Object)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.UpdateLink(System.String,OfficeDevPnP.Core.UPAWebService.QuickLinkData)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.UpdateLinkAsync(System.String,OfficeDevPnP.Core.UPAWebService.QuickLinkData)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.UpdateLinkAsync(System.String,OfficeDevPnP.Core.UPAWebService.QuickLinkData,System.Object)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.RemoveLink(System.String,System.Int32)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.RemoveLinkAsync(System.String,System.Int32)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.RemoveLinkAsync(System.String,System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.RemoveAllLinks(System.String)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.RemoveAllLinksAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.RemoveAllLinksAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.RemoveAllPinnedLinks(System.String)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.RemoveAllPinnedLinksAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.RemoveAllPinnedLinksAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.RemoveAllColleagues(System.String)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.RemoveAllColleaguesAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.RemoveAllColleaguesAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.RemoveAllMemberships(System.String)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.RemoveAllMembershipsAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.RemoveAllMembershipsAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetUserProfileCount">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetUserProfileCountAsync">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetUserProfileCountAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.AddSuggestions(OfficeDevPnP.Core.UPAWebService.SuggestionType,System.String[],System.Double[])">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.AddSuggestionsAsync(OfficeDevPnP.Core.UPAWebService.SuggestionType,System.String[],System.Double[])">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.AddSuggestionsAsync(OfficeDevPnP.Core.UPAWebService.SuggestionType,System.String[],System.Double[],System.Object)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetProfileSchemaNames">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetProfileSchemaNamesAsync">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetProfileSchemaNamesAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetProfileSchema(System.String)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetProfileSchemaAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetProfileSchemaAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetLeaders">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetLeadersAsync">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetLeadersAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.AddLeader(System.String)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.AddLeaderAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.AddLeaderAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.RemoveLeader(System.String)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.RemoveLeaderAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.RemoveLeaderAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OfficeDevPnP.Core.UPAWebService.UserProfileService.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetUserProfileByIndexCompleted">
            <remarks/>
        </member>
        <member name="E:OfficeDevPnP.Core.UPAWebService.UserProfileService.CreateUserProfileByAccountNameCompleted">
            <remarks/>
        </member>
        <member name="E:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetUserProfileByNameCompleted">
            <remarks/>
        </member>
        <member name="E:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetUserProfileByGuidCompleted">
            <remarks/>
        </member>
        <member name="E:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetUserProfileSchemaCompleted">
            <remarks/>
        </member>
        <member name="E:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetProfileSchemaNameByAccountNameCompleted">
            <remarks/>
        </member>
        <member name="E:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetPropertyChoiceListCompleted">
            <remarks/>
        </member>
        <member name="E:OfficeDevPnP.Core.UPAWebService.UserProfileService.ModifyUserPropertyByAccountNameCompleted">
            <remarks/>
        </member>
        <member name="E:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetUserPropertyByAccountNameCompleted">
            <remarks/>
        </member>
        <member name="E:OfficeDevPnP.Core.UPAWebService.UserProfileService.CreateMemberGroupCompleted">
            <remarks/>
        </member>
        <member name="E:OfficeDevPnP.Core.UPAWebService.UserProfileService.AddMembershipCompleted">
            <remarks/>
        </member>
        <member name="E:OfficeDevPnP.Core.UPAWebService.UserProfileService.RemoveMembershipCompleted">
            <remarks/>
        </member>
        <member name="E:OfficeDevPnP.Core.UPAWebService.UserProfileService.UpdateMembershipPrivacyCompleted">
            <remarks/>
        </member>
        <member name="E:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetUserMembershipsCompleted">
            <remarks/>
        </member>
        <member name="E:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetUserOrganizationsCompleted">
            <remarks/>
        </member>
        <member name="E:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetUserColleaguesCompleted">
            <remarks/>
        </member>
        <member name="E:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetUserLinksCompleted">
            <remarks/>
        </member>
        <member name="E:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetUserPinnedLinksCompleted">
            <remarks/>
        </member>
        <member name="E:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetInCommonCompleted">
            <remarks/>
        </member>
        <member name="E:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetCommonManagerCompleted">
            <remarks/>
        </member>
        <member name="E:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetCommonColleaguesCompleted">
            <remarks/>
        </member>
        <member name="E:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetCommonMembershipsCompleted">
            <remarks/>
        </member>
        <member name="E:OfficeDevPnP.Core.UPAWebService.UserProfileService.AddColleagueCompleted">
            <remarks/>
        </member>
        <member name="E:OfficeDevPnP.Core.UPAWebService.UserProfileService.AddColleagueWithoutEmailNotificationCompleted">
            <remarks/>
        </member>
        <member name="E:OfficeDevPnP.Core.UPAWebService.UserProfileService.RemoveColleagueCompleted">
            <remarks/>
        </member>
        <member name="E:OfficeDevPnP.Core.UPAWebService.UserProfileService.UpdateColleaguePrivacyCompleted">
            <remarks/>
        </member>
        <member name="E:OfficeDevPnP.Core.UPAWebService.UserProfileService.AddPinnedLinkCompleted">
            <remarks/>
        </member>
        <member name="E:OfficeDevPnP.Core.UPAWebService.UserProfileService.UpdatePinnedLinkCompleted">
            <remarks/>
        </member>
        <member name="E:OfficeDevPnP.Core.UPAWebService.UserProfileService.RemovePinnedLinkCompleted">
            <remarks/>
        </member>
        <member name="E:OfficeDevPnP.Core.UPAWebService.UserProfileService.AddLinkCompleted">
            <remarks/>
        </member>
        <member name="E:OfficeDevPnP.Core.UPAWebService.UserProfileService.UpdateLinkCompleted">
            <remarks/>
        </member>
        <member name="E:OfficeDevPnP.Core.UPAWebService.UserProfileService.RemoveLinkCompleted">
            <remarks/>
        </member>
        <member name="E:OfficeDevPnP.Core.UPAWebService.UserProfileService.RemoveAllLinksCompleted">
            <remarks/>
        </member>
        <member name="E:OfficeDevPnP.Core.UPAWebService.UserProfileService.RemoveAllPinnedLinksCompleted">
            <remarks/>
        </member>
        <member name="E:OfficeDevPnP.Core.UPAWebService.UserProfileService.RemoveAllColleaguesCompleted">
            <remarks/>
        </member>
        <member name="E:OfficeDevPnP.Core.UPAWebService.UserProfileService.RemoveAllMembershipsCompleted">
            <remarks/>
        </member>
        <member name="E:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetUserProfileCountCompleted">
            <remarks/>
        </member>
        <member name="E:OfficeDevPnP.Core.UPAWebService.UserProfileService.AddSuggestionsCompleted">
            <remarks/>
        </member>
        <member name="E:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetProfileSchemaNamesCompleted">
            <remarks/>
        </member>
        <member name="E:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetProfileSchemaCompleted">
            <remarks/>
        </member>
        <member name="E:OfficeDevPnP.Core.UPAWebService.UserProfileService.GetLeadersCompleted">
            <remarks/>
        </member>
        <member name="E:OfficeDevPnP.Core.UPAWebService.UserProfileService.AddLeaderCompleted">
            <remarks/>
        </member>
        <member name="E:OfficeDevPnP.Core.UPAWebService.UserProfileService.RemoveLeaderCompleted">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.GetUserProfileByIndexResult">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.GetUserProfileByIndexResult.NextValue">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.GetUserProfileByIndexResult.UserProfile">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.GetUserProfileByIndexResult.Colleagues">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.GetUserProfileByIndexResult.QuickLinks">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.GetUserProfileByIndexResult.PinnedLinks">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.GetUserProfileByIndexResult.Memberships">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.PropertyData">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.PropertyData.IsPrivacyChanged">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.PropertyData.IsValueChanged">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.PropertyData.Name">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.PropertyData.Privacy">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.PropertyData.Values">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.Privacy">
            <remarks/>
        </member>
        <member name="F:OfficeDevPnP.Core.UPAWebService.Privacy.Public">
            <remarks/>
        </member>
        <member name="F:OfficeDevPnP.Core.UPAWebService.Privacy.Contacts">
            <remarks/>
        </member>
        <member name="F:OfficeDevPnP.Core.UPAWebService.Privacy.Organization">
            <remarks/>
        </member>
        <member name="F:OfficeDevPnP.Core.UPAWebService.Privacy.Manager">
            <remarks/>
        </member>
        <member name="F:OfficeDevPnP.Core.UPAWebService.Privacy.Private">
            <remarks/>
        </member>
        <member name="F:OfficeDevPnP.Core.UPAWebService.Privacy.NotSet">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.ValueData">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.ValueData.Value">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.Leader">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.Leader.AccountName">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.Leader.Valid">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.Leader.ManagerAccountName">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.Leader.ReportCount">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.InCommonData">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.InCommonData.Manager">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.InCommonData.Colleagues">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.InCommonData.Memberships">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.ContactData">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.ContactData.AccountName">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.ContactData.Privacy">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.ContactData.Name">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.ContactData.IsInWorkGroup">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.ContactData.Group">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.ContactData.Email">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.ContactData.Title">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.ContactData.Url">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.ContactData.UserProfileID">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.ContactData.ID">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.MembershipData">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.MembershipData.Source">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.MembershipData.MemberGroup">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.MembershipData.Group">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.MembershipData.DisplayName">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.MembershipData.Privacy">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.MembershipData.MailNickname">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.MembershipData.Url">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.MembershipData.ID">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.MembershipData.MemberGroupID">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.MembershipSource">
            <remarks/>
        </member>
        <member name="F:OfficeDevPnP.Core.UPAWebService.MembershipSource.DistributionList">
            <remarks/>
        </member>
        <member name="F:OfficeDevPnP.Core.UPAWebService.MembershipSource.SharePointSite">
            <remarks/>
        </member>
        <member name="F:OfficeDevPnP.Core.UPAWebService.MembershipSource.Other">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.MemberGroupData">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.MemberGroupData.SourceInternal">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.MemberGroupData.SourceReference">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.OrganizationProfileData">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.OrganizationProfileData.DisplayName">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.OrganizationProfileData.RecordID">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.PropertyInfo">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.PropertyInfo.Name">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.PropertyInfo.Description">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.PropertyInfo.DisplayOrder">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.PropertyInfo.MaximumShown">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.PropertyInfo.IsAdminEditable">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.PropertyInfo.IsSearchable">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.PropertyInfo.IsSystem">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.PropertyInfo.ManagedPropertyName">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.PropertyInfo.DisplayName">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.PropertyInfo.Type">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.PropertyInfo.AllowPolicyOverride">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.PropertyInfo.DefaultPrivacy">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.PropertyInfo.IsAlias">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.PropertyInfo.IsColleagueEventLog">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.PropertyInfo.IsRequired">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.PropertyInfo.IsUserEditable">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.PropertyInfo.IsVisibleOnEditor">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.PropertyInfo.IsVisibleOnViewer">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.PropertyInfo.IsReplicable">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.PropertyInfo.UserOverridePrivacy">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.PropertyInfo.Length">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.PropertyInfo.IsImported">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.PropertyInfo.IsMultiValue">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.PropertyInfo.ChoiceType">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.PropertyInfo.TermSetId">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.ChoiceTypes">
            <remarks/>
        </member>
        <member name="F:OfficeDevPnP.Core.UPAWebService.ChoiceTypes.Off">
            <remarks/>
        </member>
        <member name="F:OfficeDevPnP.Core.UPAWebService.ChoiceTypes.None">
            <remarks/>
        </member>
        <member name="F:OfficeDevPnP.Core.UPAWebService.ChoiceTypes.Open">
            <remarks/>
        </member>
        <member name="F:OfficeDevPnP.Core.UPAWebService.ChoiceTypes.Closed">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.SPTimeZone">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.SPTimeZone.ID">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.PinnedLinkData">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.PinnedLinkData.Name">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.PinnedLinkData.Url">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.PinnedLinkData.ID">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.QuickLinkData">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.QuickLinkData.Name">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.QuickLinkData.Group">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.QuickLinkData.Privacy">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.QuickLinkData.Url">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.QuickLinkData.ID">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.SuggestionType">
            <remarks/>
        </member>
        <member name="F:OfficeDevPnP.Core.UPAWebService.SuggestionType.Colleague">
            <remarks/>
        </member>
        <member name="F:OfficeDevPnP.Core.UPAWebService.SuggestionType.Keyword">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.GetUserProfileByIndexCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.GetUserProfileByIndexCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.GetUserProfileByIndexCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.CreateUserProfileByAccountNameCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.CreateUserProfileByAccountNameCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.CreateUserProfileByAccountNameCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.GetUserProfileByNameCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.GetUserProfileByNameCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.GetUserProfileByNameCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.GetUserProfileByGuidCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.GetUserProfileByGuidCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.GetUserProfileByGuidCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.GetUserProfileSchemaCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.GetUserProfileSchemaCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.GetUserProfileSchemaCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.GetProfileSchemaNameByAccountNameCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.GetProfileSchemaNameByAccountNameCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.GetProfileSchemaNameByAccountNameCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.GetPropertyChoiceListCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.GetPropertyChoiceListCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.GetPropertyChoiceListCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.ModifyUserPropertyByAccountNameCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.GetUserPropertyByAccountNameCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.GetUserPropertyByAccountNameCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.GetUserPropertyByAccountNameCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.CreateMemberGroupCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.AddMembershipCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.AddMembershipCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.AddMembershipCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.RemoveMembershipCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.UpdateMembershipPrivacyCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.GetUserMembershipsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.GetUserMembershipsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.GetUserMembershipsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.GetUserOrganizationsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.GetUserOrganizationsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.GetUserOrganizationsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.GetUserColleaguesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.GetUserColleaguesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.GetUserColleaguesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.GetUserLinksCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.GetUserLinksCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.GetUserLinksCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.GetUserPinnedLinksCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.GetUserPinnedLinksCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.GetUserPinnedLinksCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.GetInCommonCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.GetInCommonCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.GetInCommonCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.GetCommonManagerCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.GetCommonManagerCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.GetCommonManagerCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.GetCommonColleaguesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.GetCommonColleaguesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.GetCommonColleaguesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.GetCommonMembershipsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.GetCommonMembershipsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.GetCommonMembershipsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.AddColleagueCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.AddColleagueCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.AddColleagueCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.AddColleagueWithoutEmailNotificationCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.AddColleagueWithoutEmailNotificationCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.AddColleagueWithoutEmailNotificationCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.RemoveColleagueCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.UpdateColleaguePrivacyCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.AddPinnedLinkCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.AddPinnedLinkCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.AddPinnedLinkCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.UpdatePinnedLinkCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.RemovePinnedLinkCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.AddLinkCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.AddLinkCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.AddLinkCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.UpdateLinkCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.RemoveLinkCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.RemoveAllLinksCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.RemoveAllPinnedLinksCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.RemoveAllColleaguesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.RemoveAllMembershipsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.GetUserProfileCountCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.GetUserProfileCountCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.GetUserProfileCountCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.AddSuggestionsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.GetProfileSchemaNamesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.GetProfileSchemaNamesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.GetProfileSchemaNamesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.GetProfileSchemaCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.GetProfileSchemaCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.GetProfileSchemaCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.GetLeadersCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.GetLeadersCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OfficeDevPnP.Core.UPAWebService.GetLeadersCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.AddLeaderCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.UPAWebService.RemoveLeaderCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OfficeDevPnP.Core.WebAPI.WebAPIContexCacheItem">
            <summary>
            This class holds the information that's being cached as part of the WebAPI service implementation
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.WebAPI.WebAPIContexCacheItem.AccessToken">
            <summary>
            The SharePoint Access token
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.WebAPI.WebAPIContexCacheItem.RefreshToken">
            <summary>
            The SharePoint Refresh token
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.WebAPI.WebAPIContexCacheItem.SharePointServiceContext">
            <summary>
            The information initially used to register the SharePoint app to the WebAPI service
            </summary>
        </member>
        <member name="T:OfficeDevPnP.Core.WebAPI.WebAPIContext">
            <summary>
            This class holds the information that's passed from the SharePoint app to the "Register" WebAPI service call
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.WebAPI.WebAPIContext.CacheKey">
            <summary>
            The cacheKey that will be used. The cache key is unique for each combination of user name, user name issuer, application, and farm. 
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.WebAPI.WebAPIContext.Token">
            <summary>
            The SharePoint context token. This will be used at the WebAPI level to obtain an access token
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.WebAPI.WebAPIContext.HostWebUrl">
            <summary>
            Url of the SharePoint host web. Needed to obtain an access token
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.WebAPI.WebAPIContext.AppWebUrl">
            <summary>
            Url if the SharePoint app web. Needed to obtain an access token
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.WebAPI.WebAPIContext.ClientId">
            <summary>
            ClientId of the SharePoint app that's being registered. Needed to obtain an access token
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.WebAPI.WebAPIContext.ClientSecret">
            <summary>
            ClientSecret of the SharePoint app that's being registered. Needed to obtain an access token
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.WebAPI.WebAPIContext.HostedAppHostName">
            <summary>
            If the AppWebUrl is null then this value will be used. Needed to obtain an access token
            </summary>
        </member>
        <member name="T:OfficeDevPnP.Core.WebAPI.WebAPIContextCache">
            <summary>
            Simple cache implementation based on the singleton pattern. Caches the SharePoint access token, refresh token and the information passed 
            during service "registration". All of this information is wrapped in a <see cref="T:OfficeDevPnP.Core.WebAPI.WebAPIContexCacheItem"/> object.
            </summary>
        </member>
        <member name="M:OfficeDevPnP.Core.WebAPI.WebAPIContextCache.Put(System.String,OfficeDevPnP.Core.WebAPI.WebAPIContexCacheItem)">
            <summary>
            Adds an item to the cache. Updates if the item already existed
            </summary>
            <param name="cacheKey">Key to cache the item</param>
            <param name="sharePointServiceContextCacheItem">A <see cref="T:OfficeDevPnP.Core.WebAPI.WebAPIContexCacheItem"/> object</param>
        </member>
        <member name="M:OfficeDevPnP.Core.WebAPI.WebAPIContextCache.Get(System.String)">
            <summary>
            Gets an item from the cache
            </summary>
            <param name="cacheKey">Key to retrieve an item from cache</param>
            <returns>A <see cref="T:OfficeDevPnP.Core.WebAPI.WebAPIContexCacheItem"/> object</returns>
        </member>
        <member name="P:OfficeDevPnP.Core.WebAPI.WebAPIContextCache.Instance">
            <summary>
            Singleton instance to access this class
            </summary>
        </member>
        <member name="T:OfficeDevPnP.Core.WebAPI.WebAPIHelper">
            <summary>
            This class provides helper methods that can be used to protect WebAPI services and to provide a 
            way to reinstantiate a contextobject in the service call.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.WebAPI.WebAPIHelper.SERVICES_TOKEN">
            <summary>
            This is the name of the cookie that will hold the cachekey.
            </summary>
        </member>
        <member name="M:OfficeDevPnP.Core.WebAPI.WebAPIHelper.HasCacheEntry(System.Web.Http.Controllers.HttpControllerContext)">
            <summary>
            Checks if this request has a servicesToken cookie. To be used from inside the WebAPI.
            </summary>
            <param name="httpControllerContext">Information about the HTTP request that reached the WebAPI controller</param>
            <returns>True if cookie is available and not empty, false otherwise</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.WebAPI.WebAPIHelper.GetClientContext(System.Web.Http.Controllers.HttpControllerContext)">
            <summary>
            Creates a ClientContext token for the incoming WebAPI request. This is done by 
            - looking up the servicesToken
            - extracting the cacheKey 
            - get the AccessToken from cache. If the AccessToken is expired a new one is requested using the refresh token
            - creation of a ClientContext object based on the AccessToken
            </summary>
            <param name="httpControllerContext">Information about the HTTP request that reached the WebAPI controller</param>
            <returns>A valid ClientContext object</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.WebAPI.WebAPIHelper.AddToCache(OfficeDevPnP.Core.WebAPI.WebAPIContext)">
            <summary>
            Uses the information regarding the requesting app to obtain an access token and caches that using the cachekey.
            This method is called from the Register WebAPI service api.
            </summary>
            <param name="sharePointServiceContext">Object holding information about the requesting SharePoint app</param>
        </member>
        <member name="M:OfficeDevPnP.Core.WebAPI.WebAPIHelper.RegisterWebAPIService(System.Web.UI.Page,System.String,System.Uri)">
            <summary>
            This method needs to be called from a code behind of the SharePoint app startup page (default.aspx). It registers the calling
            SharePoint app by calling a specific "Register" api in your WebAPI service.
            
            Note:
            Given that method is async you'll need to add the  Async="true" page directive to the page that uses this method.
            </summary>
            <param name="page">The page object, needed to insert the services token cookie and read the querystring</param>
            <param name="apiRequest">Route to the "Register" API</param>
            <param name="serviceEndPoint">Optional Uri to the WebAPI service endpoint. If null then the assumption is taken that the WebAPI is hosted together with the page making this call</param>
        </member>
        <member name="T:OfficeDevPnP.Core.Utilities.CAML">
            <summary>
            Use this class to build your CAML xml and avoid XML issues.
            </summary>
            <example>
            CAML.ViewQuery(
                CAML.Where(
                    CAML.And(
                        CAML.Eq(CAML.FieldValue("Project", "Integer", "{0}")),
                        CAML.Geq(CAML.FieldValue("StartDate","DateTime", CAML.Today()))
                    )
                ),
                CAML.OrderBy(
                    new OrderByField("StartDate", false),
                    new OrderByField("Title")
                ),
                rowLimit: 5
            );
            </example>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.CAML.Today(System.Nullable{System.Int32})">
            <summary>
            Creates the &lt;Today /&gt; node.
            </summary>
            <param name="offset">Time offset from today (+5 days or -5 days, for example).</param>
            <returns></returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.CAML.ViewQuery(System.String,System.String,System.Int32)">
            <summary>
            Root &lt;View&gt; and &lt;Query&gt; nodes.
            </summary>
            <param name="whereClause">&lt;Where&gt; node.</param>
            <param name="orderByClause">&lt;OrderBy&gt; node.</param>
            <param name="rowLimit">&lt;RowLimit&gt; node.</param>
            <returns>String to be used in CAML queries</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.CAML.FieldValue(System.String,System.String,System.String,System.String)">
            <summary>
            Creates both a &lt;FieldRef&gt; and &lt;Value&gt; nodes combination for Where clauses.
            </summary>
            <param name="fieldName"></param>
            <param name="fieldValueType"></param>
            <param name="value"></param>
            <param name="additionalFieldRefParams"></param>
            <returns></returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.CAML.FieldValue(System.Guid,System.String,System.String,System.String)">
            <summary>
            Creates both a &lt;FieldRef&gt; and &lt;Value&gt; nodes combination for Where clauses.
            </summary>
            <param name="fieldId"></param>
            <param name="fieldValueType"></param>
            <param name="value"></param>
            <param name="additionalFieldRefParams"></param>
            <returns></returns>
        </member>
        <member name="T:System.UrlUtility">
            <summary>
            Static methods to modify URL paths.
            </summary>
        </member>
        <member name="M:System.UrlUtility.Combine(System.String,System.String[])">
            <summary>
            Combines a path and a relative path.
            </summary>
            <param name="path"></param>
            <param name="relativePaths"></param>
            <returns></returns>
        </member>
        <member name="M:System.UrlUtility.Combine(System.String,System.String)">
            <summary>
            Combines a path and a relative path.
            </summary>
            <param name="path"></param>
            <param name="relative"></param>
            <returns></returns>
        </member>
        <member name="M:System.UrlUtility.AppendQueryString(System.String,System.String)">
            <summary>
            Adds query string parameters to the end of a querystring and guarantees the proper concatenation with <b>?</b> and <b>&amp;.</b>
            </summary>
            <param name="path"></param>
            <param name="queryString"></param>
            <returns></returns>
        </member>
        <member name="M:System.UrlUtility.EnsureTrailingSlash(System.String)">
            <summary>
            Ensures that there is a trailing slash at the end of the url
            </summary>
            <param name="urlToProcess"></param>
            <returns></returns>
        </member>
        <member name="T:OfficeDevPnP.Core.Utilities.EncryptionUtility">
            <summary>
            Utility class that support certificate based encryption/decryption
            </summary>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.EncryptionUtility.Encrypt(System.String,System.String)">
            <summary>
            Encrypt a piece of text based on a given certificate
            </summary>
            <param name="stringToEncrypt">Text to encrypt</param>
            <param name="thumbPrint">Thumbprint of the certificate to use</param>
            <returns>Encrypted text</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.EncryptionUtility.Decrypt(System.String,System.String)">
            <summary>
            Decrypt a piece of text based on a given certificate
            </summary>
            <param name="stringToDecrypt">Text to decrypt</param>
            <param name="thumbPrint">Thumbprint of the certificate to use</param>
            <returns>Decrypted text</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.EncryptionUtility.EncryptStringWithDPAPI(System.Security.SecureString)">
            <summary>
            Encrypts a string using the machine's DPAPI
            </summary>
            <param name="input">String (SecureString) to encrypt</param>
            <returns>Encrypted string</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.EncryptionUtility.DecryptStringWithDPAPI(System.String)">
            <summary>
            Decrypts a DPAPI encryped string
            </summary>
            <param name="encryptedData">Encrypted string</param>
            <returns>Decrypted (SecureString)string</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.EncryptionUtility.ToSecureString(System.String)">
            <summary>
            Converts a string to a SecureString
            </summary>
            <param name="input">String to convert</param>
            <returns>SecureString representation of the passed in string</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.EncryptionUtility.ToInsecureString(System.Security.SecureString)">
            <summary>
            Converts a SecureString to a "regular" string
            </summary>
            <param name="input">SecureString to convert</param>
            <returns>A "regular" string representation of the passed SecureString</returns>
        </member>
        <member name="T:OfficeDevPnP.Core.Utilities.JsonUtility">
            <summary>
            Utility class that supports the serialization from Json to type and vice versa
            </summary>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.JsonUtility.Serialize``1(``0)">
            <summary>
            Serializes an object of type T to a json string
            </summary>
            <typeparam name="T">Type of obj</typeparam>
            <param name="obj">Object to serialize</param>
            <returns>json string</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.JsonUtility.Deserialize``1(System.String)">
            <summary>
            Deserializes a json string to an object of type T
            </summary>
            <typeparam name="T">Type of the returned object</typeparam>
            <param name="json">json string</param>
            <returns>Object of type T</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.MailUtility.SendEmail(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.Boolean,System.Object)">
            <summary>
            Sends an email via Office 365 SMTP
            </summary>
            <param name="servername">Office 365 SMTP address. By default this is smtp.office365.com.</param>
            <param name="fromAddress">The user setting up the SMTP connection. This user must have an EXO license.</param>
            <param name="fromUserPassword">The password of the user.</param>
            <param name="to">List of TO addresses.</param>
            <param name="cc">List of CC addresses.</param>
            <param name="subject">Subject of the mail.</param>
            <param name="body">HTML body of the mail.</param>
            <param name="sendAsync">Sends the email asynchronous so as to not block the current thread (default: false).</param>
            <param name="asyncUserToken">The user token that is used to correlate the asynchronous email message.</param>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.MailUtility.SendEmail(System.String,System.String,System.Security.SecureString,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.Boolean,System.Object)">
            <summary>
            Sends an email via Office 365 SMTP
            </summary>
            <param name="servername">Office 365 SMTP address. By default this is smtp.office365.com.</param>
            <param name="fromAddress">The user setting up the SMTP connection. This user must have an EXO license.</param>
            <param name="fromUserPassword">The secure password of the user.</param>
            <param name="to">List of TO addresses.</param>
            <param name="cc">List of CC addresses.</param>
            <param name="subject">Subject of the mail.</param>
            <param name="body">HTML body of the mail.</param>
            <param name="sendAsync">Sends the email asynchronous so as to not block the current thread (default: false).</param>
            <param name="asyncUserToken">The user token that is used to correlate the asynchronous email message.</param>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.MailUtility.SendEmail(Microsoft.SharePoint.Client.ClientContext,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.String,System.String)">
            <summary>
            Sends an email using the SharePoint SendEmail method
            </summary>
            <param name="context">Context for SharePoint objects and operations</param>
            <param name="to">List of TO addresses.</param>
            <param name="cc">List of CC addresses.</param>
            <param name="subject">Subject of the mail.</param>
            <param name="body">HTML body of the mail.</param>
        </member>
        <member name="F:OfficeDevPnP.Core.Utilities.TokenHelper.SharePointPrincipal">
            <summary>
            SharePoint principal.
            </summary>
        </member>
        <member name="F:OfficeDevPnP.Core.Utilities.TokenHelper.HighTrustAccessTokenLifetime">
            <summary>
            Lifetime of HighTrust access token, 12 hours.
            </summary>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.TokenHelper.GetContextTokenFromRequest(System.Web.HttpRequest)">
            <summary>
            Retrieves the context token string from the specified request by looking for well-known parameter names in the 
            POSTed form parameters and the querystring. Returns null if no context token is found.
            </summary>
            <param name="request">HttpRequest in which to look for a context token</param>
            <returns>The context token string</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.TokenHelper.GetContextTokenFromRequest(System.Web.HttpRequestBase)">
            <summary>
            Retrieves the context token string from the specified request by looking for well-known parameter names in the 
            POSTed form parameters and the querystring. Returns null if no context token is found.
            </summary>
            <param name="request">HttpRequest in which to look for a context token</param>
            <returns>The context token string</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.TokenHelper.ReadAndValidateContextToken(System.String,System.String)">
            <summary>
            Validate that a specified context token string is intended for this application based on the parameters 
            specified in web.config. Parameters used from web.config used for validation include ClientId, 
            HostedAppHostNameOverride, HostedAppHostName, ClientSecret, and Realm (if it is specified). If HostedAppHostNameOverride is present,
            it will be used for validation. Otherwise, if the <paramref name="appHostName"/> is not 
            null, it is used for validation instead of the web.config's HostedAppHostName. If the token is invalid, an 
            exception is thrown. If the token is valid, TokenHelper's static STS metadata url is updated based on the token contents
            and a JsonWebSecurityToken based on the context token is returned.
            </summary>
            <param name="contextTokenString">The context token to validate</param>
            <param name="appHostName">The URL authority, consisting of  Domain Name System (DNS) host name or IP address and the port number, to use for token audience validation.
            If null, HostedAppHostName web.config setting is used instead. HostedAppHostNameOverride web.config setting, if present, will be used 
            for validation instead of <paramref name="appHostName"/> .</param>
            <returns>A JsonWebSecurityToken based on the context token.</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.TokenHelper.GetAccessToken(OfficeDevPnP.Core.Utilities.SharePointContextToken,System.String)">
            <summary>
            Retrieves an access token from ACS to call the source of the specified context token at the specified 
            targetHost. The targetHost must be registered for the principal that sent the context token.
            </summary>
            <param name="contextToken">Context token issued by the intended access token audience</param>
            <param name="targetHost">Url authority of the target principal</param>
            <returns>An access token with an audience matching the context token's source</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.TokenHelper.GetAccessToken(System.String,System.String,System.String,System.String,System.Uri)">
            <summary>
            Uses the specified authorization code to retrieve an access token from ACS to call the specified principal 
            at the specified targetHost. The targetHost must be registered for target principal.  If specified realm is 
            null, the "Realm" setting in web.config will be used instead.
            </summary>
            <param name="authorizationCode">Authorization code to exchange for access token</param>
            <param name="targetPrincipalName">Name of the target principal to retrieve an access token for</param>
            <param name="targetHost">Url authority of the target principal</param>
            <param name="targetRealm">Realm to use for the access token's nameid and audience</param>
            <param name="redirectUri">Redirect URI registered for this app</param>
            <returns>An access token with an audience of the target principal</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.TokenHelper.GetAccessToken(System.String,System.String,System.String,System.String)">
            <summary>
            Uses the specified refresh token to retrieve an access token from ACS to call the specified principal 
            at the specified targetHost. The targetHost must be registered for target principal.  If specified realm is 
            null, the "Realm" setting in web.config will be used instead.
            </summary>
            <param name="refreshToken">Refresh token to exchange for access token</param>
            <param name="targetPrincipalName">Name of the target principal to retrieve an access token for</param>
            <param name="targetHost">Url authority of the target principal</param>
            <param name="targetRealm">Realm to use for the access token's nameid and audience</param>
            <returns>An access token with an audience of the target principal</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.TokenHelper.GetAppOnlyAccessToken(System.String,System.String,System.String)">
            <summary>
            Retrieves an app-only access token from ACS to call the specified principal 
            at the specified targetHost. The targetHost must be registered for target principal.  If specified realm is 
            null, the "Realm" setting in web.config will be used instead.
            </summary>
            <param name="targetPrincipalName">Name of the target principal to retrieve an access token for</param>
            <param name="targetHost">Url authority of the target principal</param>
            <param name="targetRealm">Realm to use for the access token's nameid and audience</param>
            <returns>An access token with an audience of the target principal</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.TokenHelper.CreateRemoteEventReceiverClientContext(Microsoft.SharePoint.Client.EventReceivers.SPRemoteEventProperties)">
            <summary>
            Creates a client context based on the properties of a remote event receiver
            </summary>
            <param name="properties">Properties of a remote event receiver</param>
            <returns>A ClientContext ready to call the web where the event originated</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.TokenHelper.CreateAppEventClientContext(Microsoft.SharePoint.Client.EventReceivers.SPRemoteEventProperties,System.Boolean)">
            <summary>
            Creates a client context based on the properties of an app event
            </summary>
            <param name="properties">Properties of an app event</param>
            <param name="useAppWeb">True to target the app web, false to target the host web</param>
            <returns>A ClientContext ready to call the app web or the parent web</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.TokenHelper.GetClientContextWithAuthorizationCode(System.String,System.String,System.Uri)">
            <summary>
            Retrieves an access token from ACS using the specified authorization code, and uses that access token to 
            create a client context
            </summary>
            <param name="targetUrl">Url of the target SharePoint site</param>
            <param name="authorizationCode">Authorization code to use when retrieving the access token from ACS</param>
            <param name="redirectUri">Redirect URI registered for this app</param>
            <returns>A ClientContext ready to call targetUrl with a valid access token</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.TokenHelper.GetClientContextWithAuthorizationCode(System.String,System.String,System.String,System.String,System.Uri)">
            <summary>
            Retrieves an access token from ACS using the specified authorization code, and uses that access token to 
            create a client context
            </summary>
            <param name="targetUrl">Url of the target SharePoint site</param>
            <param name="targetPrincipalName">Name of the target SharePoint principal</param>
            <param name="authorizationCode">Authorization code to use when retrieving the access token from ACS</param>
            <param name="targetRealm">Realm to use for the access token's nameid and audience</param>
            <param name="redirectUri">Redirect URI registered for this app</param>
            <returns>A ClientContext ready to call targetUrl with a valid access token</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.TokenHelper.GetClientContextWithAccessToken(System.String,System.String)">
            <summary>
            Uses the specified access token to create a client context
            </summary>
            <param name="targetUrl">Url of the target SharePoint site</param>
            <param name="accessToken">Access token to be used when calling the specified targetUrl</param>
            <returns>A ClientContext ready to call targetUrl with the specified access token</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.TokenHelper.GetClientContextWithContextToken(System.String,System.String,System.String)">
            <summary>
            Retrieves an access token from ACS using the specified context token, and uses that access token to create
            a client context
            </summary>
            <param name="targetUrl">Url of the target SharePoint site</param>
            <param name="contextTokenString">Context token received from the target SharePoint site</param>
            <param name="appHostUrl">Url authority of the hosted app.  If this is null, the value in the HostedAppHostName
            of web.config will be used instead</param>
            <returns>A ClientContext ready to call targetUrl with a valid access token</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.TokenHelper.GetAuthorizationUrl(System.String,System.String)">
            <summary>
            Returns the SharePoint url to which the app should redirect the browser to request consent and get back
            an authorization code.
            </summary>
            <param name="contextUrl">Absolute Url of the SharePoint site</param>
            <param name="scope">Space-delimited permissions to request from the SharePoint site in "shorthand" format 
            (e.g. "Web.Read Site.Write")</param>
            <returns>Url of the SharePoint site's OAuth authorization page</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.TokenHelper.GetAuthorizationUrl(System.String,System.String,System.String)">
            <summary>
            Returns the SharePoint url to which the app should redirect the browser to request consent and get back
            an authorization code.
            </summary>
            <param name="contextUrl">Absolute Url of the SharePoint site</param>
            <param name="scope">Space-delimited permissions to request from the SharePoint site in "shorthand" format
            (e.g. "Web.Read Site.Write")</param>
            <param name="redirectUri">Uri to which SharePoint should redirect the browser to after consent is 
            granted</param>
            <returns>Url of the SharePoint site's OAuth authorization page</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.TokenHelper.GetAppContextTokenRequestUrl(System.String,System.String)">
            <summary>
            Returns the SharePoint url to which the app should redirect the browser to request a new context token.
            </summary>
            <param name="contextUrl">Absolute Url of the SharePoint site</param>
            <param name="redirectUri">Uri to which SharePoint should redirect the browser to with a context token</param>
            <returns>Url of the SharePoint site's context token redirect page</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.TokenHelper.GetS2SAccessTokenWithWindowsIdentity(System.Uri,System.Security.Principal.WindowsIdentity)">
            <summary>
            Retrieves an S2S access token signed by the application's private certificate on behalf of the specified 
            WindowsIdentity and intended for the SharePoint at the targetApplicationUri. If no Realm is specified in 
            web.config, an auth challenge will be issued to the targetApplicationUri to discover it.
            </summary>
            <param name="targetApplicationUri">Url of the target SharePoint site</param>
            <param name="identity">Windows identity of the user on whose behalf to create the access token</param>
            <returns>An access token with an audience of the target principal</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.TokenHelper.GetS2SClientContextWithWindowsIdentity(System.Uri,System.Security.Principal.WindowsIdentity)">
            <summary>
            Retrieves an S2S client context with an access token signed by the application's private certificate on 
            behalf of the specified WindowsIdentity and intended for application at the targetApplicationUri using the 
            targetRealm. If no Realm is specified in web.config, an auth challenge will be issued to the 
            targetApplicationUri to discover it.
            </summary>
            <param name="targetApplicationUri">Url of the target SharePoint site</param>
            <param name="identity">Windows identity of the user on whose behalf to create the access token</param>
            <returns>A ClientContext using an access token with an audience of the target application</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.TokenHelper.GetRealmFromTargetUrl(System.Uri)">
            <summary>
            Get authentication realm from SharePoint
            </summary>
            <param name="targetApplicationUri">Url of the target SharePoint site</param>
            <returns>String representation of the realm GUID</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.TokenHelper.IsHighTrustApp">
            <summary>
            Determines if this is a high trust app.
            </summary>
            <returns>True if this is a high trust app.</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.TokenHelper.EnsureTrailingSlash(System.String)">
            <summary>
            Ensures that the specified URL ends with '/' if it is not null or empty.
            </summary>
            <param name="url">The url.</param>
            <returns>The url ending with '/' if it is not null or empty.</returns>
        </member>
        <member name="T:OfficeDevPnP.Core.Utilities.SharePointContextToken">
            <summary>
            A JsonWebSecurityToken generated by SharePoint to authenticate to a 3rd party application and allow callbacks using a refresh token
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Utilities.SharePointContextToken.TargetPrincipalName">
            <summary>
            The principal name portion of the context token's "appctxsender" claim
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Utilities.SharePointContextToken.RefreshToken">
            <summary>
            The context token's "refreshtoken" claim
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Utilities.SharePointContextToken.CacheKey">
            <summary>
            The context token's "CacheKey" claim
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Utilities.SharePointContextToken.SecurityTokenServiceUri">
            <summary>
            The context token's "SecurityTokenServiceUri" claim
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Utilities.SharePointContextToken.Realm">
            <summary>
            The realm portion of the context token's "audience" claim
            </summary>
        </member>
        <member name="T:OfficeDevPnP.Core.Utilities.MultipleSymmetricKeySecurityToken">
            <summary>
            Represents a security token which contains multiple security keys that are generated using symmetric algorithms.
            </summary>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.MultipleSymmetricKeySecurityToken.#ctor(System.Collections.Generic.IEnumerable{System.Byte[]})">
            <summary>
            Initializes a new instance of the MultipleSymmetricKeySecurityToken class.
            </summary>
            <param name="keys">An enumeration of Byte arrays that contain the symmetric keys.</param>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.MultipleSymmetricKeySecurityToken.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Byte[]})">
            <summary>
            Initializes a new instance of the MultipleSymmetricKeySecurityToken class.
            </summary>
            <param name="tokenId">The unique identifier of the security token.</param>
            <param name="keys">An enumeration of Byte arrays that contain the symmetric keys.</param>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.MultipleSymmetricKeySecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
            <summary>
            Returns a value that indicates whether the key identifier for this instance can be resolved to the specified key identifier.
            </summary>
            <param name="keyIdentifierClause">A SecurityKeyIdentifierClause to compare to this instance</param>
            <returns>true if keyIdentifierClause is a SecurityKeyIdentifierClause and it has the same unique identifier as the Id property; otherwise, false.</returns>
        </member>
        <member name="P:OfficeDevPnP.Core.Utilities.MultipleSymmetricKeySecurityToken.Id">
            <summary>
            Gets the unique identifier of the security token.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Utilities.MultipleSymmetricKeySecurityToken.SecurityKeys">
            <summary>
            Gets the cryptographic keys associated with the security token.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Utilities.MultipleSymmetricKeySecurityToken.ValidFrom">
            <summary>
            Gets the first instant in time at which this security token is valid.
            </summary>
        </member>
        <member name="P:OfficeDevPnP.Core.Utilities.MultipleSymmetricKeySecurityToken.ValidTo">
            <summary>
            Gets the last instant in time at which this security token is valid.
            </summary>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.Utility.EnsureSite(Microsoft.SharePoint.Client.ClientRuntimeContext,Microsoft.SharePoint.Client.Site,System.String)">
            <summary>
            Check if the property is loaded on the site object, if not the site object will be reloaded
            </summary>
            <param name="cc">Context to execute upon</param>
            <param name="site">Site to execute upon</param>
            <param name="propertyToCheck">Property to check</param>
            <returns>A reloaded site object</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.Utility.EnsureWeb(Microsoft.SharePoint.Client.ClientRuntimeContext,Microsoft.SharePoint.Client.Web,System.String)">
            <summary>
            Check if the property is loaded on the web object, if not the web object will be reloaded
            </summary>
            <param name="cc">Context to execute upon</param>
            <param name="web">Web to execute upon</param>
            <param name="propertyToCheck">Property to check</param>
            <returns>A reloaded web object</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.Utility.GetHealthScore(System.String)">
            <summary>
            Returns the healthscore for a SharePoint Server
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="T:OfficeDevPnP.Core.Utilities.X509CertificateUtility">
            <summary>
            Supporting class for certificate based operations
            </summary>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.X509CertificateUtility.LoadCertificate(System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.StoreLocation,System.String)">
            <summary>
            Loads a certificate from a given certificate store
            </summary>
            <param name="storeName">Name of the certificate store</param>
            <param name="storeLocation">Location of the certificate store</param>
            <param name="thumbprint">Thumbprint of the certificate to load</param>
            <returns>An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2"/> certificate</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.X509CertificateUtility.Encrypt(System.Byte[],System.Boolean,System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Encrypts data based on the RSACryptoServiceProvider
            </summary>
            <param name="plainData">Bytes to encrypt</param>
            <param name="fOAEP"> true to perform direct System.Security.Cryptography.RSA decryption using OAEP padding</param>
            <param name="certificate">Certificate to use</param>
            <returns>Encrypted bytes</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.X509CertificateUtility.Decrypt(System.Byte[],System.Boolean,System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Decrypts data based on the RSACryptoServiceProvider
            </summary>
            <param name="encryptedData">Bytes to decrypt</param>
            <param name="fOAEP"> true to perform direct System.Security.Cryptography.RSA decryption using OAEP padding</param>
            <param name="certificate">Certificate to use</param>
            <returns>Decrypted bytes</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.X509CertificateUtility.GetPublicKey(System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Returns the certificate public key
            </summary>
            <param name="certificate">Certificate to operate on</param>
            <returns>Public key of the certificate</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.YammerUtility.GetYammerGroupByName(System.String,System.String)">
            <summary>
            Returns Yammer Group if group exists. If the group does not exist, returns null.
            </summary>
            <param name="groupName">Group name to search for</param>
            <param name="accessToken"></param>
            <returns>Returns Yammer Group is group exists. If group does not exists, returns null.</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.YammerUtility.GetYammerGroupById(System.Int32,System.String)">
            <summary>
            Returns Yammer Group if group exists. If the group does not exist, returns null.
            </summary>
            <param name="groupId">Group Id to search for</param>
            <param name="accessToken"></param>
            <returns>Returns Yammer Group is group exists. If group does not exists, returns null.</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.YammerUtility.GetYammerGroups(System.String)">
            <summary>
            Returns Yammer groups based on the access token. All groups are returned for registered apps.
            </summary>
            <param name="accessToken">Access token to the Yammer network</param>
            <returns>All groups in the network</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.YammerUtility.CreateYammerGroup(System.String,System.Boolean,System.String)">
            <summary>
            Can be used to create Yammer group to the Yammer network
            </summary>
            <param name="groupName"></param>
            <param name="isPrivate"></param>
            <param name="accessToken"></param>
            <returns></returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.YammerUtility.GetYammerGroupDiscussionPart(System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Creates web part entity with the Yammer group structure on it
            </summary>
            <param name="yammerNetworkName"></param>
            <param name="yammerGroupId"></param>
            <param name="showHeader"></param>
            <param name="showFooter"></param>
            <returns></returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.YammerUtility.GetYammerOpenGraphDiscussionPart(System.String,System.String,System.Boolean,System.Boolean,System.String,System.String,System.String)">
            <summary>
            Creates web part entity with the Yammer OpenGraph structure on it for specific URL
            </summary>
            <param name="yammerNetworkName"></param>
            <param name="url"></param>
            <param name="showHeader"></param>
            <param name="showFooter"></param>
            <param name="postTitle"></param>
            <param name="postImageUrl"></param>
            <param name="defaultGroupId"></param>
            <returns></returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.YammerUtility.CreateYammerDiscussionPartXml(System.String,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Constructs the webpart XML for yammer group needed to inject as Yammer web part to SharePoint page
            </summary>
            <param name="yammerNetworkName">Name of the network</param>
            <param name="yammerGroupId">Group ID</param>
            <param name="showHeader"></param>
            <param name="showFooter"></param>
            <param name="useSSO"></param>
            <returns>The constructed web part XML</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.YammerUtility.CreateYammerGroupDiscussionPartXml(System.String,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Constructs the webpart XML for yammer group needed to inject as Yammer web part to SharePoint page
            </summary>
            <param name="yammerNetworkName">Name of the network</param>
            <param name="yammerGroupId">Group ID</param>
            <param name="showHeader"></param>
            <param name="showFooter"></param>
            <param name="useSSO"></param>
            <returns>The constructed web part XML</returns>
        </member>
        <member name="M:OfficeDevPnP.Core.Utilities.YammerUtility.CreateYammerOpenGraphDiscussionPartXml(System.String,System.String,System.Boolean,System.Boolean,System.String,System.String,System.Boolean,System.String)">
            <summary>
            Constructs web part definition for Open Graph discussion web part definition
            </summary>
            <param name="yammerNetworkName"></param>
            <param name="url"></param>
            <param name="showHeader"></param>
            <param name="showFooter"></param>
            <param name="postImageUrl"></param>
            <param name="useSso"></param>
            <param name="postTitle"></param>
            <param name="groupId"></param>
            <returns></returns>
        </member>
    </members>
</doc>
